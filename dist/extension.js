"use strict";var d0=Object.create;var Zr=Object.defineProperty;var o0=Object.getOwnPropertyDescriptor;var p0=Object.getOwnPropertyNames;var l0=Object.getPrototypeOf,m0=Object.prototype.hasOwnProperty;var qt=(t,e)=>()=>(t&&(e=t(t=0)),e);var de=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports),zd=(t,e)=>{for(var a in e)Zr(t,a,{get:e[a],enumerable:!0})},Gd=(t,e,a,r)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of p0(e))!m0.call(t,i)&&i!==a&&Zr(t,i,{get:()=>e[i],enumerable:!(r=o0(e,i))||r.enumerable});return t};var oe=(t,e,a)=>(a=t!=null?d0(l0(t)):{},Gd(e||!t||!t.__esModule?Zr(a,"default",{value:t,enumerable:!0}):a,t)),u0=t=>Gd(Zr({},"__esModule",{value:!0}),t);var io=de((Q4,ro)=>{"use strict";var Z={};ro.exports=Z;function ao(t){return t<0?-1:1}function T0(t){return t%1===.5&&!(t&1)?Math.floor(t):Math.round(t)}function $t(t,e){e.unsigned||--t;let a=e.unsigned?0:-Math.pow(2,t),r=Math.pow(2,t)-1,i=e.moduloBitLength?Math.pow(2,e.moduloBitLength):Math.pow(2,t),s=e.moduloBitLength?Math.pow(2,e.moduloBitLength-1):Math.pow(2,t-1);return function(n,d){d||(d={});let o=+n;if(d.enforceRange){if(!Number.isFinite(o))throw new TypeError("Argument is not a finite number");if(o=ao(o)*Math.floor(Math.abs(o)),o<a||o>r)throw new TypeError("Argument is not in byte range");return o}if(!isNaN(o)&&d.clamp)return o=T0(o),o<a&&(o=a),o>r&&(o=r),o;if(!Number.isFinite(o)||o===0)return 0;if(o=ao(o)*Math.floor(Math.abs(o)),o=o%i,!e.unsigned&&o>=s)return o-i;if(e.unsigned){if(o<0)o+=i;else if(o===-0)return 0}return o}}Z.void=function(){};Z.boolean=function(t){return!!t};Z.byte=$t(8,{unsigned:!1});Z.octet=$t(8,{unsigned:!0});Z.short=$t(16,{unsigned:!1});Z["unsigned short"]=$t(16,{unsigned:!0});Z.long=$t(32,{unsigned:!1});Z["unsigned long"]=$t(32,{unsigned:!0});Z["long long"]=$t(32,{unsigned:!1,moduloBitLength:64});Z["unsigned long long"]=$t(32,{unsigned:!0,moduloBitLength:64});Z.double=function(t){let e=+t;if(!Number.isFinite(e))throw new TypeError("Argument is not a finite floating-point value");return e};Z["unrestricted double"]=function(t){let e=+t;if(isNaN(e))throw new TypeError("Argument is NaN");return e};Z.float=Z.double;Z["unrestricted float"]=Z["unrestricted double"];Z.DOMString=function(t,e){return e||(e={}),e.treatNullAsEmptyString&&t===null?"":String(t)};Z.ByteString=function(t,e){let a=String(t),r;for(let i=0;(r=a.codePointAt(i))!==void 0;++i)if(r>255)throw new TypeError("Argument is not a valid bytestring");return a};Z.USVString=function(t){let e=String(t),a=e.length,r=[];for(let i=0;i<a;++i){let s=e.charCodeAt(i);if(s<55296||s>57343)r.push(String.fromCodePoint(s));else if(56320<=s&&s<=57343)r.push(String.fromCodePoint(65533));else if(i===a-1)r.push(String.fromCodePoint(65533));else{let n=e.charCodeAt(i+1);if(56320<=n&&n<=57343){let d=s&1023,o=n&1023;r.push(String.fromCodePoint(65536+1024*d+o)),++i}else r.push(String.fromCodePoint(65533))}}return r.join("")};Z.Date=function(t,e){if(!(t instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(t))return t};Z.RegExp=function(t,e){return t instanceof RegExp||(t=new RegExp(t)),t}});var so=de((Z4,Ht)=>{"use strict";Ht.exports.mixin=function(e,a){let r=Object.getOwnPropertyNames(a);for(let i=0;i<r.length;++i)Object.defineProperty(e,r[i],Object.getOwnPropertyDescriptor(a,r[i]))};Ht.exports.wrapperSymbol=Symbol("wrapper");Ht.exports.implSymbol=Symbol("impl");Ht.exports.wrapperForImpl=function(t){return t[Ht.exports.wrapperSymbol]};Ht.exports.implForWrapper=function(t){return t[Ht.exports.implSymbol]}});var no=de((e9,N0)=>{N0.exports=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]});var co=de((t9,si)=>{"use strict";var po=require("punycode"),oo=no(),Ya={TRANSITIONAL:0,NONTRANSITIONAL:1};function lo(t){return t.split("\0").map(function(e){return e.normalize("NFC")}).join("\0")}function mo(t){for(var e=0,a=oo.length-1;e<=a;){var r=Math.floor((e+a)/2),i=oo[r];if(i[0][0]<=t&&i[0][1]>=t)return i;i[0][0]>t?a=r-1:e=r+1}return null}var A0=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function uo(t){return t.replace(A0,"_").length}function R0(t,e,a){for(var r=!1,i="",s=uo(t),n=0;n<s;++n){var d=t.codePointAt(n),o=mo(d);switch(o[1]){case"disallowed":r=!0,i+=String.fromCodePoint(d);break;case"ignored":break;case"mapped":i+=String.fromCodePoint.apply(String,o[2]);break;case"deviation":a===Ya.TRANSITIONAL?i+=String.fromCodePoint.apply(String,o[2]):i+=String.fromCodePoint(d);break;case"valid":i+=String.fromCodePoint(d);break;case"disallowed_STD3_mapped":e?(r=!0,i+=String.fromCodePoint(d)):i+=String.fromCodePoint.apply(String,o[2]);break;case"disallowed_STD3_valid":e&&(r=!0),i+=String.fromCodePoint(d);break}}return{string:i,error:r}}var k0=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function x0(t,e){t.substr(0,4)==="xn--"&&(t=po.toUnicode(t),e=Ya.NONTRANSITIONAL);var a=!1;(lo(t)!==t||t[3]==="-"&&t[4]==="-"||t[0]==="-"||t[t.length-1]==="-"||t.indexOf(".")!==-1||t.search(k0)===0)&&(a=!0);for(var r=uo(t),i=0;i<r;++i){var s=mo(t.codePointAt(i));if(ii===Ya.TRANSITIONAL&&s[1]!=="valid"||ii===Ya.NONTRANSITIONAL&&s[1]!=="valid"&&s[1]!=="deviation"){a=!0;break}}return{label:t,error:a}}function ii(t,e,a){var r=R0(t,e,a);r.string=lo(r.string);for(var i=r.string.split("."),s=0;s<i.length;++s)try{var n=x0(i[s]);i[s]=n.label,r.error=r.error||n.error}catch{r.error=!0}return{string:i.join("."),error:r.error}}si.exports.toASCII=function(t,e,a,r){var i=ii(t,e,a),s=i.string.split(".");if(s=s.map(function(o){try{return po.toASCII(o)}catch{return i.error=!0,o}}),r){var n=s.slice(0,s.length-1).join(".").length;(n.length>253||n.length===0)&&(i.error=!0);for(var d=0;d<s.length;++d)if(s.length>63||s.length===0){i.error=!0;break}}return i.error?null:s.join(".")};si.exports.toUnicode=function(t,e){var a=ii(t,e,Ya.NONTRANSITIONAL);return{domain:a.string,error:a.error}};si.exports.PROCESSING_OPTIONS=Ya});var nt=de((a9,Oe)=>{"use strict";var Ka=require("punycode"),ho=co(),wo={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},F=Symbol("failure");function fo(t){return Ka.ucs2.decode(t).length}function vo(t,e){let a=t[e];return isNaN(a)?void 0:String.fromCodePoint(a)}function H1(t){return t>=48&&t<=57}function W1(t){return t>=65&&t<=90||t>=97&&t<=122}function P0(t){return W1(t)||H1(t)}function Ge(t){return H1(t)||t>=65&&t<=70||t>=97&&t<=102}function go(t){return t==="."||t.toLowerCase()==="%2e"}function I0(t){return t=t.toLowerCase(),t===".."||t==="%2e."||t===".%2e"||t==="%2e%2e"}function D0(t,e){return W1(t)&&(e===58||e===124)}function bo(t){return t.length===2&&W1(t.codePointAt(0))&&(t[1]===":"||t[1]==="|")}function O0(t){return t.length===2&&W1(t.codePointAt(0))&&t[1]===":"}function F0(t){return t.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)!==-1}function M0(t){return t.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)!==-1}function Ks(t){return wo[t]!==void 0}function le(t){return Ks(t.scheme)}function V0(t){return wo[t]}function yo(t){let e=t.toString(16).toUpperCase();return e.length===1&&(e="0"+e),"%"+e}function B0(t){let e=new Buffer(t),a="";for(let r=0;r<e.length;++r)a+=yo(e[r]);return a}function L0(t){let e=new Buffer(t),a=[];for(let r=0;r<e.length;++r)e[r]!==37?a.push(e[r]):e[r]===37&&Ge(e[r+1])&&Ge(e[r+2])?(a.push(parseInt(e.slice(r+1,r+3).toString(),16)),r+=2):a.push(e[r]);return new Buffer(a).toString()}function ni(t){return t<=31||t>126}var U0=new Set([32,34,35,60,62,63,96,123,125]);function _o(t){return ni(t)||U0.has(t)}var q0=new Set([47,58,59,61,64,91,92,93,94,124]);function Zs(t){return _o(t)||q0.has(t)}function ga(t,e){let a=String.fromCodePoint(t);return e(t)?B0(a):a}function j0(t){let e=10;return t.length>=2&&t.charAt(0)==="0"&&t.charAt(1).toLowerCase()==="x"?(t=t.substring(2),e=16):t.length>=2&&t.charAt(0)==="0"&&(t=t.substring(1),e=8),t===""?0:(e===10?/[^0-9]/:e===16?/[^0-9A-Fa-f]/:/[^0-7]/).test(t)?F:parseInt(t,e)}function $0(t){let e=t.split(".");if(e[e.length-1]===""&&e.length>1&&e.pop(),e.length>4)return t;let a=[];for(let s of e){if(s==="")return t;let n=j0(s);if(n===F)return t;a.push(n)}for(let s=0;s<a.length-1;++s)if(a[s]>255)return F;if(a[a.length-1]>=Math.pow(256,5-a.length))return F;let r=a.pop(),i=0;for(let s of a)r+=s*Math.pow(256,3-i),++i;return r}function H0(t){let e="",a=t;for(let r=1;r<=4;++r)e=String(a%256)+e,r!==4&&(e="."+e),a=Math.floor(a/256);return e}function W0(t){let e=[0,0,0,0,0,0,0,0],a=0,r=null,i=0;if(t=Ka.ucs2.decode(t),t[i]===58){if(t[i+1]!==58)return F;i+=2,++a,r=a}for(;i<t.length;){if(a===8)return F;if(t[i]===58){if(r!==null)return F;++i,++a,r=a;continue}let s=0,n=0;for(;n<4&&Ge(t[i]);)s=s*16+parseInt(vo(t,i),16),++i,++n;if(t[i]===46){if(n===0||(i-=n,a>6))return F;let d=0;for(;t[i]!==void 0;){let o=null;if(d>0)if(t[i]===46&&d<4)++i;else return F;if(!H1(t[i]))return F;for(;H1(t[i]);){let p=parseInt(vo(t,i));if(o===null)o=p;else{if(o===0)return F;o=o*10+p}if(o>255)return F;++i}e[a]=e[a]*256+o,++d,(d===2||d===4)&&++a}if(d!==4)return F;break}else if(t[i]===58){if(++i,t[i]===void 0)return F}else if(t[i]!==void 0)return F;e[a]=s,++a}if(r!==null){let s=a-r;for(a=7;a!==0&&s>0;){let n=e[r+s-1];e[r+s-1]=e[a],e[a]=n,--a,--s}}else if(r===null&&a!==8)return F;return e}function z0(t){let e="",r=X0(t).idx,i=!1;for(let s=0;s<=7;++s)if(!(i&&t[s]===0)){if(i&&(i=!1),r===s){e+=s===0?"::":":",i=!0;continue}e+=t[s].toString(16),s!==7&&(e+=":")}return e}function Qs(t,e){if(t[0]==="[")return t[t.length-1]!=="]"?F:W0(t.substring(1,t.length-1));if(!e)return G0(t);let a=L0(t),r=ho.toASCII(a,!1,ho.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(r===null||F0(r))return F;let i=$0(r);return typeof i=="number"||i===F?i:r}function G0(t){if(M0(t))return F;let e="",a=Ka.ucs2.decode(t);for(let r=0;r<a.length;++r)e+=ga(a[r],ni);return e}function X0(t){let e=null,a=1,r=null,i=0;for(let s=0;s<t.length;++s)t[s]!==0?(i>a&&(e=r,a=i),r=null,i=0):(r===null&&(r=s),++i);return i>a&&(e=r,a=i),{idx:e,len:a}}function en(t){return typeof t=="number"?H0(t):t instanceof Array?"["+z0(t)+"]":t}function J0(t){return t.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}function Y0(t){return t.replace(/\u0009|\u000A|\u000D/g,"")}function So(t){let e=t.path;e.length!==0&&(t.scheme==="file"&&e.length===1&&Q0(e[0])||e.pop())}function Co(t){return t.username!==""||t.password!==""}function K0(t){return t.host===null||t.host===""||t.cannotBeABaseURL||t.scheme==="file"}function Q0(t){return/^[A-Za-z]:$/.test(t)}function ee(t,e,a,r,i){if(this.pointer=0,this.input=t,this.base=e||null,this.encodingOverride=a||"utf-8",this.stateOverride=i,this.url=r,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};let n=J0(this.input);n!==this.input&&(this.parseError=!0),this.input=n}let s=Y0(this.input);for(s!==this.input&&(this.parseError=!0),this.input=s,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=Ka.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){let n=this.input[this.pointer],d=isNaN(n)?void 0:String.fromCodePoint(n),o=this["parse "+this.state](n,d);if(o){if(o===F){this.failure=!0;break}}else break}}ee.prototype["parse scheme start"]=function(e,a){if(W1(e))this.buffer+=a.toLowerCase(),this.state="scheme";else if(!this.stateOverride)this.state="no scheme",--this.pointer;else return this.parseError=!0,F;return!0};ee.prototype["parse scheme"]=function(e,a){if(P0(e)||e===43||e===45||e===46)this.buffer+=a.toLowerCase();else if(e===58){if(this.stateOverride&&(le(this.url)&&!Ks(this.buffer)||!le(this.url)&&Ks(this.buffer)||(Co(this.url)||this.url.port!==null)&&this.buffer==="file"||this.url.scheme==="file"&&(this.url.host===""||this.url.host===null))||(this.url.scheme=this.buffer,this.buffer="",this.stateOverride))return!1;this.url.scheme==="file"?((this.input[this.pointer+1]!==47||this.input[this.pointer+2]!==47)&&(this.parseError=!0),this.state="file"):le(this.url)&&this.base!==null&&this.base.scheme===this.url.scheme?this.state="special relative or authority":le(this.url)?this.state="special authority slashes":this.input[this.pointer+1]===47?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else if(!this.stateOverride)this.buffer="",this.state="no scheme",this.pointer=-1;else return this.parseError=!0,F;return!0};ee.prototype["parse no scheme"]=function(e){return this.base===null||this.base.cannotBeABaseURL&&e!==35?F:(this.base.cannotBeABaseURL&&e===35?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):this.base.scheme==="file"?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)};ee.prototype["parse special relative or authority"]=function(e){return e===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0};ee.prototype["parse path or authority"]=function(e){return e===47?this.state="authority":(this.state="path",--this.pointer),!0};ee.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):e===47?this.state="relative slash":e===63?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):e===35?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):le(this.url)&&e===92?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0};ee.prototype["parse relative slash"]=function(e){return le(this.url)&&(e===47||e===92)?(e===92&&(this.parseError=!0),this.state="special authority ignore slashes"):e===47?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer),!0};ee.prototype["parse special authority slashes"]=function(e){return e===47&&this.input[this.pointer+1]===47?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0};ee.prototype["parse special authority ignore slashes"]=function(e){return e!==47&&e!==92?(this.state="authority",--this.pointer):this.parseError=!0,!0};ee.prototype["parse authority"]=function(e,a){if(e===64){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;let r=fo(this.buffer);for(let i=0;i<r;++i){let s=this.buffer.codePointAt(i);if(s===58&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}let n=ga(s,Zs);this.passwordTokenSeenFlag?this.url.password+=n:this.url.username+=n}this.buffer=""}else if(isNaN(e)||e===47||e===63||e===35||le(this.url)&&e===92){if(this.atFlag&&this.buffer==="")return this.parseError=!0,F;this.pointer-=fo(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0};ee.prototype["parse hostname"]=ee.prototype["parse host"]=function(e,a){if(this.stateOverride&&this.url.scheme==="file")--this.pointer,this.state="file host";else if(e===58&&!this.arrFlag){if(this.buffer==="")return this.parseError=!0,F;let r=Qs(this.buffer,le(this.url));if(r===F)return F;if(this.url.host=r,this.buffer="",this.state="port",this.stateOverride==="hostname")return!1}else if(isNaN(e)||e===47||e===63||e===35||le(this.url)&&e===92){if(--this.pointer,le(this.url)&&this.buffer==="")return this.parseError=!0,F;if(this.stateOverride&&this.buffer===""&&(Co(this.url)||this.url.port!==null))return this.parseError=!0,!1;let r=Qs(this.buffer,le(this.url));if(r===F)return F;if(this.url.host=r,this.buffer="",this.state="path start",this.stateOverride)return!1}else e===91?this.arrFlag=!0:e===93&&(this.arrFlag=!1),this.buffer+=a;return!0};ee.prototype["parse port"]=function(e,a){if(H1(e))this.buffer+=a;else if(isNaN(e)||e===47||e===63||e===35||le(this.url)&&e===92||this.stateOverride){if(this.buffer!==""){let r=parseInt(this.buffer);if(r>Math.pow(2,16)-1)return this.parseError=!0,F;this.url.port=r===V0(this.url.scheme)?null:r,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}else return this.parseError=!0,F;return!0};var Z0=new Set([47,92,63,35]);ee.prototype["parse file"]=function(e){return this.url.scheme="file",e===47||e===92?(e===92&&(this.parseError=!0),this.state="file slash"):this.base!==null&&this.base.scheme==="file"?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):e===63?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):e===35?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1===0||!D0(e,this.input[this.pointer+1])||this.input.length-this.pointer-1>=2&&!Z0.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),So(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0};ee.prototype["parse file slash"]=function(e){return e===47||e===92?(e===92&&(this.parseError=!0),this.state="file host"):(this.base!==null&&this.base.scheme==="file"&&(O0(this.base.path[0])?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0};ee.prototype["parse file host"]=function(e,a){if(isNaN(e)||e===47||e===92||e===63||e===35)if(--this.pointer,!this.stateOverride&&bo(this.buffer))this.parseError=!0,this.state="path";else if(this.buffer===""){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let r=Qs(this.buffer,le(this.url));if(r===F)return F;if(r==="localhost"&&(r=""),this.url.host=r,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0};ee.prototype["parse path start"]=function(e){return le(this.url)?(e===92&&(this.parseError=!0),this.state="path",e!==47&&e!==92&&--this.pointer):!this.stateOverride&&e===63?(this.url.query="",this.state="query"):!this.stateOverride&&e===35?(this.url.fragment="",this.state="fragment"):e!==void 0&&(this.state="path",e!==47&&--this.pointer),!0};ee.prototype["parse path"]=function(e){if(isNaN(e)||e===47||le(this.url)&&e===92||!this.stateOverride&&(e===63||e===35)){if(le(this.url)&&e===92&&(this.parseError=!0),I0(this.buffer)?(So(this.url),e!==47&&!(le(this.url)&&e===92)&&this.url.path.push("")):go(this.buffer)&&e!==47&&!(le(this.url)&&e===92)?this.url.path.push(""):go(this.buffer)||(this.url.scheme==="file"&&this.url.path.length===0&&bo(this.buffer)&&(this.url.host!==""&&this.url.host!==null&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)),this.buffer="",this.url.scheme==="file"&&(e===void 0||e===63||e===35))for(;this.url.path.length>1&&this.url.path[0]==="";)this.parseError=!0,this.url.path.shift();e===63&&(this.url.query="",this.state="query"),e===35&&(this.url.fragment="",this.state="fragment")}else e===37&&(!Ge(this.input[this.pointer+1])||!Ge(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=ga(e,_o);return!0};ee.prototype["parse cannot-be-a-base-URL path"]=function(e){return e===63?(this.url.query="",this.state="query"):e===35?(this.url.fragment="",this.state="fragment"):(!isNaN(e)&&e!==37&&(this.parseError=!0),e===37&&(!Ge(this.input[this.pointer+1])||!Ge(this.input[this.pointer+2]))&&(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+ga(e,ni))),!0};ee.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&e===35){(!le(this.url)||this.url.scheme==="ws"||this.url.scheme==="wss")&&(this.encodingOverride="utf-8");let r=new Buffer(this.buffer);for(let i=0;i<r.length;++i)r[i]<33||r[i]>126||r[i]===34||r[i]===35||r[i]===60||r[i]===62?this.url.query+=yo(r[i]):this.url.query+=String.fromCodePoint(r[i]);this.buffer="",e===35&&(this.url.fragment="",this.state="fragment")}else e===37&&(!Ge(this.input[this.pointer+1])||!Ge(this.input[this.pointer+2]))&&(this.parseError=!0),this.buffer+=a;return!0};ee.prototype["parse fragment"]=function(e){return isNaN(e)||(e===0?this.parseError=!0:(e===37&&(!Ge(this.input[this.pointer+1])||!Ge(this.input[this.pointer+2]))&&(this.parseError=!0),this.url.fragment+=ga(e,ni))),!0};function em(t,e){let a=t.scheme+":";if(t.host!==null?(a+="//",(t.username!==""||t.password!=="")&&(a+=t.username,t.password!==""&&(a+=":"+t.password),a+="@"),a+=en(t.host),t.port!==null&&(a+=":"+t.port)):t.host===null&&t.scheme==="file"&&(a+="//"),t.cannotBeABaseURL)a+=t.path[0];else for(let r of t.path)a+="/"+r;return t.query!==null&&(a+="?"+t.query),!e&&t.fragment!==null&&(a+="#"+t.fragment),a}function tm(t){let e=t.scheme+"://";return e+=en(t.host),t.port!==null&&(e+=":"+t.port),e}Oe.exports.serializeURL=em;Oe.exports.serializeURLOrigin=function(t){switch(t.scheme){case"blob":try{return Oe.exports.serializeURLOrigin(Oe.exports.parseURL(t.path[0]))}catch{return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return tm({scheme:t.scheme,host:t.host,port:t.port});case"file":return"file://";default:return"null"}};Oe.exports.basicURLParse=function(t,e){e===void 0&&(e={});let a=new ee(t,e.baseURL,e.encodingOverride,e.url,e.stateOverride);return a.failure?"failure":a.url};Oe.exports.setTheUsername=function(t,e){t.username="";let a=Ka.ucs2.decode(e);for(let r=0;r<a.length;++r)t.username+=ga(a[r],Zs)};Oe.exports.setThePassword=function(t,e){t.password="";let a=Ka.ucs2.decode(e);for(let r=0;r<a.length;++r)t.password+=ga(a[r],Zs)};Oe.exports.serializeHost=en;Oe.exports.cannotHaveAUsernamePasswordPort=K0;Oe.exports.serializeInteger=function(t){return String(t)};Oe.exports.parseURL=function(t,e){return e===void 0&&(e={}),Oe.exports.basicURLParse(t,{baseURL:e.baseURL,encodingOverride:e.encodingOverride})}});var To=de(Eo=>{"use strict";var te=nt();Eo.implementation=class{constructor(e){let a=e[0],r=e[1],i=null;if(r!==void 0&&(i=te.basicURLParse(r),i==="failure"))throw new TypeError("Invalid base URL");let s=te.basicURLParse(a,{baseURL:i});if(s==="failure")throw new TypeError("Invalid URL");this._url=s}get href(){return te.serializeURL(this._url)}set href(e){let a=te.basicURLParse(e);if(a==="failure")throw new TypeError("Invalid URL");this._url=a}get origin(){return te.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){te.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){te.cannotHaveAUsernamePasswordPort(this._url)||te.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){te.cannotHaveAUsernamePasswordPort(this._url)||te.setThePassword(this._url,e)}get host(){let e=this._url;return e.host===null?"":e.port===null?te.serializeHost(e.host):te.serializeHost(e.host)+":"+te.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||te.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return this._url.host===null?"":te.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||te.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return this._url.port===null?"":te.serializeInteger(this._url.port)}set port(e){te.cannotHaveAUsernamePasswordPort(this._url)||(e===""?this._url.port=null:te.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:this._url.path.length===0?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],te.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return this._url.query===null||this._url.query===""?"":"?"+this._url.query}set search(e){let a=this._url;if(e===""){a.query=null;return}let r=e[0]==="?"?e.substring(1):e;a.query="",te.basicURLParse(r,{url:a,stateOverride:"query"})}get hash(){return this._url.fragment===null||this._url.fragment===""?"":"#"+this._url.fragment}set hash(e){if(e===""){this._url.fragment=null;return}let a=e[0]==="#"?e.substring(1):e;this._url.fragment="",te.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}});var Ro=de((s9,z1)=>{"use strict";var Be=io(),Ao=so(),No=To(),H=Ao.implSymbol;function ce(t){if(!this||this[H]||!(this instanceof ce))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");let e=[];for(let a=0;a<arguments.length&&a<2;++a)e[a]=arguments[a];e[0]=Be.USVString(e[0]),e[1]!==void 0&&(e[1]=Be.USVString(e[1])),z1.exports.setup(this,e)}ce.prototype.toJSON=function(){if(!this||!z1.exports.is(this))throw new TypeError("Illegal invocation");let e=[];for(let a=0;a<arguments.length&&a<0;++a)e[a]=arguments[a];return this[H].toJSON.apply(this[H],e)};Object.defineProperty(ce.prototype,"href",{get(){return this[H].href},set(t){t=Be.USVString(t),this[H].href=t},enumerable:!0,configurable:!0});ce.prototype.toString=function(){if(!this||!z1.exports.is(this))throw new TypeError("Illegal invocation");return this.href};Object.defineProperty(ce.prototype,"origin",{get(){return this[H].origin},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"protocol",{get(){return this[H].protocol},set(t){t=Be.USVString(t),this[H].protocol=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"username",{get(){return this[H].username},set(t){t=Be.USVString(t),this[H].username=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"password",{get(){return this[H].password},set(t){t=Be.USVString(t),this[H].password=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"host",{get(){return this[H].host},set(t){t=Be.USVString(t),this[H].host=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"hostname",{get(){return this[H].hostname},set(t){t=Be.USVString(t),this[H].hostname=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"port",{get(){return this[H].port},set(t){t=Be.USVString(t),this[H].port=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"pathname",{get(){return this[H].pathname},set(t){t=Be.USVString(t),this[H].pathname=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"search",{get(){return this[H].search},set(t){t=Be.USVString(t),this[H].search=t},enumerable:!0,configurable:!0});Object.defineProperty(ce.prototype,"hash",{get(){return this[H].hash},set(t){t=Be.USVString(t),this[H].hash=t},enumerable:!0,configurable:!0});z1.exports={is(t){return!!t&&t[H]instanceof No.implementation},create(t,e){let a=Object.create(ce.prototype);return this.setup(a,t,e),a},setup(t,e,a){a||(a={}),a.wrapper=t,t[H]=new No.implementation(e,a),t[H][Ao.wrapperSymbol]=t},interface:ce,expose:{Window:{URL:ce},Worker:{URL:ce}}}});var ko=de(dt=>{"use strict";dt.URL=Ro().interface;dt.serializeURL=nt().serializeURL;dt.serializeURLOrigin=nt().serializeURLOrigin;dt.basicURLParse=nt().basicURLParse;dt.setTheUsername=nt().setTheUsername;dt.setThePassword=nt().setThePassword;dt.serializeHost=nt().serializeHost;dt.serializeInteger=nt().serializeInteger;dt.parseURL=nt().parseURL});var qo=de((Je,Uo)=>{"use strict";Object.defineProperty(Je,"__esModule",{value:!0});function t1(t){return t&&typeof t=="object"&&"default"in t?t.default:t}var Xe=t1(require("stream")),Do=t1(require("http")),oi=t1(require("url")),Oo=t1(ko()),am=t1(require("https")),wa=t1(require("zlib")),rm=Xe.Readable,Ct=Symbol("buffer"),tn=Symbol("type"),X1=class t{constructor(){this[tn]="";let e=arguments[0],a=arguments[1],r=[],i=0;if(e){let n=e,d=Number(n.length);for(let o=0;o<d;o++){let p=n[o],c;p instanceof Buffer?c=p:ArrayBuffer.isView(p)?c=Buffer.from(p.buffer,p.byteOffset,p.byteLength):p instanceof ArrayBuffer?c=Buffer.from(p):p instanceof t?c=p[Ct]:c=Buffer.from(typeof p=="string"?p:String(p)),i+=c.length,r.push(c)}}this[Ct]=Buffer.concat(r);let s=a&&a.type!==void 0&&String(a.type).toLowerCase();s&&!/[^\u0020-\u007E]/.test(s)&&(this[tn]=s)}get size(){return this[Ct].length}get type(){return this[tn]}text(){return Promise.resolve(this[Ct].toString())}arrayBuffer(){let e=this[Ct],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){let e=new rm;return e._read=function(){},e.push(this[Ct]),e.push(null),e}toString(){return"[object Blob]"}slice(){let e=this.size,a=arguments[0],r=arguments[1],i,s;a===void 0?i=0:a<0?i=Math.max(e+a,0):i=Math.min(a,e),r===void 0?s=e:r<0?s=Math.max(e+r,0):s=Math.min(r,e);let n=Math.max(s-i,0),o=this[Ct].slice(i,i+n),p=new t([],{type:arguments[2]});return p[Ct]=o,p}};Object.defineProperties(X1.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}});Object.defineProperty(X1.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0});function ye(t,e,a){Error.call(this,t),this.message=t,this.type=e,a&&(this.code=this.errno=a.code),Error.captureStackTrace(this,this.constructor)}ye.prototype=Object.create(Error.prototype);ye.prototype.constructor=ye;ye.prototype.name="FetchError";var nn;try{nn=require("encoding").convert}catch{}var Tt=Symbol("Body internals"),xo=Xe.PassThrough;function he(t){var e=this,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r=a.size;let i=r===void 0?0:r;var s=a.timeout;let n=s===void 0?0:s;t==null?t=null:Fo(t)?t=Buffer.from(t.toString()):Y1(t)||Buffer.isBuffer(t)||(Object.prototype.toString.call(t)==="[object ArrayBuffer]"?t=Buffer.from(t):ArrayBuffer.isView(t)?t=Buffer.from(t.buffer,t.byteOffset,t.byteLength):t instanceof Xe||(t=Buffer.from(String(t)))),this[Tt]={body:t,disturbed:!1,error:null},this.size=i,this.timeout=n,t instanceof Xe&&t.on("error",function(d){let o=d.name==="AbortError"?d:new ye(`Invalid response body while trying to fetch ${e.url}: ${d.message}`,"system",d);e[Tt].error=o})}he.prototype={get body(){return this[Tt].body},get bodyUsed(){return this[Tt].disturbed},arrayBuffer(){return Qa.call(this).then(function(t){return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)})},blob(){let t=this.headers&&this.headers.get("content-type")||"";return Qa.call(this).then(function(e){return Object.assign(new X1([],{type:t.toLowerCase()}),{[Ct]:e})})},json(){var t=this;return Qa.call(this).then(function(e){try{return JSON.parse(e.toString())}catch(a){return he.Promise.reject(new ye(`invalid json response body at ${t.url} reason: ${a.message}`,"invalid-json"))}})},text(){return Qa.call(this).then(function(t){return t.toString()})},buffer(){return Qa.call(this)},textConverted(){var t=this;return Qa.call(this).then(function(e){return im(e,t.headers)})}};Object.defineProperties(he.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}});he.mixIn=function(t){for(let e of Object.getOwnPropertyNames(he.prototype))if(!(e in t)){let a=Object.getOwnPropertyDescriptor(he.prototype,e);Object.defineProperty(t,e,a)}};function Qa(){var t=this;if(this[Tt].disturbed)return he.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[Tt].disturbed=!0,this[Tt].error)return he.Promise.reject(this[Tt].error);let e=this.body;if(e===null)return he.Promise.resolve(Buffer.alloc(0));if(Y1(e)&&(e=e.stream()),Buffer.isBuffer(e))return he.Promise.resolve(e);if(!(e instanceof Xe))return he.Promise.resolve(Buffer.alloc(0));let a=[],r=0,i=!1;return new he.Promise(function(s,n){let d;t.timeout&&(d=setTimeout(function(){i=!0,n(new ye(`Response timeout while trying to fetch ${t.url} (over ${t.timeout}ms)`,"body-timeout"))},t.timeout)),e.on("error",function(o){o.name==="AbortError"?(i=!0,n(o)):n(new ye(`Invalid response body while trying to fetch ${t.url}: ${o.message}`,"system",o))}),e.on("data",function(o){if(!(i||o===null)){if(t.size&&r+o.length>t.size){i=!0,n(new ye(`content size at ${t.url} over limit: ${t.size}`,"max-size"));return}r+=o.length,a.push(o)}}),e.on("end",function(){if(!i){clearTimeout(d);try{s(Buffer.concat(a,r))}catch(o){n(new ye(`Could not create Buffer from response body for ${t.url}: ${o.message}`,"system",o))}}})})}function im(t,e){if(typeof nn!="function")throw new Error("The package `encoding` must be installed to use the textConverted() function");let a=e.get("content-type"),r="utf-8",i,s;return a&&(i=/charset=([^;]*)/i.exec(a)),s=t.slice(0,1024).toString(),!i&&s&&(i=/<meta.+?charset=(['"])(.+?)\1/i.exec(s)),!i&&s&&(i=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(s),i||(i=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(s),i&&i.pop()),i&&(i=/charset=(.*)/i.exec(i.pop()))),!i&&s&&(i=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(s)),i&&(r=i.pop(),(r==="gb2312"||r==="gbk")&&(r="gb18030")),nn(t,"UTF-8",r).toString()}function Fo(t){return typeof t!="object"||typeof t.append!="function"||typeof t.delete!="function"||typeof t.get!="function"||typeof t.getAll!="function"||typeof t.has!="function"||typeof t.set!="function"?!1:t.constructor.name==="URLSearchParams"||Object.prototype.toString.call(t)==="[object URLSearchParams]"||typeof t.sort=="function"}function Y1(t){return typeof t=="object"&&typeof t.arrayBuffer=="function"&&typeof t.type=="string"&&typeof t.stream=="function"&&typeof t.constructor=="function"&&typeof t.constructor.name=="string"&&/^(Blob|File)$/.test(t.constructor.name)&&/^(Blob|File)$/.test(t[Symbol.toStringTag])}function Mo(t){let e,a,r=t.body;if(t.bodyUsed)throw new Error("cannot clone body after it is used");return r instanceof Xe&&typeof r.getBoundary!="function"&&(e=new xo,a=new xo,r.pipe(e),r.pipe(a),t[Tt].body=e,r=a),r}function Vo(t){return t===null?null:typeof t=="string"?"text/plain;charset=UTF-8":Fo(t)?"application/x-www-form-urlencoded;charset=UTF-8":Y1(t)?t.type||null:Buffer.isBuffer(t)||Object.prototype.toString.call(t)==="[object ArrayBuffer]"||ArrayBuffer.isView(t)?null:typeof t.getBoundary=="function"?`multipart/form-data;boundary=${t.getBoundary()}`:t instanceof Xe?null:"text/plain;charset=UTF-8"}function Bo(t){let e=t.body;return e===null?0:Y1(e)?e.size:Buffer.isBuffer(e)?e.length:e&&typeof e.getLengthSync=="function"&&(e._lengthRetrievers&&e._lengthRetrievers.length==0||e.hasKnownLength&&e.hasKnownLength())?e.getLengthSync():null}function sm(t,e){let a=e.body;a===null?t.end():Y1(a)?a.stream().pipe(t):Buffer.isBuffer(a)?(t.write(a),t.end()):a.pipe(t)}he.Promise=global.Promise;var Lo=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,dn=/[^\t\x20-\x7e\x80-\xff]/;function G1(t){if(t=`${t}`,Lo.test(t)||t==="")throw new TypeError(`${t} is not a legal HTTP header name`)}function Po(t){if(t=`${t}`,dn.test(t))throw new TypeError(`${t} is not a legal HTTP header value`)}function Za(t,e){e=e.toLowerCase();for(let a in t)if(a.toLowerCase()===e)return a}var re=Symbol("map"),Ue=class t{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:void 0;if(this[re]=Object.create(null),e instanceof t){let a=e.raw(),r=Object.keys(a);for(let i of r)for(let s of a[i])this.append(i,s);return}if(e!=null)if(typeof e=="object"){let a=e[Symbol.iterator];if(a!=null){if(typeof a!="function")throw new TypeError("Header pairs must be iterable");let r=[];for(let i of e){if(typeof i!="object"||typeof i[Symbol.iterator]!="function")throw new TypeError("Each header pair must be iterable");r.push(Array.from(i))}for(let i of r){if(i.length!==2)throw new TypeError("Each header pair must be a name/value tuple");this.append(i[0],i[1])}}else for(let r of Object.keys(e)){let i=e[r];this.append(r,i)}}else throw new TypeError("Provided initializer must be an object")}get(e){e=`${e}`,G1(e);let a=Za(this[re],e);return a===void 0?null:this[re][a].join(", ")}forEach(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:void 0,r=on(this),i=0;for(;i<r.length;){var s=r[i];let n=s[0],d=s[1];e.call(a,d,n,this),r=on(this),i++}}set(e,a){e=`${e}`,a=`${a}`,G1(e),Po(a);let r=Za(this[re],e);this[re][r!==void 0?r:e]=[a]}append(e,a){e=`${e}`,a=`${a}`,G1(e),Po(a);let r=Za(this[re],e);r!==void 0?this[re][r].push(a):this[re][e]=[a]}has(e){return e=`${e}`,G1(e),Za(this[re],e)!==void 0}delete(e){e=`${e}`,G1(e);let a=Za(this[re],e);a!==void 0&&delete this[re][a]}raw(){return this[re]}keys(){return an(this,"key")}values(){return an(this,"value")}[Symbol.iterator](){return an(this,"key+value")}};Ue.prototype.entries=Ue.prototype[Symbol.iterator];Object.defineProperty(Ue.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(Ue.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});function on(t){let e=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"key+value";return Object.keys(t[re]).sort().map(e==="key"?function(r){return r.toLowerCase()}:e==="value"?function(r){return t[re][r].join(", ")}:function(r){return[r.toLowerCase(),t[re][r].join(", ")]})}var pn=Symbol("internal");function an(t,e){let a=Object.create(ln);return a[pn]={target:t,kind:e,index:0},a}var ln=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==ln)throw new TypeError("Value of `this` is not a HeadersIterator");var t=this[pn];let e=t.target,a=t.kind,r=t.index,i=on(e,a),s=i.length;return r>=s?{value:void 0,done:!0}:(this[pn].index=r+1,{value:i[r],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));Object.defineProperty(ln,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});function nm(t){let e=Object.assign({__proto__:null},t[re]),a=Za(t[re],"Host");return a!==void 0&&(e[a]=e[a][0]),e}function dm(t){let e=new Ue;for(let a of Object.keys(t))if(!Lo.test(a))if(Array.isArray(t[a]))for(let r of t[a])dn.test(r)||(e[re][a]===void 0?e[re][a]=[r]:e[re][a].push(r));else dn.test(t[a])||(e[re][a]=[t[a]]);return e}var Wt=Symbol("Response internals"),om=Do.STATUS_CODES,Le=class t{constructor(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:null,a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};he.call(this,e,a);let r=a.status||200,i=new Ue(a.headers);if(e!=null&&!i.has("Content-Type")){let s=Vo(e);s&&i.append("Content-Type",s)}this[Wt]={url:a.url,status:r,statusText:a.statusText||om[r],headers:i,counter:a.counter}}get url(){return this[Wt].url||""}get status(){return this[Wt].status}get ok(){return this[Wt].status>=200&&this[Wt].status<300}get redirected(){return this[Wt].counter>0}get statusText(){return this[Wt].statusText}get headers(){return this[Wt].headers}clone(){return new t(Mo(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};he.mixIn(Le.prototype);Object.defineProperties(Le.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}});Object.defineProperty(Le.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});var Et=Symbol("Request internals"),pm=oi.URL||Oo.URL,lm=oi.parse,mm=oi.format;function rn(t){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(t)&&(t=new pm(t).toString()),lm(t)}var um="destroy"in Xe.Readable.prototype;function di(t){return typeof t=="object"&&typeof t[Et]=="object"}function cm(t){let e=t&&typeof t=="object"&&Object.getPrototypeOf(t);return!!(e&&e.constructor.name==="AbortSignal")}var Gt=class t{constructor(e){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},r;di(e)?r=rn(e.url):(e&&e.href?r=rn(e.href):r=rn(`${e}`),e={});let i=a.method||e.method||"GET";if(i=i.toUpperCase(),(a.body!=null||di(e)&&e.body!==null)&&(i==="GET"||i==="HEAD"))throw new TypeError("Request with GET/HEAD method cannot have body");let s=a.body!=null?a.body:di(e)&&e.body!==null?Mo(e):null;he.call(this,s,{timeout:a.timeout||e.timeout||0,size:a.size||e.size||0});let n=new Ue(a.headers||e.headers||{});if(s!=null&&!n.has("Content-Type")){let o=Vo(s);o&&n.append("Content-Type",o)}let d=di(e)?e.signal:null;if("signal"in a&&(d=a.signal),d!=null&&!cm(d))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[Et]={method:i,redirect:a.redirect||e.redirect||"follow",headers:n,parsedURL:r,signal:d},this.follow=a.follow!==void 0?a.follow:e.follow!==void 0?e.follow:20,this.compress=a.compress!==void 0?a.compress:e.compress!==void 0?e.compress:!0,this.counter=a.counter||e.counter||0,this.agent=a.agent||e.agent}get method(){return this[Et].method}get url(){return mm(this[Et].parsedURL)}get headers(){return this[Et].headers}get redirect(){return this[Et].redirect}get signal(){return this[Et].signal}clone(){return new t(this)}};he.mixIn(Gt.prototype);Object.defineProperty(Gt.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0});Object.defineProperties(Gt.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}});function hm(t){let e=t[Et].parsedURL,a=new Ue(t[Et].headers);if(a.has("Accept")||a.set("Accept","*/*"),!e.protocol||!e.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(e.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(t.signal&&t.body instanceof Xe.Readable&&!um)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let r=null;if(t.body==null&&/^(POST|PUT)$/i.test(t.method)&&(r="0"),t.body!=null){let s=Bo(t);typeof s=="number"&&(r=String(s))}r&&a.set("Content-Length",r),a.has("User-Agent")||a.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),t.compress&&!a.has("Accept-Encoding")&&a.set("Accept-Encoding","gzip,deflate");let i=t.agent;return typeof i=="function"&&(i=i(e)),Object.assign({},e,{method:t.method,headers:nm(a),agent:i})}function e1(t){Error.call(this,t),this.type="aborted",this.message=t,Error.captureStackTrace(this,this.constructor)}e1.prototype=Object.create(Error.prototype);e1.prototype.constructor=e1;e1.prototype.name="AbortError";var J1=oi.URL||Oo.URL,Io=Xe.PassThrough,fm=function(e,a){let r=new J1(a).hostname,i=new J1(e).hostname;return r===i||r[r.length-i.length-1]==="."&&r.endsWith(i)},vm=function(e,a){let r=new J1(a).protocol,i=new J1(e).protocol;return r===i};function zt(t,e){if(!zt.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return he.Promise=zt.Promise,new zt.Promise(function(a,r){let i=new Gt(t,e),s=hm(i),n=(s.protocol==="https:"?am:Do).request,d=i.signal,o=null,p=function(){let f=new e1("The user aborted a request.");r(f),i.body&&i.body instanceof Xe.Readable&&sn(i.body,f),!(!o||!o.body)&&o.body.emit("error",f)};if(d&&d.aborted){p();return}let c=function(){p(),u()},l=n(s),m;d&&d.addEventListener("abort",c);function u(){l.abort(),d&&d.removeEventListener("abort",c),clearTimeout(m)}i.timeout&&l.once("socket",function(h){m=setTimeout(function(){r(new ye(`network timeout at: ${i.url}`,"request-timeout")),u()},i.timeout)}),l.on("error",function(h){r(new ye(`request to ${i.url} failed, reason: ${h.message}`,"system",h)),o&&o.body&&sn(o.body,h),u()}),gm(l,function(h){d&&d.aborted||o&&o.body&&sn(o.body,h)}),parseInt(process.version.substring(1))<14&&l.on("socket",function(h){h.addListener("close",function(f){let v=h.listenerCount("data")>0;if(o&&v&&!f&&!(d&&d.aborted)){let w=new Error("Premature close");w.code="ERR_STREAM_PREMATURE_CLOSE",o.body.emit("error",w)}})}),l.on("response",function(h){clearTimeout(m);let f=dm(h.headers);if(zt.isRedirect(h.statusCode)){let _=f.get("Location"),A=null;try{A=_===null?null:new J1(_,i.url).toString()}catch{if(i.redirect!=="manual"){r(new ye(`uri requested responds with an invalid redirect URL: ${_}`,"invalid-redirect")),u();return}}switch(i.redirect){case"error":r(new ye(`uri requested responds with a redirect, redirect mode is set to error: ${i.url}`,"no-redirect")),u();return;case"manual":if(A!==null)try{f.set("Location",A)}catch(B){r(B)}break;case"follow":if(A===null)break;if(i.counter>=i.follow){r(new ye(`maximum redirect reached at: ${i.url}`,"max-redirect")),u();return}let D={headers:new Ue(i.headers),follow:i.follow,counter:i.counter+1,agent:i.agent,compress:i.compress,method:i.method,body:i.body,signal:i.signal,timeout:i.timeout,size:i.size};if(!fm(i.url,A)||!vm(i.url,A))for(let B of["authorization","www-authenticate","cookie","cookie2"])D.headers.delete(B);if(h.statusCode!==303&&i.body&&Bo(i)===null){r(new ye("Cannot follow redirect with body being a readable stream","unsupported-redirect")),u();return}(h.statusCode===303||(h.statusCode===301||h.statusCode===302)&&i.method==="POST")&&(D.method="GET",D.body=void 0,D.headers.delete("content-length")),a(zt(new Gt(A,D))),u();return}}h.once("end",function(){d&&d.removeEventListener("abort",c)});let v=h.pipe(new Io),w={url:i.url,status:h.statusCode,statusText:h.statusMessage,headers:f,size:i.size,timeout:i.timeout,counter:i.counter},g=f.get("Content-Encoding");if(!i.compress||i.method==="HEAD"||g===null||h.statusCode===204||h.statusCode===304){o=new Le(v,w),a(o);return}let x={flush:wa.Z_SYNC_FLUSH,finishFlush:wa.Z_SYNC_FLUSH};if(g=="gzip"||g=="x-gzip"){v=v.pipe(wa.createGunzip(x)),o=new Le(v,w),a(o);return}if(g=="deflate"||g=="x-deflate"){let _=h.pipe(new Io);_.once("data",function(A){(A[0]&15)===8?v=v.pipe(wa.createInflate()):v=v.pipe(wa.createInflateRaw()),o=new Le(v,w),a(o)}),_.on("end",function(){o||(o=new Le(v,w),a(o))});return}if(g=="br"&&typeof wa.createBrotliDecompress=="function"){v=v.pipe(wa.createBrotliDecompress()),o=new Le(v,w),a(o);return}o=new Le(v,w),a(o)}),sm(l,i)})}function gm(t,e){let a;t.on("socket",function(r){a=r}),t.on("response",function(r){let i=r.headers;i["transfer-encoding"]==="chunked"&&!i["content-length"]&&r.once("close",function(s){if(a&&a.listenerCount("data")>0&&!s){let d=new Error("Premature close");d.code="ERR_STREAM_PREMATURE_CLOSE",e(d)}})})}function sn(t,e){t.destroy?t.destroy(e):(t.emit("error",e),t.end())}zt.isRedirect=function(t){return t===301||t===302||t===303||t===307||t===308};zt.Promise=global.Promise;Uo.exports=Je=zt;Object.defineProperty(Je,"__esModule",{value:!0});Je.default=Je;Je.Headers=Ue;Je.Request=Gt;Je.Response=Le;Je.FetchError=ye;Je.AbortError=e1});function up(){}function Ce(t){return typeof t=="object"&&t!==null||typeof t=="function"}function L(t,e){try{Object.defineProperty(t,"name",{value:e,configurable:!0})}catch{}}function Te(t){return new Cn(t)}function j(t){return bm(t)}function k(t){return ym(t)}function It(t,e,a){return wm.call(t,e,a)}function Se(t,e,a){It(It(t,e,a),void 0,cp)}function jo(t,e){Se(t,e)}function $o(t,e){Se(t,void 0,e)}function Ye(t,e,a){return It(t,e,a)}function s1(t){It(t,void 0,cp)}function Pi(t,e,a){if(typeof t!="function")throw new TypeError("Argument is not a function");return Function.prototype.apply.call(t,e,a)}function Ta(t,e,a){try{return j(Pi(t,e,a))}catch(r){return k(r)}}function vp(t,e){t._ownerReadableStream=e,e._reader=t,e._state==="readable"?vn(t):e._state==="closed"?function(a){vn(a),yp(a)}(t):bp(t,e._storedError)}function gp(t,e){return Yp(t._ownerReadableStream,e)}function wp(t){let e=t._ownerReadableStream;e._state==="readable"?An(t,new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")):function(a,r){bp(a,r)}(t,new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")),e._readableStreamController[Nn](),e._reader=void 0,t._ownerReadableStream=void 0}function n1(t){return new TypeError("Cannot "+t+" a stream using a released reader")}function vn(t){t._closedPromise=Te((e,a)=>{t._closedPromise_resolve=e,t._closedPromise_reject=a})}function bp(t,e){vn(t),An(t,e)}function An(t,e){t._closedPromise_reject!==void 0&&(s1(t._closedPromise),t._closedPromise_reject(e),t._closedPromise_resolve=void 0,t._closedPromise_reject=void 0)}function yp(t){t._closedPromise_resolve!==void 0&&(t._closedPromise_resolve(void 0),t._closedPromise_resolve=void 0,t._closedPromise_reject=void 0)}function Dt(t,e){if(t!==void 0&&typeof(a=t)!="object"&&typeof a!="function")throw new TypeError(`${e} is not an object.`);var a}function Ke(t,e){if(typeof t!="function")throw new TypeError(`${e} is not a function.`)}function _p(t,e){if(!function(a){return typeof a=="object"&&a!==null||typeof a=="function"}(t))throw new TypeError(`${e} is not an object.`)}function Ot(t,e,a){if(t===void 0)throw new TypeError(`Parameter ${e} is required in '${a}'.`)}function gn(t,e,a){if(t===void 0)throw new TypeError(`${e} is required in '${a}'.`)}function Rn(t){return Number(t)}function Wo(t){return t===0?0:t}function Sp(t,e){let a=Number.MAX_SAFE_INTEGER,r=Number(t);if(r=Wo(r),!Ho(r))throw new TypeError(`${e} is not a finite number`);if(r=function(i){return Wo(_m(i))}(r),r<0||r>a)throw new TypeError(`${e} is outside the accepted range of 0 to ${a}, inclusive`);return Ho(r)&&r!==0?r:0}function Z1(t){if(!Ce(t)||typeof t.getReader!="function")return!1;try{return typeof t.locked=="boolean"}catch{return!1}}function Cp(t){if(!Ce(t)||typeof t.getWriter!="function")return!1;try{return typeof t.locked=="boolean"}catch{return!1}}function Ep(t,e){if(!Ca(t))throw new TypeError(`${e} is not a ReadableStream.`)}function Tp(t,e){t._reader._readRequests.push(e)}function kn(t,e,a){let r=t._reader._readRequests.shift();a?r._closeSteps():r._chunkSteps(e)}function Ii(t){return t._reader._readRequests.length}function Np(t){let e=t._reader;return e!==void 0&&!!Sa(e)}function Sa(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_readRequests")&&t instanceof Nt}function Ap(t,e){let a=t._readRequests;t._readRequests=new Re,a.forEach(r=>{r._errorSteps(e)})}function pi(t){return new TypeError(`ReadableStreamDefaultReader.prototype.${t} can only be used on a ReadableStreamDefaultReader`)}function zo(t){if(!Ce(t)||!Object.prototype.hasOwnProperty.call(t,"_asyncIteratorImpl"))return!1;try{return t._asyncIteratorImpl instanceof Si}catch{return!1}}function Go(t){return new TypeError(`ReadableStreamAsyncIterator.${t} can only be used on a ReadableSteamAsyncIterator`)}function xp(t,e,a,r,i){new Uint8Array(t).set(new Uint8Array(a,r,i),e)}function Xo(t){let e=function(a,r,i){if(a.slice)return a.slice(r,i);let s=i-r,n=new ArrayBuffer(s);return xp(n,0,a,r,s),n}(t.buffer,t.byteOffset,t.byteOffset+t.byteLength);return new Uint8Array(e)}function wn(t){let e=t._queue.shift();return t._queueTotalSize-=e.size,t._queueTotalSize<0&&(t._queueTotalSize=0),e.value}function xn(t,e,a){if(typeof(r=a)!="number"||kp(r)||r<0||a===1/0)throw new RangeError("Size must be a finite, non-NaN, non-negative number.");var r;t._queue.push({value:e,size:a}),t._queueTotalSize+=a}function Yt(t){t._queue=new Re,t._queueTotalSize=0}function a1(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_controlledReadableByteStream")&&t instanceof At}function mn(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_associatedReadableByteStreamController")&&t instanceof Xt}function Ea(t){if(function(a){let r=a._controlledReadableByteStream;return r._state!=="readable"||a._closeRequested||!a._started?!1:!!(Np(r)&&Ii(r)>0||In(r)&&Lp(r)>0||Bp(a)>0)}(t)){if(t._pulling)return void(t._pullAgain=!0);t._pulling=!0,Se(t._pullAlgorithm(),()=>(t._pulling=!1,t._pullAgain&&(t._pullAgain=!1,Ea(t)),null),a=>(d1(t,a),null))}}function Pp(t){Pn(t),t._pendingPullIntos=new Re}function bn(t,e){let a=!1;t._state==="closed"&&(a=!0);let r=Ip(e);e.readerType==="default"?kn(t,r,a):function(i,s,n){let d=i._reader._readIntoRequests.shift();n?d._closeSteps(s):d._chunkSteps(s)}(t,r,a)}function Ip(t){let e=t.bytesFilled,a=t.elementSize;return new t.viewConstructor(t.buffer,t.byteOffset,e/a)}function wi(t,e,a,r){t._queue.push({buffer:e,byteOffset:a,byteLength:r}),t._queueTotalSize+=r}function Dp(t,e,a,r){let i;try{i=e.slice(a,a+r)}catch(s){throw d1(t,s),s}wi(t,i,0,r)}function Op(t,e){e.bytesFilled>0&&Dp(t,e.buffer,e.byteOffset,e.bytesFilled),i1(t)}function Fp(t,e){let a=e.elementSize,r=e.bytesFilled-e.bytesFilled%a,i=Math.min(t._queueTotalSize,e.byteLength-e.bytesFilled),s=e.bytesFilled+i,n=s-s%a,d=i,o=!1;n>r&&(d=n-e.bytesFilled,o=!0);let p=t._queue;for(;d>0;){let c=p.peek(),l=Math.min(d,c.byteLength),m=e.byteOffset+e.bytesFilled;xp(e.buffer,m,c.buffer,c.byteOffset,l),c.byteLength===l?p.shift():(c.byteOffset+=l,c.byteLength-=l),t._queueTotalSize-=l,Mp(t,l,e),d-=l}return o}function Mp(t,e,a){a.bytesFilled+=e}function Vp(t){t._queueTotalSize===0&&t._closeRequested?(Ci(t),ir(t._controlledReadableByteStream)):Ea(t)}function Pn(t){t._byobRequest!==null&&(t._byobRequest._associatedReadableByteStreamController=void 0,t._byobRequest._view=null,t._byobRequest=null)}function yn(t){for(;t._pendingPullIntos.length>0;){if(t._queueTotalSize===0)return;let e=t._pendingPullIntos.peek();Fp(t,e)&&(i1(t),bn(t._controlledReadableByteStream,e))}}function Jo(t,e){let a=t._pendingPullIntos.peek();Pn(t),t._controlledReadableByteStream._state==="closed"?function(r,i){i.readerType==="none"&&i1(r);let s=r._controlledReadableByteStream;if(In(s))for(;Lp(s)>0;)bn(s,i1(r))}(t,a):function(r,i,s){if(Mp(0,i,s),s.readerType==="none")return Op(r,s),void yn(r);if(s.bytesFilled<s.elementSize)return;i1(r);let n=s.bytesFilled%s.elementSize;if(n>0){let d=s.byteOffset+s.bytesFilled;Dp(r,s.buffer,d-n,n)}s.bytesFilled-=n,bn(r._controlledReadableByteStream,s),yn(r)}(t,e,a),Ea(t)}function i1(t){return t._pendingPullIntos.shift()}function Ci(t){t._pullAlgorithm=void 0,t._cancelAlgorithm=void 0}function d1(t,e){let a=t._controlledReadableByteStream;a._state==="readable"&&(Pp(t),Yt(t),Ci(t),Kp(a,e))}function Yo(t,e){let a=t._queue.shift();t._queueTotalSize-=a.byteLength,Vp(t);let r=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);e._chunkSteps(r)}function Bp(t){let e=t._controlledReadableByteStream._state;return e==="errored"?null:e==="closed"?0:t._strategyHWM-t._queueTotalSize}function Sm(t,e,a){let r=Object.create(At.prototype),i,s,n;i=e.start!==void 0?()=>e.start(r):()=>{},s=e.pull!==void 0?()=>e.pull(r):()=>j(void 0),n=e.cancel!==void 0?o=>e.cancel(o):()=>j(void 0);let d=e.autoAllocateChunkSize;if(d===0)throw new TypeError("autoAllocateChunkSize must be greater than 0");(function(o,p,c,l,m,u,h){p._controlledReadableByteStream=o,p._pullAgain=!1,p._pulling=!1,p._byobRequest=null,p._queue=p._queueTotalSize=void 0,Yt(p),p._closeRequested=!1,p._started=!1,p._strategyHWM=u,p._pullAlgorithm=l,p._cancelAlgorithm=m,p._autoAllocateChunkSize=h,p._pendingPullIntos=new Re,o._readableStreamController=p,Se(j(c()),()=>(p._started=!0,Ea(p),null),f=>(d1(p,f),null))})(t,r,i,s,n,a,d)}function un(t){return new TypeError(`ReadableStreamBYOBRequest.prototype.${t} can only be used on a ReadableStreamBYOBRequest`)}function K1(t){return new TypeError(`ReadableByteStreamController.prototype.${t} can only be used on a ReadableByteStreamController`)}function Ko(t,e){t._reader._readIntoRequests.push(e)}function Lp(t){return t._reader._readIntoRequests.length}function In(t){let e=t._reader;return e!==void 0&&!!r1(e)}function r1(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_readIntoRequests")&&t instanceof Rt}function Up(t,e){let a=t._readIntoRequests;t._readIntoRequests=new Re,a.forEach(r=>{r._errorSteps(e)})}function li(t){return new TypeError(`ReadableStreamBYOBReader.prototype.${t} can only be used on a ReadableStreamBYOBReader`)}function rr(t,e){let{highWaterMark:a}=t;if(a===void 0)return e;if(kp(a)||a<0)throw new RangeError("Invalid highWaterMark");return a}function Ei(t){let{size:e}=t;return e||(()=>1)}function Ti(t,e){Dt(t,e);let a=t?.highWaterMark,r=t?.size;return{highWaterMark:a===void 0?void 0:Rn(a),size:r===void 0?void 0:Cm(r,`${e} has member 'size' that`)}}function Cm(t,e){return Ke(t,e),a=>Rn(t(a))}function Em(t,e,a){return Ke(t,a),r=>Ta(t,e,[r])}function Tm(t,e,a){return Ke(t,a),()=>Ta(t,e,[])}function Nm(t,e,a){return Ke(t,a),r=>Pi(t,e,[r])}function Am(t,e,a){return Ke(t,a),(r,i)=>Ta(t,e,[r,i])}function pt(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_writableStreamController")&&t instanceof kt}function bi(t){return t._writer!==void 0}function qp(t,e){var a;if(t._state==="closed"||t._state==="errored")return j(void 0);t._writableStreamController._abortReason=e,(a=t._writableStreamController._abortController)===null||a===void 0||a.abort(e);let r=t._state;if(r==="closed"||r==="errored")return j(void 0);if(t._pendingAbortRequest!==void 0)return t._pendingAbortRequest._promise;let i=!1;r==="erroring"&&(i=!0,e=void 0);let s=Te((n,d)=>{t._pendingAbortRequest={_promise:void 0,_resolve:n,_reject:d,_reason:e,_wasAlreadyErroring:i}});return t._pendingAbortRequest._promise=s,i||Dn(t,e),s}function jp(t){let e=t._state;if(e==="closed"||e==="errored")return k(new TypeError(`The stream (in ${e} state) is not in the writable state and cannot be closed`));let a=Te((s,n)=>{let d={_resolve:s,_reject:n};t._closeRequest=d}),r=t._writer;var i;return r!==void 0&&t._backpressure&&e==="writable"&&Bn(r),xn(i=t._writableStreamController,Hp,0),Di(i),a}function _n(t,e){t._state!=="writable"?On(t):Dn(t,e)}function Dn(t,e){let a=t._writableStreamController;t._state="erroring",t._storedError=e;let r=t._writer;r!==void 0&&$p(r,e),!function(i){return!(i._inFlightWriteRequest===void 0&&i._inFlightCloseRequest===void 0)}(t)&&a._started&&On(t)}function On(t){t._state="errored",t._writableStreamController[fp]();let e=t._storedError;if(t._writeRequests.forEach(r=>{r._reject(e)}),t._writeRequests=new Re,t._pendingAbortRequest===void 0)return void mi(t);let a=t._pendingAbortRequest;if(t._pendingAbortRequest=void 0,a._wasAlreadyErroring)return a._reject(e),void mi(t);Se(t._writableStreamController[hp](a._reason),()=>(a._resolve(),mi(t),null),r=>(a._reject(r),mi(t),null))}function Jt(t){return t._closeRequest!==void 0||t._inFlightCloseRequest!==void 0}function mi(t){t._closeRequest!==void 0&&(t._closeRequest._reject(t._storedError),t._closeRequest=void 0);let e=t._writer;e!==void 0&&Vn(e,t._storedError)}function Fn(t,e){let a=t._writer;a!==void 0&&e!==t._backpressure&&(e?function(r){Oi(r)}(a):Bn(a)),t._backpressure=e}function ba(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_ownerWritableStream")&&t instanceof ot}function $p(t,e){t._readyPromiseState==="pending"?Xp(t,e):function(a,r){Sn(a,r)}(t,e)}function cn(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_controlledWritableStream")&&t instanceof o1}function Ni(t){t._writeAlgorithm=void 0,t._closeAlgorithm=void 0,t._abortAlgorithm=void 0,t._strategySizeAlgorithm=void 0}function Wp(t){return t._strategyHWM-t._queueTotalSize}function Di(t){let e=t._controlledWritableStream;if(!t._started||e._inFlightWriteRequest!==void 0)return;if(e._state==="erroring")return void On(e);if(t._queue.length===0)return;let a=t._queue.peek().value;a===Hp?function(r){let i=r._controlledWritableStream;(function(n){n._inFlightCloseRequest=n._closeRequest,n._closeRequest=void 0})(i),wn(r);let s=r._closeAlgorithm();Ni(r),Se(s,()=>(function(n){n._inFlightCloseRequest._resolve(void 0),n._inFlightCloseRequest=void 0,n._state==="erroring"&&(n._storedError=void 0,n._pendingAbortRequest!==void 0&&(n._pendingAbortRequest._resolve(),n._pendingAbortRequest=void 0)),n._state="closed";let d=n._writer;d!==void 0&&Gp(d)}(i),null),n=>(function(d,o){d._inFlightCloseRequest._reject(o),d._inFlightCloseRequest=void 0,d._pendingAbortRequest!==void 0&&(d._pendingAbortRequest._reject(o),d._pendingAbortRequest=void 0),_n(d,o)}(i,n),null))}(t):function(r,i){let s=r._controlledWritableStream;(function(n){n._inFlightWriteRequest=n._writeRequests.shift()})(s),Se(r._writeAlgorithm(i),()=>{(function(d){d._inFlightWriteRequest._resolve(void 0),d._inFlightWriteRequest=void 0})(s);let n=s._state;if(wn(r),!Jt(s)&&n==="writable"){let d=Mn(r);Fn(s,d)}return Di(r),null},n=>(s._state==="writable"&&Ni(r),function(d,o){d._inFlightWriteRequest._reject(o),d._inFlightWriteRequest=void 0,_n(d,o)}(s,n),null))}(t,a)}function Qo(t,e){t._controlledWritableStream._state==="writable"&&zp(t,e)}function Mn(t){return Wp(t)<=0}function zp(t,e){let a=t._controlledWritableStream;Ni(t),Dn(a,e)}function ui(t){return new TypeError(`WritableStream.prototype.${t} can only be used on a WritableStream`)}function hn(t){return new TypeError(`WritableStreamDefaultController.prototype.${t} can only be used on a WritableStreamDefaultController`)}function ya(t){return new TypeError(`WritableStreamDefaultWriter.prototype.${t} can only be used on a WritableStreamDefaultWriter`)}function Q1(t){return new TypeError("Cannot "+t+" a stream using a released writer")}function yi(t){t._closedPromise=Te((e,a)=>{t._closedPromise_resolve=e,t._closedPromise_reject=a,t._closedPromiseState="pending"})}function Zo(t,e){yi(t),Vn(t,e)}function Vn(t,e){t._closedPromise_reject!==void 0&&(s1(t._closedPromise),t._closedPromise_reject(e),t._closedPromise_resolve=void 0,t._closedPromise_reject=void 0,t._closedPromiseState="rejected")}function Gp(t){t._closedPromise_resolve!==void 0&&(t._closedPromise_resolve(void 0),t._closedPromise_resolve=void 0,t._closedPromise_reject=void 0,t._closedPromiseState="resolved")}function Oi(t){t._readyPromise=Te((e,a)=>{t._readyPromise_resolve=e,t._readyPromise_reject=a}),t._readyPromiseState="pending"}function Sn(t,e){Oi(t),Xp(t,e)}function ep(t){Oi(t),Bn(t)}function Xp(t,e){t._readyPromise_reject!==void 0&&(s1(t._readyPromise),t._readyPromise_reject(e),t._readyPromise_resolve=void 0,t._readyPromise_reject=void 0,t._readyPromiseState="rejected")}function Bn(t){t._readyPromise_resolve!==void 0&&(t._readyPromise_resolve(void 0),t._readyPromise_resolve=void 0,t._readyPromise_reject=void 0,t._readyPromiseState="fulfilled")}function ap(t,e,a,r,i,s){let n=t.getReader(),d=e.getWriter();Ca(t)&&(t._disturbed=!0);let o,p,c,l=!1,m=!1,u="readable",h="writable",f=!1,v=!1,w=Te(x=>{c=x}),g=Promise.resolve(void 0);return Te((x,_)=>{let A;function D(){if(l)return;let I=Te((U,O)=>{(function q(Ae){Ae?U():It(function(){return l?j(!0):It(d.ready,()=>It(n.read(),be=>!!be.done||(g=d.write(be.value),s1(g),!1)))}(),q,O)})(!1)});s1(I)}function B(){return u="closed",a?R():T(()=>(pt(e)&&(f=Jt(e),h=e._state),f||h==="closed"?j(void 0):h==="erroring"||h==="errored"?k(p):(f=!0,d.close())),!1,void 0),null}function b(I){return l||(u="errored",o=I,r?R(!0,I):T(()=>d.abort(I),!0,I)),null}function y(I){return m||(h="errored",p=I,i?R(!0,I):T(()=>n.cancel(I),!0,I)),null}if(s!==void 0&&(A=()=>{let I=s.reason!==void 0?s.reason:new km("Aborted","AbortError"),U=[];r||U.push(()=>h==="writable"?d.abort(I):j(void 0)),i||U.push(()=>u==="readable"?n.cancel(I):j(void 0)),T(()=>Promise.all(U.map(O=>O())),!0,I)},s.aborted?A():s.addEventListener("abort",A)),Ca(t)&&(u=t._state,o=t._storedError),pt(e)&&(h=e._state,p=e._storedError,f=Jt(e)),Ca(t)&&pt(e)&&(v=!0,c()),u==="errored")b(o);else if(h==="erroring"||h==="errored")y(p);else if(u==="closed")B();else if(f||h==="closed"){let I=new TypeError("the destination writable stream closed before all data could be piped to it");i?R(!0,I):T(()=>n.cancel(I),!0,I)}function T(I,U,O){function q(){return h!=="writable"||f?Ae():jo(function(){let be;return j(function ha(){if(be!==g)return be=g,Ye(g,ha,ha)}())}(),Ae),null}function Ae(){return I?Se(I(),()=>ae(U,O),be=>ae(!0,be)):ae(U,O),null}l||(l=!0,v?q():jo(w,q))}function R(I,U){T(void 0,I,U)}function ae(I,U){return m=!0,d.releaseLock(),n.releaseLock(),s!==void 0&&s.removeEventListener("abort",A),I?_(U):x(void 0),null}l||(Se(n.closed,B,b),Se(d.closed,function(){return m||(h="closed"),null},y)),v?D():gi(()=>{v=!0,c(),D()})})}function xm(t,e){return function(a){try{return a.getReader({mode:"byob"}).releaseLock(),!0}catch{return!1}}(t)?function(a){let r,i,s,n,d,o=a.getReader(),p=!1,c=!1,l=!1,m=!1,u=!1,h=!1,f=Te(y=>{d=y});function v(y){$o(y.closed,T=>(y!==o||(s.error(T),n.error(T),u&&h||d(void 0)),null))}function w(){p&&(o.releaseLock(),o=a.getReader(),v(o),p=!1),Se(o.read(),y=>{var T,R;if(l=!1,m=!1,y.done)return u||s.close(),h||n.close(),(T=s.byobRequest)===null||T===void 0||T.respond(0),(R=n.byobRequest)===null||R===void 0||R.respond(0),u&&h||d(void 0),null;let ae=y.value,I=ae,U=ae;if(!u&&!h)try{U=Xo(ae)}catch(O){return s.error(O),n.error(O),d(o.cancel(O)),null}return u||s.enqueue(I),h||n.enqueue(U),c=!1,l?x():m&&_(),null},()=>(c=!1,null))}function g(y,T){p||(o.releaseLock(),o=a.getReader({mode:"byob"}),v(o),p=!0);let R=T?n:s,ae=T?s:n;Se(o.read(y),I=>{var U;l=!1,m=!1;let O=T?h:u,q=T?u:h;if(I.done){O||R.close(),q||ae.close();let be=I.value;return be!==void 0&&(O||R.byobRequest.respondWithNewView(be),q||(U=ae.byobRequest)===null||U===void 0||U.respond(0)),O&&q||d(void 0),null}let Ae=I.value;if(q)O||R.byobRequest.respondWithNewView(Ae);else{let be;try{be=Xo(Ae)}catch(ha){return R.error(ha),ae.error(ha),d(o.cancel(ha)),null}O||R.byobRequest.respondWithNewView(Ae),ae.enqueue(be)}return c=!1,l?x():m&&_(),null},()=>(c=!1,null))}function x(){if(c)return l=!0,j(void 0);c=!0;let y=s.byobRequest;return y===null?w():g(y.view,!1),j(void 0)}function _(){if(c)return m=!0,j(void 0);c=!0;let y=n.byobRequest;return y===null?w():g(y.view,!0),j(void 0)}function A(y){if(u=!0,r=y,h){let T=[r,i],R=o.cancel(T);d(R)}return f}function D(y){if(h=!0,i=y,u){let T=[r,i],R=o.cancel(T);d(R)}return f}let B=new se({type:"bytes",start(y){s=y},pull:x,cancel:A}),b=new se({type:"bytes",start(y){n=y},pull:_,cancel:D});return v(o),[B,b]}(t):function(a,r){let i=a.getReader(),s,n,d,o,p,c=!1,l=!1,m=!1,u=!1,h=Te(_=>{p=_});function f(){return c?(l=!0,j(void 0)):(c=!0,Se(i.read(),_=>{if(l=!1,_.done)return m||d.close(),u||o.close(),m&&u||p(void 0),null;let A=_.value,D=A,B=A;return m||d.enqueue(D),u||o.enqueue(B),c=!1,l&&f(),null},()=>(c=!1,null)),j(void 0))}function v(_){if(m=!0,s=_,u){let A=[s,n],D=i.cancel(A);p(D)}return h}function w(_){if(u=!0,n=_,m){let A=[s,n],D=i.cancel(A);p(D)}return h}let g=new se({start(_){d=_},pull:f,cancel:v}),x=new se({start(_){o=_},pull:f,cancel:w});return $o(i.closed,_=>(d.error(_),o.error(_),m&&u||p(void 0),null)),[g,x]}(t)}function ci(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_controlledReadableStream")&&t instanceof xt}function tr(t){if(function(a){let r=a._controlledReadableStream;return!er(a)||!a._started?!1:!!(p1(r)&&Ii(r)>0||Jp(a)>0)}(t)){if(t._pulling)return void(t._pullAgain=!0);t._pulling=!0,Se(t._pullAlgorithm(),()=>(t._pulling=!1,t._pullAgain&&(t._pullAgain=!1,tr(t)),null),a=>(ar(t,a),null))}}function _i(t){t._pullAlgorithm=void 0,t._cancelAlgorithm=void 0,t._strategySizeAlgorithm=void 0}function ar(t,e){let a=t._controlledReadableStream;a._state==="readable"&&(Yt(t),_i(t),Kp(a,e))}function Jp(t){let e=t._controlledReadableStream._state;return e==="errored"?null:e==="closed"?0:t._strategyHWM-t._queueTotalSize}function er(t){return!t._closeRequested&&t._controlledReadableStream._state==="readable"}function Pm(t,e,a,r){let i=Object.create(xt.prototype),s,n,d;s=e.start!==void 0?()=>e.start(i):()=>{},n=e.pull!==void 0?()=>e.pull(i):()=>j(void 0),d=e.cancel!==void 0?o=>e.cancel(o):()=>j(void 0),function(o,p,c,l,m,u,h){p._controlledReadableStream=o,p._queue=void 0,p._queueTotalSize=void 0,Yt(p),p._started=!1,p._closeRequested=!1,p._pullAgain=!1,p._pulling=!1,p._strategySizeAlgorithm=h,p._strategyHWM=u,p._pullAlgorithm=l,p._cancelAlgorithm=m,o._readableStreamController=p,Se(j(c()),()=>(p._started=!0,tr(p),null),f=>(ar(p,f),null))}(t,i,s,n,d,a,r)}function hi(t){return new TypeError(`ReadableStreamDefaultController.prototype.${t} can only be used on a ReadableStreamDefaultController`)}function Im(t,e,a){return Ke(t,a),r=>Ta(t,e,[r])}function Dm(t,e,a){return Ke(t,a),r=>Ta(t,e,[r])}function Om(t,e,a){return Ke(t,a),r=>Pi(t,e,[r])}function Fm(t,e){if((t=`${t}`)!="bytes")throw new TypeError(`${e} '${t}' is not a valid enumeration value for ReadableStreamType`);return t}function Mm(t,e){if((t=`${t}`)!="byob")throw new TypeError(`${e} '${t}' is not a valid enumeration value for ReadableStreamReaderMode`);return t}function rp(t,e){Dt(t,e);let a=t?.preventAbort,r=t?.preventCancel,i=t?.preventClose,s=t?.signal;return s!==void 0&&function(n,d){if(!function(o){if(typeof o!="object"||o===null)return!1;try{return typeof o.aborted=="boolean"}catch{return!1}}(n))throw new TypeError(`${d} is not an AbortSignal.`)}(s,`${e} has member 'signal' that`),{preventAbort:!!a,preventCancel:!!r,preventClose:!!i,signal:s}}function Vm(t,e){Dt(t,e);let a=t?.readable;gn(a,"readable","ReadableWritablePair"),function(i,s){if(!Z1(i))throw new TypeError(`${s} is not a ReadableStream.`)}(a,`${e} has member 'readable' that`);let r=t?.writable;return gn(r,"writable","ReadableWritablePair"),function(i,s){if(!Cp(i))throw new TypeError(`${s} is not a WritableStream.`)}(r,`${e} has member 'writable' that`),{readable:a,writable:r}}function Ca(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_readableStreamController")&&t instanceof se}function p1(t){return t._reader!==void 0}function Yp(t,e){if(t._disturbed=!0,t._state==="closed")return j(void 0);if(t._state==="errored")return k(t._storedError);ir(t);let a=t._reader;if(a!==void 0&&r1(a)){let r=a._readIntoRequests;a._readIntoRequests=new Re,r.forEach(i=>{i._closeSteps(void 0)})}return Ye(t._readableStreamController[En](e),up)}function ir(t){t._state="closed";let e=t._reader;if(e!==void 0&&(yp(e),Sa(e))){let a=e._readRequests;e._readRequests=new Re,a.forEach(r=>{r._closeSteps()})}}function Kp(t,e){t._state="errored",t._storedError=e;let a=t._reader;a!==void 0&&(An(a,e),Sa(a)?Ap(a,e):Up(a,e))}function _a(t){return new TypeError(`ReadableStream.prototype.${t} can only be used on a ReadableStream`)}function Qp(t,e){Dt(t,e);let a=t?.highWaterMark;return gn(a,"highWaterMark","QueuingStrategyInit"),{highWaterMark:Rn(a)}}function ip(t){return new TypeError(`ByteLengthQueuingStrategy.prototype.${t} can only be used on a ByteLengthQueuingStrategy`)}function sp(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_byteLengthQueuingStrategyHighWaterMark")&&t instanceof sr}function np(t){return new TypeError(`CountQueuingStrategy.prototype.${t} can only be used on a CountQueuingStrategy`)}function dp(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_countQueuingStrategyHighWaterMark")&&t instanceof nr}function Bm(t,e,a){return Ke(t,a),r=>Ta(t,e,[r])}function Lm(t,e,a){return Ke(t,a),r=>Pi(t,e,[r])}function Um(t,e,a){return Ke(t,a),(r,i)=>Ta(t,e,[r,i])}function op(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_transformStreamController")&&t instanceof dr}function Ai(t,e){xi(t,e),Fi(t,e)}function Fi(t,e){tl(t._transformStreamController),function(a,r){a._writableController.error(r),a._writableState==="writable"&&sl(a,r)}(t,e),t._backpressure&&Ri(t,!1)}function Ri(t,e){t._backpressureChangePromise!==void 0&&t._backpressureChangePromise_resolve(),t._backpressureChangePromise=Te(a=>{t._backpressureChangePromise_resolve=a}),t._backpressure=e}function fi(t){return!!Ce(t)&&!!Object.prototype.hasOwnProperty.call(t,"_controlledTransformStream")&&t instanceof Pt}function tl(t){t._transformAlgorithm=void 0,t._flushAlgorithm=void 0}function al(t,e){let a=t._controlledTransformStream;if(!ki(a))throw new TypeError("Readable side is not in a state that permits enqueue");try{(function(i,s){i._readablePulling=!1;try{i._readableController.enqueue(s)}catch(n){throw xi(i,n),n}})(a,e)}catch(i){throw Fi(a,i),a._readableStoredError}(function(i){return!function(s){return ki(s)?!!(s._readablePulling||il(s)>0):!1}(i)})(a)!==a._backpressure&&Ri(a,!0)}function pp(t,e){return Ye(t._transformAlgorithm(e),void 0,a=>{throw Ai(t._controlledTransformStream,a),a})}function vi(t){return new TypeError(`TransformStreamDefaultController.prototype.${t} can only be used on a TransformStreamDefaultController`)}function lp(t){return new TypeError(`TransformStream.prototype.${t} can only be used on a TransformStream`)}function ki(t){return!t._readableCloseRequested&&t._readableState==="readable"}function rl(t){t._readableState="closed",t._readableCloseRequested=!0,t._readableController.close()}function xi(t,e){t._readableState==="readable"&&(t._readableState="errored",t._readableStoredError=e),t._readableController.error(e)}function il(t){return t._readableController.desiredSize}function fn(t,e){t._writableState!=="writable"?Ln(t):sl(t,e)}function sl(t,e){t._writableState="erroring",t._writableStoredError=e,!function(a){return a._writableHasInFlightOperation}(t)&&t._writableStarted&&Ln(t)}function Ln(t){t._writableState="errored"}function mp(t){t._writableState==="erroring"&&Ln(t)}var V,cp,Cn,wm,bm,ym,gi,Re,hp,fp,En,Tn,Nn,Ho,_m,Nt,Si,Rp,kp,Xt,At,Rt,Rm,kt,ot,Hp,o1,tp,km,xt,se,Zp,sr,el,nr,dr,Pt,nl=qt(()=>{V=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?Symbol:t=>`Symbol(${t})`;cp=up;Cn=Promise,wm=Promise.prototype.then,bm=Promise.resolve.bind(Cn),ym=Promise.reject.bind(Cn);gi=t=>{if(typeof queueMicrotask=="function")gi=queueMicrotask;else{let e=j(void 0);gi=a=>It(e,a)}return gi(t)};Re=class{constructor(){this._cursor=0,this._size=0,this._front={_elements:[],_next:void 0},this._back=this._front,this._cursor=0,this._size=0}get length(){return this._size}push(e){let a=this._back,r=a;a._elements.length===16383&&(r={_elements:[],_next:void 0}),a._elements.push(e),r!==a&&(this._back=r,a._next=r),++this._size}shift(){let e=this._front,a=e,r=this._cursor,i=r+1,s=e._elements,n=s[r];return i===16384&&(a=e._next,i=0),--this._size,this._cursor=i,e!==a&&(this._front=a),s[r]=void 0,n}forEach(e){let a=this._cursor,r=this._front,i=r._elements;for(;!(a===i.length&&r._next===void 0||a===i.length&&(r=r._next,i=r._elements,a=0,i.length===0));)e(i[a]),++a}peek(){let e=this._front,a=this._cursor;return e._elements[a]}},hp=V("[[AbortSteps]]"),fp=V("[[ErrorSteps]]"),En=V("[[CancelSteps]]"),Tn=V("[[PullSteps]]"),Nn=V("[[ReleaseSteps]]");Ho=Number.isFinite||function(t){return typeof t=="number"&&isFinite(t)},_m=Math.trunc||function(t){return t<0?Math.ceil(t):Math.floor(t)};Nt=class{constructor(e){if(Ot(e,1,"ReadableStreamDefaultReader"),Ep(e,"First parameter"),p1(e))throw new TypeError("This stream has already been locked for exclusive reading by another reader");vp(this,e),this._readRequests=new Re}get closed(){return Sa(this)?this._closedPromise:k(pi("closed"))}cancel(e){return Sa(this)?this._ownerReadableStream===void 0?k(n1("cancel")):gp(this,e):k(pi("cancel"))}read(){if(!Sa(this))return k(pi("read"));if(this._ownerReadableStream===void 0)return k(n1("read from"));let e,a,r=Te((i,s)=>{e=i,a=s});return function(i,s){let n=i._ownerReadableStream;n._disturbed=!0,n._state==="closed"?s._closeSteps():n._state==="errored"?s._errorSteps(n._storedError):n._readableStreamController[Tn](s)}(this,{_chunkSteps:i=>e({value:i,done:!1}),_closeSteps:()=>e({value:void 0,done:!0}),_errorSteps:i=>a(i)}),r}releaseLock(){if(!Sa(this))throw pi("releaseLock");this._ownerReadableStream!==void 0&&function(e){wp(e);let a=new TypeError("Reader was released");Ap(e,a)}(this)}};Object.defineProperties(Nt.prototype,{cancel:{enumerable:!0},read:{enumerable:!0},releaseLock:{enumerable:!0},closed:{enumerable:!0}}),L(Nt.prototype.cancel,"cancel"),L(Nt.prototype.read,"read"),L(Nt.prototype.releaseLock,"releaseLock"),typeof V.toStringTag=="symbol"&&Object.defineProperty(Nt.prototype,V.toStringTag,{value:"ReadableStreamDefaultReader",configurable:!0});Si=class{constructor(e,a){this._ongoingPromise=void 0,this._isFinished=!1,this._reader=e,this._preventCancel=a}next(){let e=()=>this._nextSteps();return this._ongoingPromise=this._ongoingPromise?Ye(this._ongoingPromise,e,e):e(),this._ongoingPromise}return(e){let a=()=>this._returnSteps(e);return this._ongoingPromise?Ye(this._ongoingPromise,a,a):a()}_nextSteps(){if(this._isFinished)return Promise.resolve({value:void 0,done:!0});let e=this._reader;return e===void 0?k(n1("iterate")):It(e.read(),a=>{var r;return this._ongoingPromise=void 0,a.done&&(this._isFinished=!0,(r=this._reader)===null||r===void 0||r.releaseLock(),this._reader=void 0),a},a=>{var r;throw this._ongoingPromise=void 0,this._isFinished=!0,(r=this._reader)===null||r===void 0||r.releaseLock(),this._reader=void 0,a})}_returnSteps(e){if(this._isFinished)return Promise.resolve({value:e,done:!0});this._isFinished=!0;let a=this._reader;if(a===void 0)return k(n1("finish iterating"));if(this._reader=void 0,!this._preventCancel){let r=a.cancel(e);return a.releaseLock(),Ye(r,()=>({value:e,done:!0}))}return a.releaseLock(),j({value:e,done:!0})}},Rp={next(){return zo(this)?this._asyncIteratorImpl.next():k(Go("next"))},return(t){return zo(this)?this._asyncIteratorImpl.return(t):k(Go("return"))}};typeof V.asyncIterator=="symbol"&&Object.defineProperty(Rp,V.asyncIterator,{value(){return this},writable:!0,configurable:!0});kp=Number.isNaN||function(t){return t!=t};Xt=class{constructor(){throw new TypeError("Illegal constructor")}get view(){if(!mn(this))throw un("view");return this._view}respond(e){if(!mn(this))throw un("respond");if(Ot(e,1,"respond"),e=Sp(e,"First parameter"),this._associatedReadableByteStreamController===void 0)throw new TypeError("This BYOB request has been invalidated");this._view.buffer,function(a,r){let i=a._pendingPullIntos.peek();if(a._controlledReadableByteStream._state==="closed"){if(r!==0)throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream")}else{if(r===0)throw new TypeError("bytesWritten must be greater than 0 when calling respond() on a readable stream");if(i.bytesFilled+r>i.byteLength)throw new RangeError("bytesWritten out of range")}i.buffer=i.buffer,Jo(a,r)}(this._associatedReadableByteStreamController,e)}respondWithNewView(e){if(!mn(this))throw un("respondWithNewView");if(Ot(e,1,"respondWithNewView"),!ArrayBuffer.isView(e))throw new TypeError("You can only respond with array buffer views");if(this._associatedReadableByteStreamController===void 0)throw new TypeError("This BYOB request has been invalidated");e.buffer,function(a,r){let i=a._pendingPullIntos.peek();if(a._controlledReadableByteStream._state==="closed"){if(r.byteLength!==0)throw new TypeError("The view's length must be 0 when calling respondWithNewView() on a closed stream")}else if(r.byteLength===0)throw new TypeError("The view's length must be greater than 0 when calling respondWithNewView() on a readable stream");if(i.byteOffset+i.bytesFilled!==r.byteOffset)throw new RangeError("The region specified by view does not match byobRequest");if(i.bufferByteLength!==r.buffer.byteLength)throw new RangeError("The buffer of view has different capacity than byobRequest");if(i.bytesFilled+r.byteLength>i.byteLength)throw new RangeError("The region specified by view is larger than byobRequest");let s=r.byteLength;i.buffer=r.buffer,Jo(a,s)}(this._associatedReadableByteStreamController,e)}};Object.defineProperties(Xt.prototype,{respond:{enumerable:!0},respondWithNewView:{enumerable:!0},view:{enumerable:!0}}),L(Xt.prototype.respond,"respond"),L(Xt.prototype.respondWithNewView,"respondWithNewView"),typeof V.toStringTag=="symbol"&&Object.defineProperty(Xt.prototype,V.toStringTag,{value:"ReadableStreamBYOBRequest",configurable:!0});At=class{constructor(){throw new TypeError("Illegal constructor")}get byobRequest(){if(!a1(this))throw K1("byobRequest");return function(e){if(e._byobRequest===null&&e._pendingPullIntos.length>0){let a=e._pendingPullIntos.peek(),r=new Uint8Array(a.buffer,a.byteOffset+a.bytesFilled,a.byteLength-a.bytesFilled),i=Object.create(Xt.prototype);(function(s,n,d){s._associatedReadableByteStreamController=n,s._view=d})(i,e,r),e._byobRequest=i}return e._byobRequest}(this)}get desiredSize(){if(!a1(this))throw K1("desiredSize");return Bp(this)}close(){if(!a1(this))throw K1("close");if(this._closeRequested)throw new TypeError("The stream has already been closed; do not close it again!");let e=this._controlledReadableByteStream._state;if(e!=="readable")throw new TypeError(`The stream (in ${e} state) is not in the readable state and cannot be closed`);(function(a){let r=a._controlledReadableByteStream;if(!(a._closeRequested||r._state!=="readable")){if(a._queueTotalSize>0)return void(a._closeRequested=!0);if(a._pendingPullIntos.length>0&&a._pendingPullIntos.peek().bytesFilled>0){let i=new TypeError("Insufficient bytes to fill elements in the given buffer");throw d1(a,i),i}Ci(a),ir(r)}})(this)}enqueue(e){if(!a1(this))throw K1("enqueue");if(Ot(e,1,"enqueue"),!ArrayBuffer.isView(e))throw new TypeError("chunk must be an array buffer view");if(e.byteLength===0)throw new TypeError("chunk must have non-zero byteLength");if(e.buffer.byteLength===0)throw new TypeError("chunk's buffer must have non-zero byteLength");if(this._closeRequested)throw new TypeError("stream is closed or draining");let a=this._controlledReadableByteStream._state;if(a!=="readable")throw new TypeError(`The stream (in ${a} state) is not in the readable state and cannot be enqueued to`);(function(r,i){let s=r._controlledReadableByteStream;if(r._closeRequested||s._state!=="readable")return;let n=i.buffer,d=i.byteOffset,o=i.byteLength,p=n;if(r._pendingPullIntos.length>0){let c=r._pendingPullIntos.peek();c.buffer,Pn(r),c.buffer=c.buffer,c.readerType==="none"&&Op(r,c)}Np(s)?(function(c){let l=c._controlledReadableByteStream._reader;for(;l._readRequests.length>0;){if(c._queueTotalSize===0)return;Yo(c,l._readRequests.shift())}}(r),Ii(s)===0?wi(r,p,d,o):(r._pendingPullIntos.length>0&&i1(r),kn(s,new Uint8Array(p,d,o),!1))):In(s)?(wi(r,p,d,o),yn(r)):wi(r,p,d,o),Ea(r)})(this,e)}error(e){if(!a1(this))throw K1("error");d1(this,e)}[En](e){Pp(this),Yt(this);let a=this._cancelAlgorithm(e);return Ci(this),a}[Tn](e){let a=this._controlledReadableByteStream;if(this._queueTotalSize>0)return void Yo(this,e);let r=this._autoAllocateChunkSize;if(r!==void 0){let i;try{i=new ArrayBuffer(r)}catch(n){return void e._errorSteps(n)}let s={buffer:i,bufferByteLength:r,byteOffset:0,byteLength:r,bytesFilled:0,elementSize:1,viewConstructor:Uint8Array,readerType:"default"};this._pendingPullIntos.push(s)}Tp(a,e),Ea(this)}[Nn](){if(this._pendingPullIntos.length>0){let e=this._pendingPullIntos.peek();e.readerType="none",this._pendingPullIntos=new Re,this._pendingPullIntos.push(e)}}};Object.defineProperties(At.prototype,{close:{enumerable:!0},enqueue:{enumerable:!0},error:{enumerable:!0},byobRequest:{enumerable:!0},desiredSize:{enumerable:!0}}),L(At.prototype.close,"close"),L(At.prototype.enqueue,"enqueue"),L(At.prototype.error,"error"),typeof V.toStringTag=="symbol"&&Object.defineProperty(At.prototype,V.toStringTag,{value:"ReadableByteStreamController",configurable:!0});Rt=class{constructor(e){if(Ot(e,1,"ReadableStreamBYOBReader"),Ep(e,"First parameter"),p1(e))throw new TypeError("This stream has already been locked for exclusive reading by another reader");if(!a1(e._readableStreamController))throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");vp(this,e),this._readIntoRequests=new Re}get closed(){return r1(this)?this._closedPromise:k(li("closed"))}cancel(e){return r1(this)?this._ownerReadableStream===void 0?k(n1("cancel")):gp(this,e):k(li("cancel"))}read(e){if(!r1(this))return k(li("read"));if(!ArrayBuffer.isView(e))return k(new TypeError("view must be an array buffer view"));if(e.byteLength===0)return k(new TypeError("view must have non-zero byteLength"));if(e.buffer.byteLength===0)return k(new TypeError("view's buffer must have non-zero byteLength"));if(e.buffer,this._ownerReadableStream===void 0)return k(n1("read from"));let a,r,i=Te((s,n)=>{a=s,r=n});return function(s,n,d){let o=s._ownerReadableStream;o._disturbed=!0,o._state==="errored"?d._errorSteps(o._storedError):function(p,c,l){let m=p._controlledReadableByteStream,u=1;c.constructor!==DataView&&(u=c.constructor.BYTES_PER_ELEMENT);let h=c.constructor,f=c.buffer,v={buffer:f,bufferByteLength:f.byteLength,byteOffset:c.byteOffset,byteLength:c.byteLength,bytesFilled:0,elementSize:u,viewConstructor:h,readerType:"byob"};if(p._pendingPullIntos.length>0)return p._pendingPullIntos.push(v),void Ko(m,l);if(m._state!=="closed"){if(p._queueTotalSize>0){if(Fp(p,v)){let w=Ip(v);return Vp(p),void l._chunkSteps(w)}if(p._closeRequested){let w=new TypeError("Insufficient bytes to fill elements in the given buffer");return d1(p,w),void l._errorSteps(w)}}p._pendingPullIntos.push(v),Ko(m,l),Ea(p)}else{let w=new h(v.buffer,v.byteOffset,0);l._closeSteps(w)}}(o._readableStreamController,n,d)}(this,e,{_chunkSteps:s=>a({value:s,done:!1}),_closeSteps:s=>a({value:s,done:!0}),_errorSteps:s=>r(s)}),i}releaseLock(){if(!r1(this))throw li("releaseLock");this._ownerReadableStream!==void 0&&function(e){wp(e);let a=new TypeError("Reader was released");Up(e,a)}(this)}};Object.defineProperties(Rt.prototype,{cancel:{enumerable:!0},read:{enumerable:!0},releaseLock:{enumerable:!0},closed:{enumerable:!0}}),L(Rt.prototype.cancel,"cancel"),L(Rt.prototype.read,"read"),L(Rt.prototype.releaseLock,"releaseLock"),typeof V.toStringTag=="symbol"&&Object.defineProperty(Rt.prototype,V.toStringTag,{value:"ReadableStreamBYOBReader",configurable:!0});Rm=typeof AbortController=="function",kt=class{constructor(e={},a={}){e===void 0?e=null:_p(e,"First parameter");let r=Ti(a,"Second parameter"),i=function(d,o){Dt(d,o);let p=d?.abort,c=d?.close,l=d?.start,m=d?.type,u=d?.write;return{abort:p===void 0?void 0:Em(p,d,`${o} has member 'abort' that`),close:c===void 0?void 0:Tm(c,d,`${o} has member 'close' that`),start:l===void 0?void 0:Nm(l,d,`${o} has member 'start' that`),write:u===void 0?void 0:Am(u,d,`${o} has member 'write' that`),type:m}}(e,"First parameter");var s;if((s=this)._state="writable",s._storedError=void 0,s._writer=void 0,s._writableStreamController=void 0,s._writeRequests=new Re,s._inFlightWriteRequest=void 0,s._closeRequest=void 0,s._inFlightCloseRequest=void 0,s._pendingAbortRequest=void 0,s._backpressure=!1,i.type!==void 0)throw new RangeError("Invalid type is specified");let n=Ei(r);(function(d,o,p,c){let l=Object.create(o1.prototype),m,u,h,f;m=o.start!==void 0?()=>o.start(l):()=>{},u=o.write!==void 0?v=>o.write(v,l):()=>j(void 0),h=o.close!==void 0?()=>o.close():()=>j(void 0),f=o.abort!==void 0?v=>o.abort(v):()=>j(void 0),function(v,w,g,x,_,A,D,B){w._controlledWritableStream=v,v._writableStreamController=w,w._queue=void 0,w._queueTotalSize=void 0,Yt(w),w._abortReason=void 0,w._abortController=function(){if(Rm)return new AbortController}(),w._started=!1,w._strategySizeAlgorithm=B,w._strategyHWM=D,w._writeAlgorithm=x,w._closeAlgorithm=_,w._abortAlgorithm=A;let b=Mn(w);Fn(v,b);let y=g();Se(j(y),()=>(w._started=!0,Di(w),null),T=>(w._started=!0,_n(v,T),null))}(d,l,m,u,h,f,p,c)})(this,i,rr(r,1),n)}get locked(){if(!pt(this))throw ui("locked");return bi(this)}abort(e){return pt(this)?bi(this)?k(new TypeError("Cannot abort a stream that already has a writer")):qp(this,e):k(ui("abort"))}close(){return pt(this)?bi(this)?k(new TypeError("Cannot close a stream that already has a writer")):Jt(this)?k(new TypeError("Cannot close an already-closing stream")):jp(this):k(ui("close"))}getWriter(){if(!pt(this))throw ui("getWriter");return new ot(this)}};Object.defineProperties(kt.prototype,{abort:{enumerable:!0},close:{enumerable:!0},getWriter:{enumerable:!0},locked:{enumerable:!0}}),L(kt.prototype.abort,"abort"),L(kt.prototype.close,"close"),L(kt.prototype.getWriter,"getWriter"),typeof V.toStringTag=="symbol"&&Object.defineProperty(kt.prototype,V.toStringTag,{value:"WritableStream",configurable:!0});ot=class{constructor(e){if(Ot(e,1,"WritableStreamDefaultWriter"),function(i,s){if(!pt(i))throw new TypeError(`${s} is not a WritableStream.`)}(e,"First parameter"),bi(e))throw new TypeError("This stream has already been locked for exclusive writing by another writer");this._ownerWritableStream=e,e._writer=this;let a=e._state;if(a==="writable")!Jt(e)&&e._backpressure?Oi(this):ep(this),yi(this);else if(a==="erroring")Sn(this,e._storedError),yi(this);else if(a==="closed")ep(this),yi(r=this),Gp(r);else{let i=e._storedError;Sn(this,i),Zo(this,i)}var r}get closed(){return ba(this)?this._closedPromise:k(ya("closed"))}get desiredSize(){if(!ba(this))throw ya("desiredSize");if(this._ownerWritableStream===void 0)throw Q1("desiredSize");return function(e){let a=e._ownerWritableStream,r=a._state;return r==="errored"||r==="erroring"?null:r==="closed"?0:Wp(a._writableStreamController)}(this)}get ready(){return ba(this)?this._readyPromise:k(ya("ready"))}abort(e){return ba(this)?this._ownerWritableStream===void 0?k(Q1("abort")):function(a,r){return qp(a._ownerWritableStream,r)}(this,e):k(ya("abort"))}close(){if(!ba(this))return k(ya("close"));let e=this._ownerWritableStream;return e===void 0?k(Q1("close")):Jt(e)?k(new TypeError("Cannot close an already-closing stream")):jp(this._ownerWritableStream)}releaseLock(){if(!ba(this))throw ya("releaseLock");this._ownerWritableStream!==void 0&&function(e){let a=e._ownerWritableStream,r=new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");$p(e,r),function(i,s){i._closedPromiseState==="pending"?Vn(i,s):function(n,d){Zo(n,d)}(i,s)}(e,r),a._writer=void 0,e._ownerWritableStream=void 0}(this)}write(e){return ba(this)?this._ownerWritableStream===void 0?k(Q1("write to")):function(a,r){let i=a._ownerWritableStream,s=i._writableStreamController,n=function(p,c){try{return p._strategySizeAlgorithm(c)}catch(l){return Qo(p,l),1}}(s,r);if(i!==a._ownerWritableStream)return k(Q1("write to"));let d=i._state;if(d==="errored")return k(i._storedError);if(Jt(i)||d==="closed")return k(new TypeError("The stream is closing or closed and cannot be written to"));if(d==="erroring")return k(i._storedError);let o=function(p){return Te((c,l)=>{let m={_resolve:c,_reject:l};p._writeRequests.push(m)})}(i);return function(p,c,l){try{xn(p,c,l)}catch(u){return void Qo(p,u)}let m=p._controlledWritableStream;!Jt(m)&&m._state==="writable"&&Fn(m,Mn(p)),Di(p)}(s,r,n),o}(this,e):k(ya("write"))}};Object.defineProperties(ot.prototype,{abort:{enumerable:!0},close:{enumerable:!0},releaseLock:{enumerable:!0},write:{enumerable:!0},closed:{enumerable:!0},desiredSize:{enumerable:!0},ready:{enumerable:!0}}),L(ot.prototype.abort,"abort"),L(ot.prototype.close,"close"),L(ot.prototype.releaseLock,"releaseLock"),L(ot.prototype.write,"write"),typeof V.toStringTag=="symbol"&&Object.defineProperty(ot.prototype,V.toStringTag,{value:"WritableStreamDefaultWriter",configurable:!0});Hp={},o1=class{constructor(){throw new TypeError("Illegal constructor")}get abortReason(){if(!cn(this))throw hn("abortReason");return this._abortReason}get signal(){if(!cn(this))throw hn("signal");if(this._abortController===void 0)throw new TypeError("WritableStreamDefaultController.prototype.signal is not supported");return this._abortController.signal}error(e){if(!cn(this))throw hn("error");this._controlledWritableStream._state==="writable"&&zp(this,e)}[hp](e){let a=this._abortAlgorithm(e);return Ni(this),a}[fp](){Yt(this)}};Object.defineProperties(o1.prototype,{abortReason:{enumerable:!0},signal:{enumerable:!0},error:{enumerable:!0}}),typeof V.toStringTag=="symbol"&&Object.defineProperty(o1.prototype,V.toStringTag,{value:"WritableStreamDefaultController",configurable:!0});tp=typeof DOMException<"u"?DOMException:void 0,km=function(t){if(typeof t!="function"&&typeof t!="object")return!1;try{return new t,!0}catch{return!1}}(tp)?tp:function(){let t=function(e,a){this.message=e||"",this.name=a||"Error",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)};return t.prototype=Object.create(Error.prototype),Object.defineProperty(t.prototype,"constructor",{value:t,writable:!0,configurable:!0}),t}();xt=class{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!ci(this))throw hi("desiredSize");return Jp(this)}close(){if(!ci(this))throw hi("close");if(!er(this))throw new TypeError("The stream is not in a state that permits close");(function(e){if(!er(e))return;let a=e._controlledReadableStream;e._closeRequested=!0,e._queue.length===0&&(_i(e),ir(a))})(this)}enqueue(e){if(!ci(this))throw hi("enqueue");if(!er(this))throw new TypeError("The stream is not in a state that permits enqueue");return function(a,r){if(!er(a))return;let i=a._controlledReadableStream;if(p1(i)&&Ii(i)>0)kn(i,r,!1);else{let s;try{s=a._strategySizeAlgorithm(r)}catch(n){throw ar(a,n),n}try{xn(a,r,s)}catch(n){throw ar(a,n),n}}tr(a)}(this,e)}error(e){if(!ci(this))throw hi("error");ar(this,e)}[En](e){Yt(this);let a=this._cancelAlgorithm(e);return _i(this),a}[Tn](e){let a=this._controlledReadableStream;if(this._queue.length>0){let r=wn(this);this._closeRequested&&this._queue.length===0?(_i(this),ir(a)):tr(this),e._chunkSteps(r)}else Tp(a,e),tr(this)}[Nn](){}};Object.defineProperties(xt.prototype,{close:{enumerable:!0},enqueue:{enumerable:!0},error:{enumerable:!0},desiredSize:{enumerable:!0}}),L(xt.prototype.close,"close"),L(xt.prototype.enqueue,"enqueue"),L(xt.prototype.error,"error"),typeof V.toStringTag=="symbol"&&Object.defineProperty(xt.prototype,V.toStringTag,{value:"ReadableStreamDefaultController",configurable:!0});se=class{constructor(e={},a={}){e===void 0?e=null:_p(e,"First parameter");let r=Ti(a,"Second parameter"),i=function(n,d){Dt(n,d);let o=n,p=o?.autoAllocateChunkSize,c=o?.cancel,l=o?.pull,m=o?.start,u=o?.type;return{autoAllocateChunkSize:p===void 0?void 0:Sp(p,`${d} has member 'autoAllocateChunkSize' that`),cancel:c===void 0?void 0:Im(c,o,`${d} has member 'cancel' that`),pull:l===void 0?void 0:Dm(l,o,`${d} has member 'pull' that`),start:m===void 0?void 0:Om(m,o,`${d} has member 'start' that`),type:u===void 0?void 0:Fm(u,`${d} has member 'type' that`)}}(e,"First parameter");var s;if((s=this)._state="readable",s._reader=void 0,s._storedError=void 0,s._disturbed=!1,i.type==="bytes"){if(r.size!==void 0)throw new RangeError("The strategy for a byte stream cannot have a size function");Sm(this,i,rr(r,0))}else{let n=Ei(r);Pm(this,i,rr(r,1),n)}}get locked(){if(!Ca(this))throw _a("locked");return p1(this)}cancel(e){return Ca(this)?p1(this)?k(new TypeError("Cannot cancel a stream that already has a reader")):Yp(this,e):k(_a("cancel"))}getReader(e){if(!Ca(this))throw _a("getReader");return function(a,r){Dt(a,r);let i=a?.mode;return{mode:i===void 0?void 0:Mm(i,`${r} has member 'mode' that`)}}(e,"First parameter").mode===void 0?new Nt(this):function(a){return new Rt(a)}(this)}pipeThrough(e,a={}){if(!Z1(this))throw _a("pipeThrough");Ot(e,1,"pipeThrough");let r=Vm(e,"First parameter"),i=rp(a,"Second parameter");if(this.locked)throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");if(r.writable.locked)throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");return s1(ap(this,r.writable,i.preventClose,i.preventAbort,i.preventCancel,i.signal)),r.readable}pipeTo(e,a={}){if(!Z1(this))return k(_a("pipeTo"));if(e===void 0)return k("Parameter 1 is required in 'pipeTo'.");if(!Cp(e))return k(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream"));let r;try{r=rp(a,"Second parameter")}catch(i){return k(i)}return this.locked?k(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")):e.locked?k(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")):ap(this,e,r.preventClose,r.preventAbort,r.preventCancel,r.signal)}tee(){if(!Z1(this))throw _a("tee");if(this.locked)throw new TypeError("Cannot tee a stream that already has a reader");return xm(this)}values(e){if(!Z1(this))throw _a("values");return function(a,r){let i=a.getReader(),s=new Si(i,r),n=Object.create(Rp);return n._asyncIteratorImpl=s,n}(this,function(a,r){return Dt(a,r),{preventCancel:!!a?.preventCancel}}(e,"First parameter").preventCancel)}};Object.defineProperties(se.prototype,{cancel:{enumerable:!0},getReader:{enumerable:!0},pipeThrough:{enumerable:!0},pipeTo:{enumerable:!0},tee:{enumerable:!0},values:{enumerable:!0},locked:{enumerable:!0}}),L(se.prototype.cancel,"cancel"),L(se.prototype.getReader,"getReader"),L(se.prototype.pipeThrough,"pipeThrough"),L(se.prototype.pipeTo,"pipeTo"),L(se.prototype.tee,"tee"),L(se.prototype.values,"values"),typeof V.toStringTag=="symbol"&&Object.defineProperty(se.prototype,V.toStringTag,{value:"ReadableStream",configurable:!0}),typeof V.asyncIterator=="symbol"&&Object.defineProperty(se.prototype,V.asyncIterator,{value:se.prototype.values,writable:!0,configurable:!0});Zp=t=>t.byteLength;L(Zp,"size");sr=class{constructor(e){Ot(e,1,"ByteLengthQueuingStrategy"),e=Qp(e,"First parameter"),this._byteLengthQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!sp(this))throw ip("highWaterMark");return this._byteLengthQueuingStrategyHighWaterMark}get size(){if(!sp(this))throw ip("size");return Zp}};Object.defineProperties(sr.prototype,{highWaterMark:{enumerable:!0},size:{enumerable:!0}}),typeof V.toStringTag=="symbol"&&Object.defineProperty(sr.prototype,V.toStringTag,{value:"ByteLengthQueuingStrategy",configurable:!0});el=()=>1;L(el,"size");nr=class{constructor(e){Ot(e,1,"CountQueuingStrategy"),e=Qp(e,"First parameter"),this._countQueuingStrategyHighWaterMark=e.highWaterMark}get highWaterMark(){if(!dp(this))throw np("highWaterMark");return this._countQueuingStrategyHighWaterMark}get size(){if(!dp(this))throw np("size");return el}};Object.defineProperties(nr.prototype,{highWaterMark:{enumerable:!0},size:{enumerable:!0}}),typeof V.toStringTag=="symbol"&&Object.defineProperty(nr.prototype,V.toStringTag,{value:"CountQueuingStrategy",configurable:!0});dr=class{constructor(e={},a={},r={}){e===void 0&&(e=null);let i=Ti(a,"Second parameter"),s=Ti(r,"Third parameter"),n=function(m,u){Dt(m,u);let h=m?.flush,f=m?.readableType,v=m?.start,w=m?.transform,g=m?.writableType;return{flush:h===void 0?void 0:Bm(h,m,`${u} has member 'flush' that`),readableType:f,start:v===void 0?void 0:Lm(v,m,`${u} has member 'start' that`),transform:w===void 0?void 0:Um(w,m,`${u} has member 'transform' that`),writableType:g}}(e,"First parameter");if(n.readableType!==void 0)throw new RangeError("Invalid readableType specified");if(n.writableType!==void 0)throw new RangeError("Invalid writableType specified");let d=rr(s,0),o=Ei(s),p=rr(i,1),c=Ei(i),l;(function(m,u,h,f,v,w){function g(){return u}function x(b){return function(y,T){let R=y._transformStreamController;return y._backpressure?Ye(y._backpressureChangePromise,()=>{if((pt(y._writable)?y._writable._state:y._writableState)==="erroring")throw pt(y._writable)?y._writable._storedError:y._writableStoredError;return pp(R,T)}):pp(R,T)}(m,b)}function _(b){return function(y,T){return Ai(y,T),j(void 0)}(m,b)}function A(){return function(b){let y=b._transformStreamController,T=y._flushAlgorithm();return tl(y),Ye(T,()=>{if(b._readableState==="errored")throw b._readableStoredError;ki(b)&&rl(b)},R=>{throw Ai(b,R),b._readableStoredError})}(m)}function D(){return function(b){return Ri(b,!1),b._backpressureChangePromise}(m)}function B(b){return Fi(m,b),j(void 0)}m._writableState="writable",m._writableStoredError=void 0,m._writableHasInFlightOperation=!1,m._writableStarted=!1,m._writable=function(b,y,T,R,ae,I,U){return new kt({start(O){b._writableController=O;try{let q=O.signal;q!==void 0&&q.addEventListener("abort",()=>{b._writableState==="writable"&&(b._writableState="erroring",q.reason&&(b._writableStoredError=q.reason))})}catch{}return Ye(y(),()=>(b._writableStarted=!0,mp(b),null),q=>{throw b._writableStarted=!0,fn(b,q),q})},write:O=>(function(q){q._writableHasInFlightOperation=!0}(b),Ye(T(O),()=>(function(q){q._writableHasInFlightOperation=!1}(b),mp(b),null),q=>{throw function(Ae,be){Ae._writableHasInFlightOperation=!1,fn(Ae,be)}(b,q),q})),close:()=>(function(O){O._writableHasInFlightOperation=!0}(b),Ye(R(),()=>(function(O){O._writableHasInFlightOperation=!1,O._writableState==="erroring"&&(O._writableStoredError=void 0),O._writableState="closed"}(b),null),O=>{throw function(q,Ae){q._writableHasInFlightOperation=!1,q._writableState,fn(q,Ae)}(b,O),O})),abort:O=>(b._writableState="errored",b._writableStoredError=O,ae(O))},{highWaterMark:I,size:U})}(m,g,x,A,_,h,f),m._readableState="readable",m._readableStoredError=void 0,m._readableCloseRequested=!1,m._readablePulling=!1,m._readable=function(b,y,T,R,ae,I){return new se({start:U=>(b._readableController=U,y().catch(O=>{xi(b,O)})),pull:()=>(b._readablePulling=!0,T().catch(U=>{xi(b,U)})),cancel:U=>(b._readableState="closed",R(U))},{highWaterMark:ae,size:I})}(m,g,D,B,v,w),m._backpressure=void 0,m._backpressureChangePromise=void 0,m._backpressureChangePromise_resolve=void 0,Ri(m,!0),m._transformStreamController=void 0})(this,Te(m=>{l=m}),p,c,d,o),function(m,u){let h=Object.create(Pt.prototype),f,v;f=u.transform!==void 0?w=>u.transform(w,h):w=>{try{return al(h,w),j(void 0)}catch(g){return k(g)}},v=u.flush!==void 0?()=>u.flush(h):()=>j(void 0),function(w,g,x,_){g._controlledTransformStream=w,w._transformStreamController=g,g._transformAlgorithm=x,g._flushAlgorithm=_}(m,h,f,v)}(this,n),n.start!==void 0?l(n.start(this._transformStreamController)):l(void 0)}get readable(){if(!op(this))throw lp("readable");return this._readable}get writable(){if(!op(this))throw lp("writable");return this._writable}};Object.defineProperties(dr.prototype,{readable:{enumerable:!0},writable:{enumerable:!0}}),typeof V.toStringTag=="symbol"&&Object.defineProperty(dr.prototype,V.toStringTag,{value:"TransformStream",configurable:!0});Pt=class{constructor(){throw new TypeError("Illegal constructor")}get desiredSize(){if(!fi(this))throw vi("desiredSize");return il(this._controlledTransformStream)}enqueue(e){if(!fi(this))throw vi("enqueue");al(this,e)}error(e){if(!fi(this))throw vi("error");var a;a=e,Ai(this._controlledTransformStream,a)}terminate(){if(!fi(this))throw vi("terminate");(function(e){let a=e._controlledTransformStream;ki(a)&&rl(a);let r=new TypeError("TransformStream terminated");Fi(a,r)})(this)}};Object.defineProperties(Pt.prototype,{enqueue:{enumerable:!0},error:{enumerable:!0},terminate:{enumerable:!0},desiredSize:{enumerable:!0}}),L(Pt.prototype.enqueue,"enqueue"),L(Pt.prototype.error,"error"),L(Pt.prototype.terminate,"terminate"),typeof V.toStringTag=="symbol"&&Object.defineProperty(Pt.prototype,V.toStringTag,{value:"TransformStreamDefaultController",configurable:!0})});var ie,Mi=qt(()=>{ie=t=>typeof t=="function"});async function*qm(t){let e=t.byteOffset+t.byteLength,a=t.byteOffset;for(;a!==e;){let r=Math.min(e-a,dl),i=t.buffer.slice(a,a+r);a+=i.byteLength,yield new Uint8Array(i)}}async function*jm(t){let e=0;for(;e!==t.size;){let r=await t.slice(e,Math.min(t.size,e+dl)).arrayBuffer();e+=r.byteLength,yield new Uint8Array(r)}}async function*Vi(t,e=!1){for(let a of t)ArrayBuffer.isView(a)?e?yield*qm(a):yield a:ie(a.stream)?yield*a.stream():yield*jm(a)}function*ol(t,e,a=0,r){r??(r=e);let i=a<0?Math.max(e+a,0):Math.min(a,e),s=r<0?Math.max(e+r,0):Math.min(r,e),n=Math.max(s-i,0),d=0;for(let o of t){if(d>=n)break;let p=ArrayBuffer.isView(o)?o.byteLength:o.size;if(i&&p<=i)i-=p,s-=p;else{let c;ArrayBuffer.isView(o)?(c=o.subarray(i,Math.min(p,s)),d+=c.byteLength):(c=o.slice(i,Math.min(p,s)),d+=c.size),s-=p,i=0,yield c}}}var dl,pl=qt(()=>{Mi();dl=65536});var Kt,ll,Na,Bi,or,lt,Li=qt(()=>{nl();Mi();pl();Kt=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},ll=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},lt=class t{constructor(e=[],a={}){if(Na.set(this,[]),Bi.set(this,""),or.set(this,0),a??(a={}),typeof e!="object"||e===null)throw new TypeError("Failed to construct 'Blob': The provided value cannot be converted to a sequence.");if(!ie(e[Symbol.iterator]))throw new TypeError("Failed to construct 'Blob': The object must have a callable @@iterator property.");if(typeof a!="object"&&!ie(a))throw new TypeError("Failed to construct 'Blob': parameter 2 cannot convert to dictionary.");let r=new TextEncoder;for(let s of e){let n;ArrayBuffer.isView(s)?n=new Uint8Array(s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)):s instanceof ArrayBuffer?n=new Uint8Array(s.slice(0)):s instanceof t?n=s:n=r.encode(String(s)),ll(this,or,Kt(this,or,"f")+(ArrayBuffer.isView(n)?n.byteLength:n.size),"f"),Kt(this,Na,"f").push(n)}let i=a.type===void 0?"":String(a.type);ll(this,Bi,/^[\x20-\x7E]*$/.test(i)?i:"","f")}static[(Na=new WeakMap,Bi=new WeakMap,or=new WeakMap,Symbol.hasInstance)](e){return!!(e&&typeof e=="object"&&ie(e.constructor)&&(ie(e.stream)||ie(e.arrayBuffer))&&/^(Blob|File)$/.test(e[Symbol.toStringTag]))}get type(){return Kt(this,Bi,"f")}get size(){return Kt(this,or,"f")}slice(e,a,r){return new t(ol(Kt(this,Na,"f"),this.size,e,a),{type:r})}async text(){let e=new TextDecoder,a="";for await(let r of Vi(Kt(this,Na,"f")))a+=e.decode(r,{stream:!0});return a+=e.decode(),a}async arrayBuffer(){let e=new Uint8Array(this.size),a=0;for await(let r of Vi(Kt(this,Na,"f")))e.set(r,a),a+=r.length;return e.buffer}stream(){let e=Vi(Kt(this,Na,"f"),!0);return new se({async pull(a){let{value:r,done:i}=await e.next();if(i)return queueMicrotask(()=>a.close());a.enqueue(r)},async cancel(){await e.return()}})}get[Symbol.toStringTag](){return"Blob"}};Object.defineProperties(lt.prototype,{type:{enumerable:!0},size:{enumerable:!0},slice:{enumerable:!0},stream:{enumerable:!0},text:{enumerable:!0},arrayBuffer:{enumerable:!0}})});var ml,ul,Ui,qi,Qe,pr=qt(()=>{Li();ml=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},ul=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},Qe=class extends lt{constructor(e,a,r={}){if(super(e,r),Ui.set(this,void 0),qi.set(this,0),arguments.length<2)throw new TypeError(`Failed to construct 'File': 2 arguments required, but only ${arguments.length} present.`);ml(this,Ui,String(a),"f");let i=r.lastModified===void 0?Date.now():Number(r.lastModified);Number.isNaN(i)||ml(this,qi,i,"f")}static[(Ui=new WeakMap,qi=new WeakMap,Symbol.hasInstance)](e){return e instanceof lt&&e[Symbol.toStringTag]==="File"&&typeof e.name=="string"}get name(){return ul(this,Ui,"f")}get lastModified(){return ul(this,qi,"f")}get webkitRelativePath(){return""}get[Symbol.toStringTag](){return"File"}}});var Un,qn=qt(()=>{pr();Un=t=>t instanceof Qe});var wl=de((P9,gl)=>{var l1=1e3,m1=l1*60,u1=m1*60,Aa=u1*24,Hm=Aa*7,Wm=Aa*365.25;gl.exports=function(t,e){e=e||{};var a=typeof t;if(a==="string"&&t.length>0)return zm(t);if(a==="number"&&isFinite(t))return e.long?Xm(t):Gm(t);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(t))};function zm(t){if(t=String(t),!(t.length>100)){var e=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(t);if(e){var a=parseFloat(e[1]),r=(e[2]||"ms").toLowerCase();switch(r){case"years":case"year":case"yrs":case"yr":case"y":return a*Wm;case"weeks":case"week":case"w":return a*Hm;case"days":case"day":case"d":return a*Aa;case"hours":case"hour":case"hrs":case"hr":case"h":return a*u1;case"minutes":case"minute":case"mins":case"min":case"m":return a*m1;case"seconds":case"second":case"secs":case"sec":case"s":return a*l1;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return a;default:return}}}}function Gm(t){var e=Math.abs(t);return e>=Aa?Math.round(t/Aa)+"d":e>=u1?Math.round(t/u1)+"h":e>=m1?Math.round(t/m1)+"m":e>=l1?Math.round(t/l1)+"s":t+"ms"}function Xm(t){var e=Math.abs(t);return e>=Aa?Hi(t,e,Aa,"day"):e>=u1?Hi(t,e,u1,"hour"):e>=m1?Hi(t,e,m1,"minute"):e>=l1?Hi(t,e,l1,"second"):t+" ms"}function Hi(t,e,a,r){var i=e>=a*1.5;return Math.round(t/a)+" "+r+(i?"s":"")}});var yl=de((I9,bl)=>{"use strict";var Jm=require("util"),Ym=wl();bl.exports=function(t){if(typeof t=="number")return t;var e=Ym(t);if(e===void 0){var a=new Error(Jm.format("humanize-ms(%j) result undefined",t));console.warn(a.stack)}return e}});var Wi=de((D9,_l)=>{"use strict";_l.exports={CURRENT_ID:Symbol("agentkeepalive#currentId"),CREATE_ID:Symbol("agentkeepalive#createId"),INIT_SOCKET:Symbol("agentkeepalive#initSocket"),CREATE_HTTPS_CONNECTION:Symbol("agentkeepalive#createHttpsConnection"),SOCKET_CREATED_TIME:Symbol("agentkeepalive#socketCreatedTime"),SOCKET_NAME:Symbol("agentkeepalive#socketName"),SOCKET_REQUEST_COUNT:Symbol("agentkeepalive#socketRequestCount"),SOCKET_REQUEST_FINISHED_COUNT:Symbol("agentkeepalive#socketRequestFinishedCount")}});var Xn=de((O9,Tl)=>{"use strict";var Km=require("http").Agent,$n=yl(),Ne=require("util").debuglog("agentkeepalive"),{INIT_SOCKET:Sl,CURRENT_ID:zi,CREATE_ID:Cl,SOCKET_CREATED_TIME:El,SOCKET_NAME:ke,SOCKET_REQUEST_COUNT:qe,SOCKET_REQUEST_FINISHED_COUNT:ct}=Wi(),zn=1,Hn=parseInt(process.version.split(".",1)[0].substring(1));Hn>=11&&Hn<=12?zn=2:Hn>=13&&(zn=3);function lr(t){console.log("[agentkeepalive:deprecated] %s",t)}var Gn=class extends Km{constructor(e){e=e||{},e.keepAlive=e.keepAlive!==!1,e.freeSocketTimeout===void 0&&(e.freeSocketTimeout=4e3),e.keepAliveTimeout&&(lr("options.keepAliveTimeout is deprecated, please use options.freeSocketTimeout instead"),e.freeSocketTimeout=e.keepAliveTimeout,delete e.keepAliveTimeout),e.freeSocketKeepAliveTimeout&&(lr("options.freeSocketKeepAliveTimeout is deprecated, please use options.freeSocketTimeout instead"),e.freeSocketTimeout=e.freeSocketKeepAliveTimeout,delete e.freeSocketKeepAliveTimeout),e.timeout===void 0&&(e.timeout=Math.max(e.freeSocketTimeout*2,8e3)),e.timeout=$n(e.timeout),e.freeSocketTimeout=$n(e.freeSocketTimeout),e.socketActiveTTL=e.socketActiveTTL?$n(e.socketActiveTTL):0,super(e),this[zi]=0,this.createSocketCount=0,this.createSocketCountLastCheck=0,this.createSocketErrorCount=0,this.createSocketErrorCountLastCheck=0,this.closeSocketCount=0,this.closeSocketCountLastCheck=0,this.errorSocketCount=0,this.errorSocketCountLastCheck=0,this.requestCount=0,this.requestCountLastCheck=0,this.timeoutSocketCount=0,this.timeoutSocketCountLastCheck=0,this.on("free",a=>{let r=this.calcSocketTimeout(a);r>0&&a.timeout!==r&&a.setTimeout(r)})}get freeSocketKeepAliveTimeout(){return lr("agent.freeSocketKeepAliveTimeout is deprecated, please use agent.options.freeSocketTimeout instead"),this.options.freeSocketTimeout}get timeout(){return lr("agent.timeout is deprecated, please use agent.options.timeout instead"),this.options.timeout}get socketActiveTTL(){return lr("agent.socketActiveTTL is deprecated, please use agent.options.socketActiveTTL instead"),this.options.socketActiveTTL}calcSocketTimeout(e){let a=this.options.freeSocketTimeout,r=this.options.socketActiveTTL;if(r){let i=Date.now()-e[El],s=r-i;if(s<=0)return s;a&&s<a&&(a=s)}if(a)return e.freeSocketTimeout||e.freeSocketKeepAliveTimeout||a}keepSocketAlive(e){let a=super.keepSocketAlive(e);if(!a)return a;let r=this.calcSocketTimeout(e);return typeof r>"u"?!0:r<=0?(Ne("%s(requests: %s, finished: %s) free but need to destroy by TTL, request count %s, diff is %s",e[ke],e[qe],e[ct],r),!1):(e.timeout!==r&&e.setTimeout(r),!0)}reuseSocket(...e){super.reuseSocket(...e);let a=e[0],r=e[1];r.reusedSocket=!0;let i=this.options.timeout;mr(a)!==i&&(a.setTimeout(i),Ne("%s reset timeout to %sms",a[ke],i)),a[qe]++,Ne("%s(requests: %s, finished: %s) reuse on addRequest, timeout %sms",a[ke],a[qe],a[ct],mr(a))}[Cl](){let e=this[zi]++;return this[zi]===Number.MAX_SAFE_INTEGER&&(this[zi]=0),e}[Sl](e,a){a.timeout&&(mr(e)||e.setTimeout(a.timeout)),this.options.keepAlive&&e.setNoDelay(!0),this.createSocketCount++,this.options.socketActiveTTL&&(e[El]=Date.now()),e[ke]=`sock[${this[Cl]()}#${a._agentKey}]`.split("-----BEGIN",1)[0],e[qe]=1,e[ct]=0,Qm(this,e,a)}createConnection(e,a){let r=!1,i=(n,d)=>{if(!r){if(r=!0,n)return this.createSocketErrorCount++,a(n);this[Sl](d,e),a(n,d)}},s=super.createConnection(e,i);return s&&i(null,s),s}get statusChanged(){let e=this.createSocketCount!==this.createSocketCountLastCheck||this.createSocketErrorCount!==this.createSocketErrorCountLastCheck||this.closeSocketCount!==this.closeSocketCountLastCheck||this.errorSocketCount!==this.errorSocketCountLastCheck||this.timeoutSocketCount!==this.timeoutSocketCountLastCheck||this.requestCount!==this.requestCountLastCheck;return e&&(this.createSocketCountLastCheck=this.createSocketCount,this.createSocketErrorCountLastCheck=this.createSocketErrorCount,this.closeSocketCountLastCheck=this.closeSocketCount,this.errorSocketCountLastCheck=this.errorSocketCount,this.timeoutSocketCountLastCheck=this.timeoutSocketCount,this.requestCountLastCheck=this.requestCount),e}getCurrentStatus(){return{createSocketCount:this.createSocketCount,createSocketErrorCount:this.createSocketErrorCount,closeSocketCount:this.closeSocketCount,errorSocketCount:this.errorSocketCount,timeoutSocketCount:this.timeoutSocketCount,requestCount:this.requestCount,freeSockets:Wn(this.freeSockets),sockets:Wn(this.sockets),requests:Wn(this.requests)}}};function mr(t){return t.timeout||t._idleTimeout}function Qm(t,e,a){Ne("%s create, timeout %sms",e[ke],mr(e));function r(){if(!e._httpMessage&&e[qe]===1)return;e[ct]++,t.requestCount++,Ne("%s(requests: %s, finished: %s) free",e[ke],e[qe],e[ct]);let o=t.getName(a);e.writable&&t.requests[o]&&t.requests[o].length&&(e[qe]++,Ne("%s(requests: %s, finished: %s) will be reuse on agent free event",e[ke],e[qe],e[ct]))}e.on("free",r);function i(o){Ne("%s(requests: %s, finished: %s) close, isError: %s",e[ke],e[qe],e[ct],o),t.closeSocketCount++}e.on("close",i);function s(){let o=e.listeners("timeout").length,p=mr(e),c=e._httpMessage,l=c&&c.listeners("timeout").length||0;Ne("%s(requests: %s, finished: %s) timeout after %sms, listeners %s, defaultTimeoutListenerCount %s, hasHttpRequest %s, HttpRequest timeoutListenerCount %s",e[ke],e[qe],e[ct],p,o,zn,!!c,l),Ne.enabled&&Ne("timeout listeners: %s",e.listeners("timeout").map(u=>u.name).join(", ")),t.timeoutSocketCount++;let m=t.getName(a);if(t.freeSockets[m]&&t.freeSockets[m].indexOf(e)!==-1)e.destroy(),t.removeSocket(e,a),Ne("%s is free, destroy quietly",e[ke]);else if(l===0){let u=new Error("Socket timeout");u.code="ERR_SOCKET_TIMEOUT",u.timeout=p,e.destroy(u),t.removeSocket(e,a),Ne("%s destroy with timeout error",e[ke])}}e.on("timeout",s);function n(o){let p=e.listeners("error").length;Ne("%s(requests: %s, finished: %s) error: %s, listenerCount: %s",e[ke],e[qe],e[ct],o,p),t.errorSocketCount++,p===1&&(Ne("%s emit uncaught error event",e[ke]),e.removeListener("error",n),e.emit("error",o))}e.on("error",n);function d(){Ne("%s(requests: %s, finished: %s) agentRemove",e[ke],e[qe],e[ct]),e.removeListener("close",i),e.removeListener("error",n),e.removeListener("free",r),e.removeListener("timeout",s),e.removeListener("agentRemove",d)}e.on("agentRemove",d)}Tl.exports=Gn;function Wn(t){let e={};for(let a in t)e[a]=t[a].length;return e}});var Rl=de((F9,Al)=>{"use strict";var Jn=require("https").Agent,Zm=Xn(),{INIT_SOCKET:e6,CREATE_HTTPS_CONNECTION:Nl}=Wi(),ur=class extends Zm{constructor(e){super(e),this.defaultPort=443,this.protocol="https:",this.maxCachedSessions=this.options.maxCachedSessions,this.maxCachedSessions===void 0&&(this.maxCachedSessions=100),this._sessionCache={map:{},list:[]}}createConnection(e,a){let r=this[Nl](e,a);return this[e6](r,e),r}};ur.prototype[Nl]=Jn.prototype.createConnection;["getName","_getSession","_cacheSession","_evictSession"].forEach(function(t){typeof Jn.prototype[t]=="function"&&(ur.prototype[t]=Jn.prototype[t])});Al.exports=ur});var kl=de((M9,Gi)=>{"use strict";Gi.exports=Xn();Gi.exports.HttpsAgent=Rl();Gi.exports.constants=Wi()});var Ll=de((fr,hr)=>{"use strict";Object.defineProperty(fr,"__esModule",{value:!0});var Fl=new WeakMap,Yn=new WeakMap;function G(t){let e=Fl.get(t);return console.assert(e!=null,"'this' is expected an Event object, but got",t),e}function xl(t){if(t.passiveListener!=null){typeof console<"u"&&typeof console.error=="function"&&console.error("Unable to preventDefault inside passive event listener invocation.",t.passiveListener);return}t.event.cancelable&&(t.canceled=!0,typeof t.event.preventDefault=="function"&&t.event.preventDefault())}function c1(t,e){Fl.set(this,{eventTarget:t,event:e,eventPhase:2,currentTarget:t,canceled:!1,stopped:!1,immediateStopped:!1,passiveListener:null,timeStamp:e.timeStamp||Date.now()}),Object.defineProperty(this,"isTrusted",{value:!1,enumerable:!0});let a=Object.keys(e);for(let r=0;r<a.length;++r){let i=a[r];i in this||Object.defineProperty(this,i,Ml(i))}}c1.prototype={get type(){return G(this).event.type},get target(){return G(this).eventTarget},get currentTarget(){return G(this).currentTarget},composedPath(){let t=G(this).currentTarget;return t==null?[]:[t]},get NONE(){return 0},get CAPTURING_PHASE(){return 1},get AT_TARGET(){return 2},get BUBBLING_PHASE(){return 3},get eventPhase(){return G(this).eventPhase},stopPropagation(){let t=G(this);t.stopped=!0,typeof t.event.stopPropagation=="function"&&t.event.stopPropagation()},stopImmediatePropagation(){let t=G(this);t.stopped=!0,t.immediateStopped=!0,typeof t.event.stopImmediatePropagation=="function"&&t.event.stopImmediatePropagation()},get bubbles(){return!!G(this).event.bubbles},get cancelable(){return!!G(this).event.cancelable},preventDefault(){xl(G(this))},get defaultPrevented(){return G(this).canceled},get composed(){return!!G(this).event.composed},get timeStamp(){return G(this).timeStamp},get srcElement(){return G(this).eventTarget},get cancelBubble(){return G(this).stopped},set cancelBubble(t){if(!t)return;let e=G(this);e.stopped=!0,typeof e.event.cancelBubble=="boolean"&&(e.event.cancelBubble=!0)},get returnValue(){return!G(this).canceled},set returnValue(t){t||xl(G(this))},initEvent(){}};Object.defineProperty(c1.prototype,"constructor",{value:c1,configurable:!0,writable:!0});typeof window<"u"&&typeof window.Event<"u"&&(Object.setPrototypeOf(c1.prototype,window.Event.prototype),Yn.set(window.Event.prototype,c1));function Ml(t){return{get(){return G(this).event[t]},set(e){G(this).event[t]=e},configurable:!0,enumerable:!0}}function t6(t){return{value(){let e=G(this).event;return e[t].apply(e,arguments)},configurable:!0,enumerable:!0}}function a6(t,e){let a=Object.keys(e);if(a.length===0)return t;function r(i,s){t.call(this,i,s)}r.prototype=Object.create(t.prototype,{constructor:{value:r,configurable:!0,writable:!0}});for(let i=0;i<a.length;++i){let s=a[i];if(!(s in t.prototype)){let d=typeof Object.getOwnPropertyDescriptor(e,s).value=="function";Object.defineProperty(r.prototype,s,d?t6(s):Ml(s))}}return r}function Vl(t){if(t==null||t===Object.prototype)return c1;let e=Yn.get(t);return e==null&&(e=a6(Vl(Object.getPrototypeOf(t)),t),Yn.set(t,e)),e}function r6(t,e){let a=Vl(Object.getPrototypeOf(e));return new a(t,e)}function i6(t){return G(t).immediateStopped}function s6(t,e){G(t).eventPhase=e}function n6(t,e){G(t).currentTarget=e}function Pl(t,e){G(t).passiveListener=e}var Bl=new WeakMap,Il=1,Dl=2,Xi=3;function Ji(t){return t!==null&&typeof t=="object"}function cr(t){let e=Bl.get(t);if(e==null)throw new TypeError("'this' is expected an EventTarget object, but got another value.");return e}function d6(t){return{get(){let a=cr(this).get(t);for(;a!=null;){if(a.listenerType===Xi)return a.listener;a=a.next}return null},set(e){typeof e!="function"&&!Ji(e)&&(e=null);let a=cr(this),r=null,i=a.get(t);for(;i!=null;)i.listenerType===Xi?r!==null?r.next=i.next:i.next!==null?a.set(t,i.next):a.delete(t):r=i,i=i.next;if(e!==null){let s={listener:e,listenerType:Xi,passive:!1,once:!1,next:null};r===null?a.set(t,s):r.next=s}},configurable:!0,enumerable:!0}}function Kn(t,e){Object.defineProperty(t,`on${e}`,d6(e))}function Ol(t){function e(){Ze.call(this)}e.prototype=Object.create(Ze.prototype,{constructor:{value:e,configurable:!0,writable:!0}});for(let a=0;a<t.length;++a)Kn(e.prototype,t[a]);return e}function Ze(){if(this instanceof Ze){Bl.set(this,new Map);return}if(arguments.length===1&&Array.isArray(arguments[0]))return Ol(arguments[0]);if(arguments.length>0){let t=new Array(arguments.length);for(let e=0;e<arguments.length;++e)t[e]=arguments[e];return Ol(t)}throw new TypeError("Cannot call a class as a function")}Ze.prototype={addEventListener(t,e,a){if(e==null)return;if(typeof e!="function"&&!Ji(e))throw new TypeError("'listener' should be a function or an object.");let r=cr(this),i=Ji(a),n=(i?!!a.capture:!!a)?Il:Dl,d={listener:e,listenerType:n,passive:i&&!!a.passive,once:i&&!!a.once,next:null},o=r.get(t);if(o===void 0){r.set(t,d);return}let p=null;for(;o!=null;){if(o.listener===e&&o.listenerType===n)return;p=o,o=o.next}p.next=d},removeEventListener(t,e,a){if(e==null)return;let r=cr(this),s=(Ji(a)?!!a.capture:!!a)?Il:Dl,n=null,d=r.get(t);for(;d!=null;){if(d.listener===e&&d.listenerType===s){n!==null?n.next=d.next:d.next!==null?r.set(t,d.next):r.delete(t);return}n=d,d=d.next}},dispatchEvent(t){if(t==null||typeof t.type!="string")throw new TypeError('"event.type" should be a string.');let e=cr(this),a=t.type,r=e.get(a);if(r==null)return!0;let i=r6(this,t),s=null;for(;r!=null;){if(r.once?s!==null?s.next=r.next:r.next!==null?e.set(a,r.next):e.delete(a):s=r,Pl(i,r.passive?r.listener:null),typeof r.listener=="function")try{r.listener.call(this,i)}catch(n){typeof console<"u"&&typeof console.error=="function"&&console.error(n)}else r.listenerType!==Xi&&typeof r.listener.handleEvent=="function"&&r.listener.handleEvent(i);if(i6(i))break;r=r.next}return Pl(i,null),s6(i,0),n6(i,null),!i.defaultPrevented}};Object.defineProperty(Ze.prototype,"constructor",{value:Ze,configurable:!0,writable:!0});typeof window<"u"&&typeof window.EventTarget<"u"&&Object.setPrototypeOf(Ze.prototype,window.EventTarget.prototype);fr.defineEventAttribute=Kn;fr.EventTarget=Ze;fr.default=Ze;hr.exports=Ze;hr.exports.EventTarget=hr.exports.default=Ze;hr.exports.defineEventAttribute=Kn});var jl=de((gr,vr)=>{"use strict";Object.defineProperty(gr,"__esModule",{value:!0});var Qn=Ll(),Qt=class extends Qn.EventTarget{constructor(){throw super(),new TypeError("AbortSignal cannot be constructed directly")}get aborted(){let e=Yi.get(this);if(typeof e!="boolean")throw new TypeError(`Expected 'this' to be an 'AbortSignal' object, but got ${this===null?"null":typeof this}`);return e}};Qn.defineEventAttribute(Qt.prototype,"abort");function o6(){let t=Object.create(Qt.prototype);return Qn.EventTarget.call(t),Yi.set(t,!1),t}function p6(t){Yi.get(t)===!1&&(Yi.set(t,!0),t.dispatchEvent({type:"abort"}))}var Yi=new WeakMap;Object.defineProperties(Qt.prototype,{aborted:{enumerable:!0}});typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol"&&Object.defineProperty(Qt.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortSignal"});var Zt=class{constructor(){ql.set(this,o6())}get signal(){return Ul(this)}abort(){p6(Ul(this))}},ql=new WeakMap;function Ul(t){let e=ql.get(t);if(e==null)throw new TypeError(`Expected 'this' to be an 'AbortController' object, but got ${t===null?"null":typeof t}`);return e}Object.defineProperties(Zt.prototype,{signal:{enumerable:!0},abort:{enumerable:!0}});typeof Symbol=="function"&&typeof Symbol.toStringTag=="symbol"&&Object.defineProperty(Zt.prototype,Symbol.toStringTag,{configurable:!0,value:"AbortController"});gr.AbortController=Zt;gr.AbortSignal=Qt;gr.default=Zt;vr.exports=Zt;vr.exports.AbortController=vr.exports.default=Zt;vr.exports.AbortSignal=Qt});var Gl=de((n3,zl)=>{if(!globalThis.DOMException)try{let{MessageChannel:t}=require("worker_threads"),e=new t().port1,a=new ArrayBuffer;e.postMessage(a,[a,a])}catch(t){t.constructor.name==="DOMException"&&(globalThis.DOMException=t.constructor)}zl.exports=globalThis.DOMException});function w6(t){if(g6(t)!=="object")return!1;let e=Object.getPrototypeOf(t);return e==null?!0:(e.constructor&&e.constructor.toString())===Object.toString()}var g6,Xl,Jl=qt(()=>{g6=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase();Xl=w6});var e2={};zd(e2,{fileFromPath:()=>_6,fileFromPathSync:()=>y6,isFile:()=>Un});function Zl(t,{mtimeMs:e,size:a},r,i={}){let s;Xl(r)?[i,s]=[r,void 0]:s=r;let n=new rd({path:t,size:a,lastModified:e});return s||(s=n.name),new Qe([n],s,{...i,lastModified:n.lastModified})}function y6(t,e,a={}){let r=(0,Pa.statSync)(t);return Zl(t,r,e,a)}async function _6(t,e,a){let r=await Pa.promises.stat(t);return Zl(t,r,e,a)}var Pa,Kl,Ql,Yl,h1,xa,Cr,b6,rd,t2=qt(()=>{Pa=require("fs"),Kl=require("path"),Ql=oe(Gl(),1);pr();Jl();qn();Yl=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},h1=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},b6="The requested file could not be read, typically due to permission problems that have occurred after a reference to a file was acquired.",rd=class t{constructor(e){xa.set(this,void 0),Cr.set(this,void 0),Yl(this,xa,e.path,"f"),Yl(this,Cr,e.start||0,"f"),this.name=(0,Kl.basename)(h1(this,xa,"f")),this.size=e.size,this.lastModified=e.lastModified}slice(e,a){return new t({path:h1(this,xa,"f"),lastModified:this.lastModified,size:a-e,start:e})}async*stream(){let{mtimeMs:e}=await Pa.promises.stat(h1(this,xa,"f"));if(e>this.lastModified)throw new Ql.default(b6,"NotReadableError");this.size&&(yield*(0,Pa.createReadStream)(h1(this,xa,"f"),{start:h1(this,Cr,"f"),end:h1(this,Cr,"f")+this.size-1}))}get[(xa=new WeakMap,Cr=new WeakMap,Symbol.toStringTag)](){return"File"}}});var a0=de((Pu,Ut)=>{var ne=require("fs"),Ud=require("os"),Ve=require("path"),q2=require("crypto"),St={fs:ne.constants,os:Ud.constants},j2="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",H2=/XXXXXX/,w4=3,W2=(St.O_CREAT||St.fs.O_CREAT)|(St.O_EXCL||St.fs.O_EXCL)|(St.O_RDWR||St.fs.O_RDWR),b4=Ud.platform()==="win32",y4=St.EBADF||St.os.errno.EBADF,_4=St.ENOENT||St.os.errno.ENOENT,z2=448,G2=384,S4="exit",U1=[],X2=ne.rmdirSync.bind(ne),J2=!1;function C4(t,e){return ne.rm(t,{recursive:!0},e)}function Y2(t){return ne.rmSync(t,{recursive:!0})}function qd(t,e){let a=q1(t,e),r=a[0],i=a[1];try{Z2(r)}catch(n){return i(n)}let s=r.tries;(function n(){try{let d=Q2(r);ne.stat(d,function(o){if(!o)return s-- >0?n():i(new Error("Could not get a unique tmp filename, max tries reached "+d));i(null,d)})}catch(d){i(d)}})()}function jd(t){let e=q1(t),a=e[0];Z2(a);let r=a.tries;do{let i=Q2(a);try{ne.statSync(i)}catch{return i}}while(r-- >0);throw new Error("Could not get a unique tmp filename, max tries reached")}function E4(t,e){let a=q1(t,e),r=a[0],i=a[1];qd(r,function(n,d){if(n)return i(n);ne.open(d,W2,r.mode||G2,function(p,c){if(p)return i(p);if(r.discardDescriptor)return ne.close(c,function(m){return i(m,d,void 0,Vd(d,-1,r,!1))});{let l=r.discardDescriptor||r.detachDescriptor;i(null,d,c,Vd(d,l?-1:c,r,!1))}})})}function T4(t){let e=q1(t),a=e[0],r=a.discardDescriptor||a.detachDescriptor,i=jd(a);var s=ne.openSync(i,W2,a.mode||G2);return a.discardDescriptor&&(ne.closeSync(s),s=void 0),{name:i,fd:s,removeCallback:Vd(i,r?-1:s,a,!0)}}function N4(t,e){let a=q1(t,e),r=a[0],i=a[1];qd(r,function(n,d){if(n)return i(n);ne.mkdir(d,r.mode||z2,function(p){if(p)return i(p);i(null,d,K2(d,r,!1))})})}function A4(t){let e=q1(t),a=e[0],r=jd(a);return ne.mkdirSync(r,a.mode||z2),{name:r,removeCallback:K2(r,a,!0)}}function R4(t,e){let a=function(r){if(r&&!Ld(r))return e(r);e()};0<=t[0]?ne.close(t[0],function(){ne.unlink(t[1],a)}):ne.unlink(t[1],a)}function k4(t){let e=null;try{0<=t[0]&&ne.closeSync(t[0])}catch(a){if(!I4(a)&&!Ld(a))throw a}finally{try{ne.unlinkSync(t[1])}catch(a){Ld(a)||(e=a)}}if(e!==null)throw e}function Vd(t,e,a,r){let i=Ns(k4,[e,t],r),s=Ns(R4,[e,t],r,i);return a.keep||U1.unshift(i),r?i:s}function K2(t,e,a){let r=e.unsafeCleanup?C4:ne.rmdir.bind(ne),i=e.unsafeCleanup?Y2:X2,s=Ns(i,t,a),n=Ns(r,t,a,s);return e.keep||U1.unshift(s),a?s:n}function Ns(t,e,a,r){let i=!1;return function s(n){if(!i){let d=r||s,o=U1.indexOf(d);return o>=0&&U1.splice(o,1),i=!0,a||t===X2||t===Y2?t(e):t(e,n||function(){})}}}function x4(){if(J2)for(;U1.length;)try{U1[0]()}catch{}}function $2(t){let e=[],a=null;try{a=q2.randomBytes(t)}catch{a=q2.pseudoRandomBytes(t)}for(var r=0;r<t;r++)e.push(j2[a[r]%j2.length]);return e.join("")}function P4(t){return t===null||Pe(t)||!t.trim()}function Pe(t){return typeof t>"u"}function q1(t,e){if(typeof t=="function")return[{},t];if(Pe(t))return[{},e];let a={};for(let r of Object.getOwnPropertyNames(t))a[r]=t[r];return[a,e]}function Q2(t){let e=t.tmpdir;if(!Pe(t.name))return Ve.join(e,t.dir,t.name);if(!Pe(t.template))return Ve.join(e,t.dir,t.template).replace(H2,$2(6));let a=[t.prefix?t.prefix:"tmp","-",process.pid,"-",$2(12),t.postfix?"-"+t.postfix:""].join("");return Ve.join(e,t.dir,a)}function Z2(t){t.tmpdir=t0(t);let e=t.tmpdir;if(Pe(t.name)||Md(t.name,"name",e),Pe(t.dir)||Md(t.dir,"dir",e),!Pe(t.template)&&(Md(t.template,"template",e),!t.template.match(H2)))throw new Error(`Invalid template, found "${t.template}".`);if(!Pe(t.tries)&&isNaN(t.tries)||t.tries<0)throw new Error(`Invalid tries, found "${t.tries}".`);t.tries=Pe(t.name)?t.tries||w4:1,t.keep=!!t.keep,t.detachDescriptor=!!t.detachDescriptor,t.discardDescriptor=!!t.discardDescriptor,t.unsafeCleanup=!!t.unsafeCleanup,t.dir=Pe(t.dir)?"":Ve.relative(e,Bd(t.dir,e)),t.template=Pe(t.template)?void 0:Ve.relative(e,Bd(t.template,e)),t.template=P4(t.template)?void 0:Ve.relative(t.dir,t.template),t.name=Pe(t.name)?void 0:t.name,t.prefix=Pe(t.prefix)?"":t.prefix,t.postfix=Pe(t.postfix)?"":t.postfix}function Bd(t,e){return t.startsWith(e)?Ve.resolve(t):Ve.resolve(Ve.join(e,t))}function Md(t,e,a){if(e==="name"){if(Ve.isAbsolute(t))throw new Error(`${e} option must not contain an absolute path, found "${t}".`);let r=Ve.basename(t);if(r===".."||r==="."||r!==t)throw new Error(`${e} option must not contain a path, found "${t}".`)}else{if(Ve.isAbsolute(t)&&!t.startsWith(a))throw new Error(`${e} option must be relative to "${a}", found "${t}".`);let r=Bd(t,a);if(!r.startsWith(a))throw new Error(`${e} option must be relative to "${a}", found "${r}".`)}}function I4(t){return e0(t,-y4,"EBADF")}function Ld(t){return e0(t,-_4,"ENOENT")}function e0(t,e,a){return b4?t.code===a:t.code===a&&t.errno===e}function D4(){J2=!0}function t0(t){return Ve.resolve(t&&t.tmpdir||Ud.tmpdir())}process.addListener(S4,x4);Object.defineProperty(Ut.exports,"tmpdir",{enumerable:!0,configurable:!1,get:function(){return t0()}});Ut.exports.dir=N4;Ut.exports.dirSync=A4;Ut.exports.file=E4;Ut.exports.fileSync=T4;Ut.exports.tmpName=qd;Ut.exports.tmpNameSync=jd;Ut.exports.setGracefulCleanup=D4});var U4={};zd(U4,{activate:()=>B4,deactivate:()=>L4});module.exports=u0(U4);var E=oe(require("vscode"));var Y=oe(require("vscode")),$1=class{constructor(e,a=!1){this.viewModel=e;a?e.bashCommandsArchiveSubscribe(r=>{this.tree=this.buildTree(r),this._refreshCallback.fire()}):e.bashCommandsSubscribe(r=>{this.tree=this.buildTree(r),this._refreshCallback.fire()})}tree=[];_refreshCallback=new Y.EventEmitter;onDidChangeTreeData=this._refreshCallback.event;dropMimeTypes=["application/vnd.code.tree.bash-commands"];dragMimeTypes=["text/uri-list"];getTreeItem(e){return e}getChildren(e){return e?Promise.resolve(e.getChildren()):Promise.resolve(this.tree)}buildTree(e){return e.map(a=>new Ls(a))}async handleDrop(e,a,r){let i=a.get("application/vnd.code.tree.bash-commands");if(!i)return;let s=e?.getRoot()||null,n=i.value.filter(d=>d.getRoot()!==null).map(d=>[d.getRoot(),d.getChildIndex()]);this.viewModel.moveCommands(n,s)}async handleDrag(e,a,r){a.set("application/vnd.code.tree.bash-commands",new Y.DataTransferItem(e))}},Ls=class extends Y.TreeItem{bashCommand;constructor(e){let a=e.getCommand();e.getTemporary()===!0?(super(a,Y.TreeItemCollapsibleState.None),this.tooltip="(in process)"+e.getCommand(),this.contextValue="ROOT_OBJ_TEMP"):(super(a,Y.TreeItemCollapsibleState.Collapsed),this.tooltip=e.getCommand(),this.contextValue=e.getImportant()?"ROOT_OBJ_I":"ROOT_OBJ_NI"),this.bashCommand=e,this.iconPath=void 0,this.bashCommand.getImportant()===!0&&this.bashCommand.getTemporary()===!1?this.resourceUri=Y.Uri.parse("bash_commands://"+this.bashCommand.getIndex()):this.resourceUri=Y.Uri.parse("bash_commands_unimportant://"+this.bashCommand.getIndex())}getChildren(){let e=this.bashCommand.getImportant()===!0&&this.bashCommand.getTemporary()===!1;if(this.bashCommand.getNumChildren()>0){let a=Array.from(Array(this.bashCommand.getNumChildren()).keys()).map(i=>new Us(this.bashCommand,i));return[new jt(this.bashCommand,"Rule name",this.bashCommand.getRuleName(),this.bashCommand.getIndex(),e,"RuleName"),...a]}else return[new jt(this.bashCommand,"Rule name",this.bashCommand.getRuleName(),this.bashCommand.getIndex(),e,"RuleName"),new jt(this.bashCommand,"Output",this.bashCommand.getOutput(),this.bashCommand.getIndex(),e,"Output"),new jt(this.bashCommand,"Inputs",this.bashCommand.getInput(),this.bashCommand.getIndex(),e,"Inputs")]}getRoot(){return this.bashCommand}getChildIndex(){return-1}},Us=class extends Y.TreeItem{childBashCommand;parentBashCommand;command_index;constructor(e,a){let r=e.getChildren(a),i=r?.getCommand();r?.getTemporary()===!0?(super(i||"",Y.TreeItemCollapsibleState.None),this.tooltip="(in process)"+r?.getCommand(),this.contextValue="ROOT_OBJ_TEMP"):(super(i||"",Y.TreeItemCollapsibleState.Collapsed),this.tooltip=r?.getCommand(),this.contextValue="SUB_C"),this.command_index=a,this.parentBashCommand=e,this.childBashCommand=r,this.iconPath=void 0,e.getImportant()===!0&&e?.getTemporary()===!1?this.resourceUri=Y.Uri.parse("bash_commands://"+r?.getIndex()):this.resourceUri=Y.Uri.parse("bash_commands_unimportant://"+r?.getIndex())}getChildren(){let e=this.parentBashCommand.getImportant()===!0&&this.parentBashCommand.getTemporary()===!1;return[new jt(this.childBashCommand,"Output",this.childBashCommand?.getOutput()||"",this.childBashCommand?.getIndex()||0,e,"Output"),new jt(this.childBashCommand,"Inputs",this.childBashCommand?.getInput()||"",this.childBashCommand?.getIndex()||0,e,"Inputs")]}getRoot(){return this.parentBashCommand}getChildIndex(){return this.command_index}},jt=class extends Y.TreeItem{modifier;parent;constructor(e,a,r,i,s,n){let d=a+": "+r;super(d,Y.TreeItemCollapsibleState.None),this.tooltip=r,n?(this.contextValue="CHILD_OBJ_MOD",this.modifier=n):this.contextValue="CHILD_OBJ",this.parent=e,this.resourceUri=s?Y.Uri.parse("bash_commands_details://"+a+i):Y.Uri.parse("bash_command_info_unimportant://"+a+i),this.iconPath=new Y.ThemeIcon("find-collapseddebug-breakpoint-unverified")}getChildren(){return[]}getRoot(){return null}getChildIndex(){return-1}};var ei="RFC3986",ti={RFC1738:t=>String(t).replace(/%20/g,"+"),RFC3986:t=>String(t)},Xd="RFC1738";var c0=Array.isArray,it=(()=>{let t=[];for(let e=0;e<256;++e)t.push("%"+((e<16?"0":"")+e.toString(16)).toUpperCase());return t})();var qs=1024,Jd=(t,e,a,r,i)=>{if(t.length===0)return t;let s=t;if(typeof t=="symbol"?s=Symbol.prototype.toString.call(t):typeof t!="string"&&(s=String(t)),a==="iso-8859-1")return escape(s).replace(/%u[0-9a-f]{4}/gi,function(d){return"%26%23"+parseInt(d.slice(2),16)+"%3B"});let n="";for(let d=0;d<s.length;d+=qs){let o=s.length>=qs?s.slice(d,d+qs):s,p=[];for(let c=0;c<o.length;++c){let l=o.charCodeAt(c);if(l===45||l===46||l===95||l===126||l>=48&&l<=57||l>=65&&l<=90||l>=97&&l<=122||i===Xd&&(l===40||l===41)){p[p.length]=o.charAt(c);continue}if(l<128){p[p.length]=it[l];continue}if(l<2048){p[p.length]=it[192|l>>6]+it[128|l&63];continue}if(l<55296||l>=57344){p[p.length]=it[224|l>>12]+it[128|l>>6&63]+it[128|l&63];continue}c+=1,l=65536+((l&1023)<<10|o.charCodeAt(c)&1023),p[p.length]=it[240|l>>18]+it[128|l>>12&63]+it[128|l>>6&63]+it[128|l&63]}n+=p.join("")}return n};function Yd(t){return!t||typeof t!="object"?!1:!!(t.constructor&&t.constructor.isBuffer&&t.constructor.isBuffer(t))}function js(t,e){if(c0(t)){let a=[];for(let r=0;r<t.length;r+=1)a.push(e(t[r]));return a}return e(t)}var h0=Object.prototype.hasOwnProperty,Kd={brackets(t){return String(t)+"[]"},comma:"comma",indices(t,e){return String(t)+"["+e+"]"},repeat(t){return String(t)}},st=Array.isArray,f0=Array.prototype.push,Qd=function(t,e){f0.apply(t,st(e)?e:[e])},v0=Date.prototype.toISOString,pe={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:Jd,encodeValuesOnly:!1,format:ei,formatter:ti[ei],indices:!1,serializeDate(t){return v0.call(t)},skipNulls:!1,strictNullHandling:!1};function g0(t){return typeof t=="string"||typeof t=="number"||typeof t=="boolean"||typeof t=="symbol"||typeof t=="bigint"}var $s={};function Zd(t,e,a,r,i,s,n,d,o,p,c,l,m,u,h,f,v,w){let g=t,x=w,_=0,A=!1;for(;(x=x.get($s))!==void 0&&!A;){let T=x.get(t);if(_+=1,typeof T<"u"){if(T===_)throw new RangeError("Cyclic object value");A=!0}typeof x.get($s)>"u"&&(_=0)}if(typeof p=="function"?g=p(e,g):g instanceof Date?g=m?.(g):a==="comma"&&st(g)&&(g=js(g,function(T){return T instanceof Date?m?.(T):T})),g===null){if(s)return o&&!f?o(e,pe.encoder,v,"key",u):e;g=""}if(g0(g)||Yd(g)){if(o){let T=f?e:o(e,pe.encoder,v,"key",u);return[h?.(T)+"="+h?.(o(g,pe.encoder,v,"value",u))]}return[h?.(e)+"="+h?.(String(g))]}let D=[];if(typeof g>"u")return D;let B;if(a==="comma"&&st(g))f&&o&&(g=js(g,o)),B=[{value:g.length>0?g.join(",")||null:void 0}];else if(st(p))B=p;else{let T=Object.keys(g);B=c?T.sort(c):T}let b=d?String(e).replace(/\./g,"%2E"):String(e),y=r&&st(g)&&g.length===1?b+"[]":b;if(i&&st(g)&&g.length===0)return y+"[]";for(let T=0;T<B.length;++T){let R=B[T],ae=typeof R=="object"&&typeof R.value<"u"?R.value:g[R];if(n&&ae===null)continue;let I=l&&d?R.replace(/\./g,"%2E"):R,U=st(g)?typeof a=="function"?a(y,I):y:y+(l?"."+I:"["+I+"]");w.set(t,_);let O=new WeakMap;O.set($s,w),Qd(D,Zd(ae,U,a,r,i,s,n,d,a==="comma"&&f&&st(g)?null:o,p,c,l,m,u,h,f,v,O))}return D}function w0(t=pe){if(typeof t.allowEmptyArrays<"u"&&typeof t.allowEmptyArrays!="boolean")throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(typeof t.encodeDotInKeys<"u"&&typeof t.encodeDotInKeys!="boolean")throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(t.encoder!==null&&typeof t.encoder<"u"&&typeof t.encoder!="function")throw new TypeError("Encoder has to be a function.");let e=t.charset||pe.charset;if(typeof t.charset<"u"&&t.charset!=="utf-8"&&t.charset!=="iso-8859-1")throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");let a=ei;if(typeof t.format<"u"){if(!h0.call(ti,t.format))throw new TypeError("Unknown format option provided.");a=t.format}let r=ti[a],i=pe.filter;(typeof t.filter=="function"||st(t.filter))&&(i=t.filter);let s;if(t.arrayFormat&&t.arrayFormat in Kd?s=t.arrayFormat:"indices"in t?s=t.indices?"indices":"repeat":s=pe.arrayFormat,"commaRoundTrip"in t&&typeof t.commaRoundTrip!="boolean")throw new TypeError("`commaRoundTrip` must be a boolean, or absent");let n=typeof t.allowDots>"u"?t.encodeDotInKeys?!0:pe.allowDots:!!t.allowDots;return{addQueryPrefix:typeof t.addQueryPrefix=="boolean"?t.addQueryPrefix:pe.addQueryPrefix,allowDots:n,allowEmptyArrays:typeof t.allowEmptyArrays=="boolean"?!!t.allowEmptyArrays:pe.allowEmptyArrays,arrayFormat:s,charset:e,charsetSentinel:typeof t.charsetSentinel=="boolean"?t.charsetSentinel:pe.charsetSentinel,commaRoundTrip:!!t.commaRoundTrip,delimiter:typeof t.delimiter>"u"?pe.delimiter:t.delimiter,encode:typeof t.encode=="boolean"?t.encode:pe.encode,encodeDotInKeys:typeof t.encodeDotInKeys=="boolean"?t.encodeDotInKeys:pe.encodeDotInKeys,encoder:typeof t.encoder=="function"?t.encoder:pe.encoder,encodeValuesOnly:typeof t.encodeValuesOnly=="boolean"?t.encodeValuesOnly:pe.encodeValuesOnly,filter:i,format:a,formatter:r,serializeDate:typeof t.serializeDate=="function"?t.serializeDate:pe.serializeDate,skipNulls:typeof t.skipNulls=="boolean"?t.skipNulls:pe.skipNulls,sort:typeof t.sort=="function"?t.sort:null,strictNullHandling:typeof t.strictNullHandling=="boolean"?t.strictNullHandling:pe.strictNullHandling}}function Hs(t,e={}){let a=t,r=w0(e),i,s;typeof r.filter=="function"?(s=r.filter,a=s("",a)):st(r.filter)&&(s=r.filter,i=s);let n=[];if(typeof a!="object"||a===null)return"";let d=Kd[r.arrayFormat],o=d==="comma"&&r.commaRoundTrip;i||(i=Object.keys(a)),r.sort&&i.sort(r.sort);let p=new WeakMap;for(let m=0;m<i.length;++m){let u=i[m];r.skipNulls&&a[u]===null||Qd(n,Zd(a[u],u,d,o,r.allowEmptyArrays,r.strictNullHandling,r.skipNulls,r.encodeDotInKeys,r.encode?r.encoder:null,r.filter,r.sort,r.allowDots,r.serializeDate,r.format,r.formatter,r.encodeValuesOnly,r.charset,p))}let c=n.join(r.delimiter),l=r.addQueryPrefix===!0?"?":"";return r.charsetSentinel&&(r.charset==="iso-8859-1"?l+="utf8=%26%2310003%3B&":l+="utf8=%E2%9C%93&"),c.length>0?l+c:""}var fa="4.73.1";var eo=!1,va,Ws,y0,_0,S0,zs,C0,ai,Gs,Xs,Js,ri,Ys;function to(t,e={auto:!1}){if(eo)throw new Error(`you must \`import 'openai/shims/${t.kind}'\` before importing anything else from openai`);if(va)throw new Error(`can't \`import 'openai/shims/${t.kind}'\` after \`import 'openai/shims/${va}'\``);eo=e.auto,va=t.kind,Ws=t.fetch,y0=t.Request,_0=t.Response,S0=t.Headers,zs=t.FormData,C0=t.Blob,ai=t.File,Gs=t.ReadableStream,Xs=t.getMultipartRequestOptions,Js=t.getDefaultAgent,ri=t.fileFromPath,Ys=t.isFsReadStream}var ta=oe(qo(),1);var vl=require("util");pr();qn();Li();var cl=t=>t instanceof lt;Mi();var hl=require("util"),fl=(0,hl.deprecate)(()=>{},'Constructor "entries" argument is not spec-compliant and will be removed in next major release.');var mt=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},ji,ut,jn,$i=class{constructor(e){ji.add(this),ut.set(this,new Map),e&&(fl(),e.forEach(({name:a,value:r,fileName:i})=>this.append(a,r,i)))}static[(ut=new WeakMap,ji=new WeakSet,Symbol.hasInstance)](e){return!!(e&&ie(e.constructor)&&e[Symbol.toStringTag]==="FormData"&&ie(e.append)&&ie(e.set)&&ie(e.get)&&ie(e.getAll)&&ie(e.has)&&ie(e.delete)&&ie(e.entries)&&ie(e.values)&&ie(e.keys)&&ie(e[Symbol.iterator])&&ie(e.forEach))}append(e,a,r){mt(this,ji,"m",jn).call(this,{name:e,fileName:r,append:!0,rawValue:a,argsLength:arguments.length})}set(e,a,r){mt(this,ji,"m",jn).call(this,{name:e,fileName:r,append:!1,rawValue:a,argsLength:arguments.length})}get(e){let a=mt(this,ut,"f").get(String(e));return a?a[0]:null}getAll(e){let a=mt(this,ut,"f").get(String(e));return a?a.slice():[]}has(e){return mt(this,ut,"f").has(String(e))}delete(e){mt(this,ut,"f").delete(String(e))}*keys(){for(let e of mt(this,ut,"f").keys())yield e}*entries(){for(let e of this.keys()){let a=this.getAll(e);for(let r of a)yield[e,r]}}*values(){for(let[,e]of this)yield e}[(jn=function({name:a,rawValue:r,append:i,fileName:s,argsLength:n}){let d=i?"append":"set";if(n<2)throw new TypeError(`Failed to execute '${d}' on 'FormData': 2 arguments required, but only ${n} present.`);a=String(a);let o;if(Un(r))o=s===void 0?r:new Qe([r],s,{type:r.type,lastModified:r.lastModified});else if(cl(r))o=new Qe([r],s===void 0?"blob":s,{type:r.type});else{if(s)throw new TypeError(`Failed to execute '${d}' on 'FormData': parameter 2 is not of type 'Blob'.`);o=String(r)}let p=mt(this,ut,"f").get(a);if(!p)return void mt(this,ut,"f").set(a,[o]);if(!i)return void mt(this,ut,"f").set(a,[o]);p.push(o)},Symbol.iterator)](){return this.entries()}forEach(e,a){for(let[r,i]of this)e.call(a,i,r,this)}get[Symbol.toStringTag](){return"FormData"}[vl.inspect.custom](){return this[Symbol.toStringTag]}};Li();pr();var id=oe(kl(),1),r2=oe(jl(),1),i2=require("node:fs");var $l="abcdefghijklmnopqrstuvwxyz0123456789";function l6(){let t=16,e="";for(;t--;)e+=$l[Math.random()*$l.length<<0];return e}var Hl=l6;var m6=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase();function u6(t){if(m6(t)!=="object")return!1;let e=Object.getPrototypeOf(t);return e==null?!0:(e.constructor&&e.constructor.toString())===Object.toString()}var Zn=u6;var c6=t=>String(t).replace(/\r|\n/g,(e,a,r)=>e==="\r"&&r[a+1]!==`
`||e===`
`&&r[a-1]!=="\r"?`\r
`:e),ed=c6;var h6=t=>String(t).replace(/\r/g,"%0D").replace(/\n/g,"%0A").replace(/"/g,"%22"),td=h6;var f6=t=>typeof t=="function",Ft=f6;var Ra=t=>!!(t&&typeof t=="object"&&Ft(t.constructor)&&t[Symbol.toStringTag]==="File"&&Ft(t.stream)&&t.name!=null&&t.size!=null&&t.lastModified!=null);var Wl=t=>!!(t&&Ft(t.constructor)&&t[Symbol.toStringTag]==="FormData"&&Ft(t.append)&&Ft(t.getAll)&&Ft(t.entries)&&Ft(t[Symbol.iterator]));var wr=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},J=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},Ki,ea,br,Qi,yr,ka,_r,Sr,Zi,ad,v6={enableAdditionalHeaders:!1},es=class{constructor(e,a,r){if(Ki.add(this),ea.set(this,`\r
`),br.set(this,void 0),Qi.set(this,void 0),yr.set(this,"-".repeat(2)),ka.set(this,new TextEncoder),_r.set(this,void 0),Sr.set(this,void 0),Zi.set(this,void 0),!Wl(e))throw new TypeError("Expected first argument to be a FormData instance.");let i;if(Zn(a)?r=a:i=a,i||(i=Hl()),typeof i!="string")throw new TypeError("Expected boundary argument to be a string.");if(r&&!Zn(r))throw new TypeError("Expected options argument to be an object.");wr(this,Sr,e,"f"),wr(this,Zi,{...v6,...r},"f"),wr(this,br,J(this,ka,"f").encode(J(this,ea,"f")),"f"),wr(this,Qi,J(this,br,"f").byteLength,"f"),this.boundary=`form-data-boundary-${i}`,this.contentType=`multipart/form-data; boundary=${this.boundary}`,wr(this,_r,J(this,ka,"f").encode(`${J(this,yr,"f")}${this.boundary}${J(this,yr,"f")}${J(this,ea,"f").repeat(2)}`),"f"),this.contentLength=String(this.getContentLength()),this.headers=Object.freeze({"Content-Type":this.contentType,"Content-Length":this.contentLength}),Object.defineProperties(this,{boundary:{writable:!1,configurable:!1},contentType:{writable:!1,configurable:!1},contentLength:{writable:!1,configurable:!1},headers:{writable:!1,configurable:!1}})}getContentLength(){let e=0;for(let[a,r]of J(this,Sr,"f")){let i=Ra(r)?r:J(this,ka,"f").encode(ed(r));e+=J(this,Ki,"m",ad).call(this,a,i).byteLength,e+=Ra(i)?i.size:i.byteLength,e+=J(this,Qi,"f")}return e+J(this,_r,"f").byteLength}*values(){for(let[e,a]of J(this,Sr,"f").entries()){let r=Ra(a)?a:J(this,ka,"f").encode(ed(a));yield J(this,Ki,"m",ad).call(this,e,r),yield r,yield J(this,br,"f")}yield J(this,_r,"f")}async*encode(){for(let e of this.values())Ra(e)?yield*e.stream():yield e}[(ea=new WeakMap,br=new WeakMap,Qi=new WeakMap,yr=new WeakMap,ka=new WeakMap,_r=new WeakMap,Sr=new WeakMap,Zi=new WeakMap,Ki=new WeakSet,ad=function(a,r){let i="";return i+=`${J(this,yr,"f")}${this.boundary}${J(this,ea,"f")}`,i+=`Content-Disposition: form-data; name="${td(a)}"`,Ra(r)&&(i+=`; filename="${td(r.name)}"${J(this,ea,"f")}`,i+=`Content-Type: ${r.type||"application/octet-stream"}`),J(this,Zi,"f").enableAdditionalHeaders===!0&&(i+=`${J(this,ea,"f")}Content-Length: ${Ra(r)?r.size:r.byteLength}`),J(this,ka,"f").encode(`${i}${J(this,ea,"f").repeat(2)}`)},Symbol.iterator)](){return this.values()}[Symbol.asyncIterator](){return this.encode()}};var s2=require("node:stream");var ts=class{constructor(e){this.body=e}get[Symbol.toStringTag](){return"MultipartBody"}};var n2=require("node:stream/web"),a2=!1;async function S6(t,...e){let{fileFromPath:a}=await Promise.resolve().then(()=>(t2(),e2));return a2||(console.warn(`fileFromPath is deprecated; use fs.createReadStream(${JSON.stringify(t)}) instead`),a2=!0),await a(t,...e)}var C6=new id.default({keepAlive:!0,timeout:5*60*1e3}),E6=new id.default.HttpsAgent({keepAlive:!0,timeout:5*60*1e3});async function T6(t,e){let a=new es(t),r=s2.Readable.from(a),i=new ts(r),s={...e.headers,...a.headers,"Content-Length":a.contentLength};return{...e,body:i,headers:s}}function d2(){return typeof AbortController>"u"&&(globalThis.AbortController=r2.AbortController),{kind:"node",fetch:ta.default,Request:ta.Request,Response:ta.Response,Headers:ta.Headers,FormData:$i,Blob:lt,File:Qe,ReadableStream:n2.ReadableStream,getMultipartRequestOptions:T6,getDefaultAgent:t=>t.startsWith("https")?E6:C6,fileFromPath:S6,isFsReadStream:t=>t instanceof i2.ReadStream}}va||to(d2(),{auto:!0});var P=class extends Error{},me=class t extends P{constructor(e,a,r,i){super(`${t.makeMessage(e,a,r)}`),this.status=e,this.headers=i,this.request_id=i?.["x-request-id"];let s=a;this.error=s,this.code=s?.code,this.param=s?.param,this.type=s?.type}static makeMessage(e,a,r){let i=a?.message?typeof a.message=="string"?a.message:JSON.stringify(a.message):a?JSON.stringify(a):r;return e&&i?`${e} ${i}`:e?`${e} status code (no body)`:i||"(no status code or body)"}static generate(e,a,r,i){if(!e)return new aa({message:r,cause:as(a)});let s=a?.error;return e===400?new Er(e,s,r,i):e===401?new Tr(e,s,r,i):e===403?new Nr(e,s,r,i):e===404?new Ar(e,s,r,i):e===409?new Rr(e,s,r,i):e===422?new kr(e,s,r,i):e===429?new xr(e,s,r,i):e>=500?new Pr(e,s,r,i):new t(e,s,r,i)}},fe=class extends me{constructor({message:e}={}){super(void 0,void 0,e||"Request was aborted.",void 0),this.status=void 0}},aa=class extends me{constructor({message:e,cause:a}){super(void 0,void 0,e||"Connection error.",void 0),this.status=void 0,a&&(this.cause=a)}},ra=class extends aa{constructor({message:e}={}){super({message:e??"Request timed out."})}},Er=class extends me{constructor(){super(...arguments),this.status=400}},Tr=class extends me{constructor(){super(...arguments),this.status=401}},Nr=class extends me{constructor(){super(...arguments),this.status=403}},Ar=class extends me{constructor(){super(...arguments),this.status=404}},Rr=class extends me{constructor(){super(...arguments),this.status=409}},kr=class extends me{constructor(){super(...arguments),this.status=422}},xr=class extends me{constructor(){super(...arguments),this.status=429}},Pr=class extends me{},f1=class extends P{constructor(){super("Could not parse response content as the length limit was reached")}},v1=class extends P{constructor(){super("Could not parse response content as the request was rejected by the content filter")}};var Ia=class t{constructor(){this.buffer=[],this.trailingCR=!1}decode(e){let a=this.decodeText(e);if(this.trailingCR&&(a="\r"+a,this.trailingCR=!1),a.endsWith("\r")&&(this.trailingCR=!0,a=a.slice(0,-1)),!a)return[];let r=t.NEWLINE_CHARS.has(a[a.length-1]||""),i=a.split(t.NEWLINE_REGEXP);return r&&i.pop(),i.length===1&&!r?(this.buffer.push(i[0]),[]):(this.buffer.length>0&&(i=[this.buffer.join("")+i[0],...i.slice(1)],this.buffer=[]),r||(this.buffer=[i.pop()||""]),i)}decodeText(e){if(e==null)return"";if(typeof e=="string")return e;if(typeof Buffer<"u"){if(e instanceof Buffer)return e.toString();if(e instanceof Uint8Array)return Buffer.from(e).toString();throw new P(`Unexpected: received non-Uint8Array (${e.constructor.name}) stream chunk in an environment with a global "Buffer" defined, which this library assumes to be Node. Please report this error.`)}if(typeof TextDecoder<"u"){if(e instanceof Uint8Array||e instanceof ArrayBuffer)return this.textDecoder??(this.textDecoder=new TextDecoder("utf8")),this.textDecoder.decode(e);throw new P(`Unexpected: received non-Uint8Array/ArrayBuffer (${e.constructor.name}) in a web platform. Please report this error.`)}throw new P("Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.")}flush(){if(!this.buffer.length&&!this.trailingCR)return[];let e=[this.buffer.join("")];return this.buffer=[],this.trailingCR=!1,e}};Ia.NEWLINE_CHARS=new Set([`
`,"\r"]);Ia.NEWLINE_REGEXP=/\r\n|[\n\r]/g;var ht=class t{constructor(e,a){this.iterator=e,this.controller=a}static fromSSEResponse(e,a){let r=!1;async function*i(){if(r)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");r=!0;let s=!1;try{for await(let n of A6(e,a))if(!s){if(n.data.startsWith("[DONE]")){s=!0;continue}if(n.event===null){let d;try{d=JSON.parse(n.data)}catch(o){throw console.error("Could not parse message into JSON:",n.data),console.error("From chunk:",n.raw),o}if(d&&d.error)throw new me(void 0,d.error,void 0,void 0);yield d}else{let d;try{d=JSON.parse(n.data)}catch(o){throw console.error("Could not parse message into JSON:",n.data),console.error("From chunk:",n.raw),o}if(n.event=="error")throw new me(void 0,d.error,d.message,void 0);yield{event:n.event,data:d}}}s=!0}catch(n){if(n instanceof Error&&n.name==="AbortError")return;throw n}finally{s||a.abort()}}return new t(i,a)}static fromReadableStream(e,a){let r=!1;async function*i(){let n=new Ia,d=o2(e);for await(let o of d)for(let p of n.decode(o))yield p;for(let o of n.flush())yield o}async function*s(){if(r)throw new Error("Cannot iterate over a consumed stream, use `.tee()` to split the stream.");r=!0;let n=!1;try{for await(let d of i())n||d&&(yield JSON.parse(d));n=!0}catch(d){if(d instanceof Error&&d.name==="AbortError")return;throw d}finally{n||a.abort()}}return new t(s,a)}[Symbol.asyncIterator](){return this.iterator()}tee(){let e=[],a=[],r=this.iterator(),i=s=>({next:()=>{if(s.length===0){let n=r.next();e.push(n),a.push(n)}return s.shift()}});return[new t(()=>i(e),this.controller),new t(()=>i(a),this.controller)]}toReadableStream(){let e=this,a,r=new TextEncoder;return new Gs({async start(){a=e[Symbol.asyncIterator]()},async pull(i){try{let{value:s,done:n}=await a.next();if(n)return i.close();let d=r.encode(JSON.stringify(s)+`
`);i.enqueue(d)}catch(s){i.error(s)}},async cancel(){await a.return?.()}})}};async function*A6(t,e){if(!t.body)throw e.abort(),new P("Attempted to iterate over a response with no body");let a=new sd,r=new Ia,i=o2(t.body);for await(let s of R6(i))for(let n of r.decode(s)){let d=a.decode(n);d&&(yield d)}for(let s of r.flush()){let n=a.decode(s);n&&(yield n)}}async function*R6(t){let e=new Uint8Array;for await(let a of t){if(a==null)continue;let r=a instanceof ArrayBuffer?new Uint8Array(a):typeof a=="string"?new TextEncoder().encode(a):a,i=new Uint8Array(e.length+r.length);i.set(e),i.set(r,e.length),e=i;let s;for(;(s=k6(e))!==-1;)yield e.slice(0,s),e=e.slice(s)}e.length>0&&(yield e)}function k6(t){for(let r=0;r<t.length-2;r++){if(t[r]===10&&t[r+1]===10||t[r]===13&&t[r+1]===13)return r+2;if(t[r]===13&&t[r+1]===10&&r+3<t.length&&t[r+2]===13&&t[r+3]===10)return r+4}return-1}var sd=class{constructor(){this.event=null,this.data=[],this.chunks=[]}decode(e){if(e.endsWith("\r")&&(e=e.substring(0,e.length-1)),!e){if(!this.event&&!this.data.length)return null;let s={event:this.event,data:this.data.join(`
`),raw:this.chunks};return this.event=null,this.data=[],this.chunks=[],s}if(this.chunks.push(e),e.startsWith(":"))return null;let[a,r,i]=x6(e,":");return i.startsWith(" ")&&(i=i.substring(1)),a==="event"?this.event=i:a==="data"&&this.data.push(i),null}};function x6(t,e){let a=t.indexOf(e);return a!==-1?[t.substring(0,a),e,t.substring(a+e.length)]:[t,"",""]}function o2(t){if(t[Symbol.asyncIterator])return t;let e=t.getReader();return{async next(){try{let a=await e.read();return a?.done&&e.releaseLock(),a}catch(a){throw e.releaseLock(),a}},async return(){let a=e.cancel();return e.releaseLock(),await a,{done:!0,value:void 0}},[Symbol.asyncIterator](){return this}}}var p2=t=>t!=null&&typeof t=="object"&&typeof t.url=="string"&&typeof t.blob=="function",l2=t=>t!=null&&typeof t=="object"&&typeof t.name=="string"&&typeof t.lastModified=="number"&&Ir(t),Ir=t=>t!=null&&typeof t=="object"&&typeof t.size=="number"&&typeof t.type=="string"&&typeof t.text=="function"&&typeof t.slice=="function"&&typeof t.arrayBuffer=="function",P6=t=>l2(t)||p2(t)||Ys(t);async function od(t,e,a){if(t=await t,l2(t))return t;if(p2(t)){let i=await t.blob();e||(e=new URL(t.url).pathname.split(/[\\/]/).pop()??"unknown_file");let s=Ir(i)?[await i.arrayBuffer()]:[i];return new ai(s,e,a)}let r=await I6(t);if(e||(e=O6(t)??"unknown_file"),!a?.type){let i=r[0]?.type;typeof i=="string"&&(a={...a,type:i})}return new ai(r,e,a)}async function I6(t){let e=[];if(typeof t=="string"||ArrayBuffer.isView(t)||t instanceof ArrayBuffer)e.push(t);else if(Ir(t))e.push(await t.arrayBuffer());else if(F6(t))for await(let a of t)e.push(a);else throw new Error(`Unexpected data type: ${typeof t}; constructor: ${t?.constructor?.name}; props: ${D6(t)}`);return e}function D6(t){return`[${Object.getOwnPropertyNames(t).map(a=>`"${a}"`).join(", ")}]`}function O6(t){return nd(t.name)||nd(t.filename)||nd(t.path)?.split(/[\\/]/).pop()}var nd=t=>{if(typeof t=="string")return t;if(typeof Buffer<"u"&&t instanceof Buffer)return String(t)},F6=t=>t!=null&&typeof t=="object"&&typeof t[Symbol.asyncIterator]=="function",pd=t=>t&&typeof t=="object"&&t.body&&t[Symbol.toStringTag]==="MultipartBody";var je=async t=>{let e=await m2(t.body);return Xs(e,t)},m2=async t=>{let e=new zs;return await Promise.all(Object.entries(t||{}).map(([a,r])=>dd(e,a,r))),e};var dd=async(t,e,a)=>{if(a!==void 0){if(a==null)throw new TypeError(`Received null for "${e}"; to pass null in FormData, you must use the string 'null'`);if(typeof a=="string"||typeof a=="number"||typeof a=="boolean")t.append(e,String(a));else if(P6(a)){let r=await od(a);t.append(e,r)}else if(Array.isArray(a))await Promise.all(a.map(r=>dd(t,e+"[]",r)));else if(typeof a=="object")await Promise.all(Object.entries(a).map(([r,i])=>dd(t,`${e}[${r}]`,i)));else throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${a} instead`)}};var V6=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},B6=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},rs;async function g2(t){let{response:e}=t;if(t.options.stream)return g1("response",e.status,e.url,e.headers,e.body),t.options.__streamClass?t.options.__streamClass.fromSSEResponse(e,t.controller):ht.fromSSEResponse(e,t.controller);if(e.status===204)return null;if(t.options.__binaryResponse)return e;let a=e.headers.get("content-type");if(a?.includes("application/json")||a?.includes("application/vnd.api+json")){let s=await e.json();return g1("response",e.status,e.url,e.headers,s),w2(s,e)}let i=await e.text();return g1("response",e.status,e.url,e.headers,i),i}function w2(t,e){return!t||typeof t!="object"||Array.isArray(t)?t:Object.defineProperty(t,"_request_id",{value:e.headers.get("x-request-id"),enumerable:!1})}var is=class t extends Promise{constructor(e,a=g2){super(r=>{r(null)}),this.responsePromise=e,this.parseResponse=a}_thenUnwrap(e){return new t(this.responsePromise,async a=>w2(e(await this.parseResponse(a),a),a.response))}asResponse(){return this.responsePromise.then(e=>e.response)}async withResponse(){let[e,a]=await Promise.all([this.parse(),this.asResponse()]);return{data:e,response:a,request_id:a.headers.get("x-request-id")}}parse(){return this.parsedPromise||(this.parsedPromise=this.responsePromise.then(this.parseResponse)),this.parsedPromise}then(e,a){return this.parse().then(e,a)}catch(e){return this.parse().catch(e)}finally(e){return this.parse().finally(e)}},ss=class{constructor({baseURL:e,maxRetries:a=2,timeout:r=6e5,httpAgent:i,fetch:s}){this.baseURL=e,this.maxRetries=ld("maxRetries",a),this.timeout=ld("timeout",r),this.httpAgent=i,this.fetch=s??Ws}authHeaders(e){return{}}defaultHeaders(e){return{Accept:"application/json","Content-Type":"application/json","User-Agent":this.getUserAgent(),...$6(),...this.authHeaders(e)}}validateHeaders(e,a){}defaultIdempotencyKey(){return`stainless-node-retry-${G6()}`}get(e,a){return this.methodRequest("get",e,a)}post(e,a){return this.methodRequest("post",e,a)}patch(e,a){return this.methodRequest("patch",e,a)}put(e,a){return this.methodRequest("put",e,a)}delete(e,a){return this.methodRequest("delete",e,a)}methodRequest(e,a,r){return this.request(Promise.resolve(r).then(async i=>{let s=i&&Ir(i?.body)?new DataView(await i.body.arrayBuffer()):i?.body instanceof DataView?i.body:i?.body instanceof ArrayBuffer?new DataView(i.body):i&&ArrayBuffer.isView(i?.body)?new DataView(i.body.buffer):i?.body;return{method:e,path:a,...i,body:s}}))}getAPIList(e,a,r){return this.requestAPIList(a,{method:"get",path:e,...r})}calculateContentLength(e){if(typeof e=="string"){if(typeof Buffer<"u")return Buffer.byteLength(e,"utf8").toString();if(typeof TextEncoder<"u")return new TextEncoder().encode(e).length.toString()}else if(ArrayBuffer.isView(e))return e.byteLength.toString();return null}buildRequest(e,{retryCount:a=0}={}){let{method:r,path:i,query:s,headers:n={}}=e,d=ArrayBuffer.isView(e.body)||e.__binaryRequest&&typeof e.body=="string"?e.body:pd(e.body)?e.body.body:e.body?JSON.stringify(e.body,null,2):null,o=this.calculateContentLength(d),p=this.buildURL(i,s);"timeout"in e&&ld("timeout",e.timeout);let c=e.timeout??this.timeout,l=e.httpAgent??this.httpAgent??Js(p),m=c+1e3;typeof l?.options?.timeout=="number"&&m>(l.options.timeout??0)&&(l.options.timeout=m),this.idempotencyHeader&&r!=="get"&&(e.idempotencyKey||(e.idempotencyKey=this.defaultIdempotencyKey()),n[this.idempotencyHeader]=e.idempotencyKey);let u=this.buildHeaders({options:e,headers:n,contentLength:o,retryCount:a});return{req:{method:r,...d&&{body:d},headers:u,...l&&{agent:l},signal:e.signal??null},url:p,timeout:c}}buildHeaders({options:e,headers:a,contentLength:r,retryCount:i}){let s={};r&&(s["content-length"]=r);let n=this.defaultHeaders(e);return f2(s,n),f2(s,a),pd(e.body)&&va!=="node"&&delete s["content-type"],v2(n,"x-stainless-retry-count")===void 0&&v2(a,"x-stainless-retry-count")===void 0&&(s["x-stainless-retry-count"]=String(i)),this.validateHeaders(s,a),s}async prepareOptions(e){}async prepareRequest(e,{url:a,options:r}){}parseHeaders(e){return e?Symbol.iterator in e?Object.fromEntries(Array.from(e).map(a=>[...a])):{...e}:{}}makeStatusError(e,a,r,i){return me.generate(e,a,r,i)}request(e,a=null){return new is(this.makeRequest(e,a))}async makeRequest(e,a){let r=await e,i=r.maxRetries??this.maxRetries;a==null&&(a=i),await this.prepareOptions(r);let{req:s,url:n,timeout:d}=this.buildRequest(r,{retryCount:i-a});if(await this.prepareRequest(s,{url:n,options:r}),g1("request",n,r,s.headers),r.signal?.aborted)throw new fe;let o=new AbortController,p=await this.fetchWithTimeout(n,s,d,o).catch(as);if(p instanceof Error){if(r.signal?.aborted)throw new fe;if(a)return this.retryRequest(r,a);throw p.name==="AbortError"?new ra:new aa({cause:p})}let c=L6(p.headers);if(!p.ok){if(a&&this.shouldRetry(p)){let v=`retrying, ${a} attempts remaining`;return g1(`response (error; ${v})`,p.status,n,c),this.retryRequest(r,a,c)}let l=await p.text().catch(v=>as(v).message),m=H6(l),u=m?void 0:l;throw g1(`response (error; ${a?"(error; no more retries left)":"(error; not retryable)"})`,p.status,n,c,u),this.makeStatusError(p.status,m,u,c)}return{response:p,options:r,controller:o}}requestAPIList(e,a){let r=this.makeRequest(a,null);return new md(this,r,e)}buildURL(e,a){let r=z6(e)?new URL(e):new URL(this.baseURL+(this.baseURL.endsWith("/")&&e.startsWith("/")?e.slice(1):e)),i=this.defaultQuery();return b2(i)||(a={...i,...a}),typeof a=="object"&&a&&!Array.isArray(a)&&(r.search=this.stringifyQuery(a)),r.toString()}stringifyQuery(e){return Object.entries(e).filter(([a,r])=>typeof r<"u").map(([a,r])=>{if(typeof r=="string"||typeof r=="number"||typeof r=="boolean")return`${encodeURIComponent(a)}=${encodeURIComponent(r)}`;if(r===null)return`${encodeURIComponent(a)}=`;throw new P(`Cannot stringify type ${typeof r}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`)}).join("&")}async fetchWithTimeout(e,a,r,i){let{signal:s,...n}=a||{};s&&s.addEventListener("abort",()=>i.abort());let d=setTimeout(()=>i.abort(),r);return this.getRequestClient().fetch.call(void 0,e,{signal:i.signal,...n}).finally(()=>{clearTimeout(d)})}getRequestClient(){return{fetch:this.fetch}}shouldRetry(e){let a=e.headers.get("x-should-retry");return a==="true"?!0:a==="false"?!1:e.status===408||e.status===409||e.status===429||e.status>=500}async retryRequest(e,a,r){let i,s=r?.["retry-after-ms"];if(s){let d=parseFloat(s);Number.isNaN(d)||(i=d)}let n=r?.["retry-after"];if(n&&!i){let d=parseFloat(n);Number.isNaN(d)?i=Date.parse(n)-Date.now():i=d*1e3}if(!(i&&0<=i&&i<60*1e3)){let d=e.maxRetries??this.maxRetries;i=this.calculateDefaultRetryTimeoutMillis(a,d)}return await Mt(i),this.makeRequest(e,a-1)}calculateDefaultRetryTimeoutMillis(e,a){let s=a-e,n=Math.min(.5*Math.pow(2,s),8),d=1-Math.random()*.25;return n*d*1e3}getUserAgent(){return`${this.constructor.name}/JS ${fa}`}},Dr=class{constructor(e,a,r,i){rs.set(this,void 0),V6(this,rs,e,"f"),this.options=i,this.response=a,this.body=r}hasNextPage(){return this.getPaginatedItems().length?this.nextPageInfo()!=null:!1}async getNextPage(){let e=this.nextPageInfo();if(!e)throw new P("No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.");let a={...this.options};if("params"in e&&typeof a.query=="object")a.query={...a.query,...e.params};else if("url"in e){let r=[...Object.entries(a.query||{}),...e.url.searchParams.entries()];for(let[i,s]of r)e.url.searchParams.set(i,s);a.query=void 0,a.path=e.url.toString()}return await B6(this,rs,"f").requestAPIList(this.constructor,a)}async*iterPages(){let e=this;for(yield e;e.hasNextPage();)e=await e.getNextPage(),yield e}async*[(rs=new WeakMap,Symbol.asyncIterator)](){for await(let e of this.iterPages())for(let a of e.getPaginatedItems())yield a}},md=class extends is{constructor(e,a,r){super(a,async i=>new r(e,i.response,await g2(i),i.options))}async*[Symbol.asyncIterator](){let e=await this;for await(let a of e)yield a}},L6=t=>new Proxy(Object.fromEntries(t.entries()),{get(e,a){let r=a.toString();return e[r.toLowerCase()]||e[r]}}),U6={method:!0,path:!0,query:!0,body:!0,headers:!0,maxRetries:!0,stream:!0,timeout:!0,httpAgent:!0,signal:!0,idempotencyKey:!0,__binaryRequest:!0,__binaryResponse:!0,__streamClass:!0},W=t=>typeof t=="object"&&t!==null&&!b2(t)&&Object.keys(t).every(e=>y2(U6,e)),q6=()=>{if(typeof Deno<"u"&&Deno.build!=null)return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":fa,"X-Stainless-OS":c2(Deno.build.os),"X-Stainless-Arch":u2(Deno.build.arch),"X-Stainless-Runtime":"deno","X-Stainless-Runtime-Version":typeof Deno.version=="string"?Deno.version:Deno.version?.deno??"unknown"};if(typeof EdgeRuntime<"u")return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":fa,"X-Stainless-OS":"Unknown","X-Stainless-Arch":`other:${EdgeRuntime}`,"X-Stainless-Runtime":"edge","X-Stainless-Runtime-Version":process.version};if(Object.prototype.toString.call(typeof process<"u"?process:0)==="[object process]")return{"X-Stainless-Lang":"js","X-Stainless-Package-Version":fa,"X-Stainless-OS":c2(process.platform),"X-Stainless-Arch":u2(process.arch),"X-Stainless-Runtime":"node","X-Stainless-Runtime-Version":process.version};let t=j6();return t?{"X-Stainless-Lang":"js","X-Stainless-Package-Version":fa,"X-Stainless-OS":"Unknown","X-Stainless-Arch":"unknown","X-Stainless-Runtime":`browser:${t.browser}`,"X-Stainless-Runtime-Version":t.version}:{"X-Stainless-Lang":"js","X-Stainless-Package-Version":fa,"X-Stainless-OS":"Unknown","X-Stainless-Arch":"unknown","X-Stainless-Runtime":"unknown","X-Stainless-Runtime-Version":"unknown"}};function j6(){if(typeof navigator>"u"||!navigator)return null;let t=[{key:"edge",pattern:/Edge(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"ie",pattern:/MSIE(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"ie",pattern:/Trident(?:.*rv\:(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"chrome",pattern:/Chrome(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"firefox",pattern:/Firefox(?:\W+(\d+)\.(\d+)(?:\.(\d+))?)?/},{key:"safari",pattern:/(?:Version\W+(\d+)\.(\d+)(?:\.(\d+))?)?(?:\W+Mobile\S*)?\W+Safari/}];for(let{key:e,pattern:a}of t){let r=a.exec(navigator.userAgent);if(r){let i=r[1]||0,s=r[2]||0,n=r[3]||0;return{browser:e,version:`${i}.${s}.${n}`}}}return null}var u2=t=>t==="x32"?"x32":t==="x86_64"||t==="x64"?"x64":t==="arm"?"arm":t==="aarch64"||t==="arm64"?"arm64":t?`other:${t}`:"unknown",c2=t=>(t=t.toLowerCase(),t.includes("ios")?"iOS":t==="android"?"Android":t==="darwin"?"MacOS":t==="win32"?"Windows":t==="freebsd"?"FreeBSD":t==="openbsd"?"OpenBSD":t==="linux"?"Linux":t?`Other:${t}`:"Unknown"),h2,$6=()=>h2??(h2=q6()),H6=t=>{try{return JSON.parse(t)}catch{return}},W6=new RegExp("^(?:[a-z]+:)?//","i"),z6=t=>W6.test(t),Mt=t=>new Promise(e=>setTimeout(e,t)),ld=(t,e)=>{if(typeof e!="number"||!Number.isInteger(e))throw new P(`${t} must be an integer`);if(e<0)throw new P(`${t} must be a positive integer`);return e},as=t=>{if(t instanceof Error)return t;if(typeof t=="object"&&t!==null)try{return new Error(JSON.stringify(t))}catch{}return new Error(t)};var Or=t=>{if(typeof process<"u")return process.env?.[t]?.trim()??void 0;if(typeof Deno<"u")return Deno.env?.get?.(t)?.trim()};function b2(t){if(!t)return!0;for(let e in t)return!1;return!0}function y2(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function f2(t,e){for(let a in e){if(!y2(e,a))continue;let r=a.toLowerCase();if(!r)continue;let i=e[a];i===null?delete t[r]:i!==void 0&&(t[r]=i)}}function g1(t,...e){typeof process<"u"&&process?.env?.DEBUG==="true"&&console.log(`OpenAI:DEBUG:${t}`,...e)}var G6=()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,t=>{let e=Math.random()*16|0;return(t==="x"?e:e&3|8).toString(16)}),_2=()=>typeof window<"u"&&typeof window.document<"u"&&typeof navigator<"u",X6=t=>typeof t?.get=="function";var v2=(t,e)=>{let a=e.toLowerCase();if(X6(t)){let r=e[0]?.toUpperCase()+e.substring(1).replace(/([^\w])(\w)/g,(i,s,n)=>s+n.toUpperCase());for(let i of[e,a,e.toUpperCase(),r]){let s=t.get(i);if(s)return s}}for(let[r,i]of Object.entries(t))if(r.toLowerCase()===a)return Array.isArray(i)?(i.length<=1||console.warn(`Received ${i.length} entries for the ${e} header, using the first entry.`),i[0]):i};function Fr(t){return t!=null&&typeof t=="object"&&!Array.isArray(t)}var ns=class extends Dr{constructor(e,a,r,i){super(e,a,r,i),this.data=r.data||[],this.object=r.object}getPaginatedItems(){return this.data??[]}nextPageParams(){return null}nextPageInfo(){return null}},K=class extends Dr{constructor(e,a,r,i){super(e,a,r,i),this.data=r.data||[]}getPaginatedItems(){return this.data??[]}nextPageParams(){let e=this.nextPageInfo();if(!e)return null;if("params"in e)return e.params;let a=Object.fromEntries(e.url.searchParams);return Object.keys(a).length?a:null}nextPageInfo(){let e=this.getPaginatedItems();if(!e.length)return null;let a=e[e.length-1]?.id;return a?{params:{after:a}}:null}};var C=class{constructor(e){this._client=e}};var w1=class extends C{create(e,a){return this._client.post("/chat/completions",{body:e,...a,stream:e.stream??!1})}};var ia=class extends C{constructor(){super(...arguments),this.completions=new w1(this._client)}};ia.Completions=w1;var b1=class extends C{create(e,a){return this._client.post("/audio/speech",{body:e,...a,__binaryResponse:!0})}};var y1=class extends C{create(e,a){return this._client.post("/audio/transcriptions",je({body:e,...a}))}};var _1=class extends C{create(e,a){return this._client.post("/audio/translations",je({body:e,...a}))}};var ft=class extends C{constructor(){super(...arguments),this.transcriptions=new y1(this._client),this.translations=new _1(this._client),this.speech=new b1(this._client)}};ft.Transcriptions=y1;ft.Translations=_1;ft.Speech=b1;var sa=class extends C{create(e,a){return this._client.post("/batches",{body:e,...a})}retrieve(e,a){return this._client.get(`/batches/${e}`,a)}list(e={},a){return W(e)?this.list({},e):this._client.getAPIList("/batches",Oa,{query:e,...a})}cancel(e,a){return this._client.post(`/batches/${e}/cancel`,a)}},Oa=class extends K{};sa.BatchesPage=Oa;var Fa=class extends C{create(e,a){return this._client.post("/assistants",{body:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}retrieve(e,a){return this._client.get(`/assistants/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}update(e,a,r){return this._client.post(`/assistants/${e}`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}list(e={},a){return W(e)?this.list({},e):this._client.getAPIList("/assistants",S1,{query:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}del(e,a){return this._client.delete(`/assistants/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}},S1=class extends K{};Fa.AssistantsPage=S1;function ud(t){return typeof t.parse=="function"}var na=t=>t?.role==="assistant",cd=t=>t?.role==="function",hd=t=>t?.role==="tool";var et=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},Q=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},fd,ds,os,Mr,Vr,ps,Br,Vt,Lr,ls,ms,C1,S2,E1=class{constructor(){fd.add(this),this.controller=new AbortController,ds.set(this,void 0),os.set(this,()=>{}),Mr.set(this,()=>{}),Vr.set(this,void 0),ps.set(this,()=>{}),Br.set(this,()=>{}),Vt.set(this,{}),Lr.set(this,!1),ls.set(this,!1),ms.set(this,!1),C1.set(this,!1),et(this,ds,new Promise((e,a)=>{et(this,os,e,"f"),et(this,Mr,a,"f")}),"f"),et(this,Vr,new Promise((e,a)=>{et(this,ps,e,"f"),et(this,Br,a,"f")}),"f"),Q(this,ds,"f").catch(()=>{}),Q(this,Vr,"f").catch(()=>{})}_run(e){setTimeout(()=>{e().then(()=>{this._emitFinal(),this._emit("end")},Q(this,fd,"m",S2).bind(this))},0)}_connected(){this.ended||(Q(this,os,"f").call(this),this._emit("connect"))}get ended(){return Q(this,Lr,"f")}get errored(){return Q(this,ls,"f")}get aborted(){return Q(this,ms,"f")}abort(){this.controller.abort()}on(e,a){return(Q(this,Vt,"f")[e]||(Q(this,Vt,"f")[e]=[])).push({listener:a}),this}off(e,a){let r=Q(this,Vt,"f")[e];if(!r)return this;let i=r.findIndex(s=>s.listener===a);return i>=0&&r.splice(i,1),this}once(e,a){return(Q(this,Vt,"f")[e]||(Q(this,Vt,"f")[e]=[])).push({listener:a,once:!0}),this}emitted(e){return new Promise((a,r)=>{et(this,C1,!0,"f"),e!=="error"&&this.once("error",r),this.once(e,a)})}async done(){et(this,C1,!0,"f"),await Q(this,Vr,"f")}_emit(e,...a){if(Q(this,Lr,"f"))return;e==="end"&&(et(this,Lr,!0,"f"),Q(this,ps,"f").call(this));let r=Q(this,Vt,"f")[e];if(r&&(Q(this,Vt,"f")[e]=r.filter(i=>!i.once),r.forEach(({listener:i})=>i(...a))),e==="abort"){let i=a[0];!Q(this,C1,"f")&&!r?.length&&Promise.reject(i),Q(this,Mr,"f").call(this,i),Q(this,Br,"f").call(this,i),this._emit("end");return}if(e==="error"){let i=a[0];!Q(this,C1,"f")&&!r?.length&&Promise.reject(i),Q(this,Mr,"f").call(this,i),Q(this,Br,"f").call(this,i),this._emit("end")}}_emitFinal(){}};ds=new WeakMap,os=new WeakMap,Mr=new WeakMap,Vr=new WeakMap,ps=new WeakMap,Br=new WeakMap,Vt=new WeakMap,Lr=new WeakMap,ls=new WeakMap,ms=new WeakMap,C1=new WeakMap,fd=new WeakSet,S2=function(e){if(et(this,ls,!0,"f"),e instanceof Error&&e.name==="AbortError"&&(e=new fe),e instanceof fe)return et(this,ms,!0,"f"),this._emit("abort",e);if(e instanceof P)return this._emit("error",e);if(e instanceof Error){let a=new P(e.message);return a.cause=e,this._emit("error",a)}return this._emit("error",new P(String(e)))};function vd(t){return t?.$brand==="auto-parseable-response-format"}function Ma(t){return t?.$brand==="auto-parseable-tool"}function C2(t,e){return!e||!gd(e)?{...t,choices:t.choices.map(a=>({...a,message:{...a.message,parsed:null,tool_calls:a.message.tool_calls??[]}}))}:Ur(t,e)}function Ur(t,e){let a=t.choices.map(r=>{if(r.finish_reason==="length")throw new f1;if(r.finish_reason==="content_filter")throw new v1;return{...r,message:{...r.message,tool_calls:r.message.tool_calls?.map(i=>t4(e,i))??[],parsed:r.message.content&&!r.message.refusal?e4(e,r.message.content):null}}});return{...t,choices:a}}function e4(t,e){return t.response_format?.type!=="json_schema"?null:t.response_format?.type==="json_schema"?"$parseRaw"in t.response_format?t.response_format.$parseRaw(e):JSON.parse(e):null}function t4(t,e){let a=t.tools?.find(r=>r.function?.name===e.function.name);return{...e,function:{...e.function,parsed_arguments:Ma(a)?a.$parseRaw(e.function.arguments):a?.function.strict?JSON.parse(e.function.arguments):null}}}function E2(t,e){if(!t)return!1;let a=t.tools?.find(r=>r.function?.name===e.function.name);return Ma(a)||a?.function.strict||!1}function gd(t){return vd(t.response_format)?!0:t.tools?.some(e=>Ma(e)||e.type==="function"&&e.function.strict===!0)??!1}function T2(t){for(let e of t??[]){if(e.type!=="function")throw new P(`Currently only \`function\` tool types support auto-parsing; Received \`${e.type}\``);if(e.function.strict!==!0)throw new P(`The \`${e.function.name}\` tool is not marked with \`strict: true\`. Only strict function tools can be auto-parsed`)}}var xe=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},Ee,wd,us,bd,yd,_d,A2,Sd,N2=10,T1=class extends E1{constructor(){super(...arguments),Ee.add(this),this._chatCompletions=[],this.messages=[]}_addChatCompletion(e){this._chatCompletions.push(e),this._emit("chatCompletion",e);let a=e.choices[0]?.message;return a&&this._addMessage(a),e}_addMessage(e,a=!0){if("content"in e||(e.content=null),this.messages.push(e),a){if(this._emit("message",e),(cd(e)||hd(e))&&e.content)this._emit("functionCallResult",e.content);else if(na(e)&&e.function_call)this._emit("functionCall",e.function_call);else if(na(e)&&e.tool_calls)for(let r of e.tool_calls)r.type==="function"&&this._emit("functionCall",r.function)}}async finalChatCompletion(){await this.done();let e=this._chatCompletions[this._chatCompletions.length-1];if(!e)throw new P("stream ended without producing a ChatCompletion");return e}async finalContent(){return await this.done(),xe(this,Ee,"m",wd).call(this)}async finalMessage(){return await this.done(),xe(this,Ee,"m",us).call(this)}async finalFunctionCall(){return await this.done(),xe(this,Ee,"m",bd).call(this)}async finalFunctionCallResult(){return await this.done(),xe(this,Ee,"m",yd).call(this)}async totalUsage(){return await this.done(),xe(this,Ee,"m",_d).call(this)}allChatCompletions(){return[...this._chatCompletions]}_emitFinal(){let e=this._chatCompletions[this._chatCompletions.length-1];e&&this._emit("finalChatCompletion",e);let a=xe(this,Ee,"m",us).call(this);a&&this._emit("finalMessage",a);let r=xe(this,Ee,"m",wd).call(this);r&&this._emit("finalContent",r);let i=xe(this,Ee,"m",bd).call(this);i&&this._emit("finalFunctionCall",i);let s=xe(this,Ee,"m",yd).call(this);s!=null&&this._emit("finalFunctionCallResult",s),this._chatCompletions.some(n=>n.usage)&&this._emit("totalUsage",xe(this,Ee,"m",_d).call(this))}async _createChatCompletion(e,a,r){let i=r?.signal;i&&(i.aborted&&this.controller.abort(),i.addEventListener("abort",()=>this.controller.abort())),xe(this,Ee,"m",A2).call(this,a);let s=await e.chat.completions.create({...a,stream:!1},{...r,signal:this.controller.signal});return this._connected(),this._addChatCompletion(Ur(s,a))}async _runChatCompletion(e,a,r){for(let i of a.messages)this._addMessage(i,!1);return await this._createChatCompletion(e,a,r)}async _runFunctions(e,a,r){let i="function",{function_call:s="auto",stream:n,...d}=a,o=typeof s!="string"&&s?.name,{maxChatCompletions:p=N2}=r||{},c={};for(let m of a.functions)c[m.name||m.function.name]=m;let l=a.functions.map(m=>({name:m.name||m.function.name,parameters:m.parameters,description:m.description}));for(let m of a.messages)this._addMessage(m,!1);for(let m=0;m<p;++m){let h=(await this._createChatCompletion(e,{...d,function_call:s,functions:l,messages:[...this.messages]},r)).choices[0]?.message;if(!h)throw new P("missing message in ChatCompletion response");if(!h.function_call)return;let{name:f,arguments:v}=h.function_call,w=c[f];if(w){if(o&&o!==f){let A=`Invalid function_call: ${JSON.stringify(f)}. ${JSON.stringify(o)} requested. Please try again`;this._addMessage({role:i,name:f,content:A});continue}}else{let A=`Invalid function_call: ${JSON.stringify(f)}. Available options are: ${l.map(D=>JSON.stringify(D.name)).join(", ")}. Please try again`;this._addMessage({role:i,name:f,content:A});continue}let g;try{g=ud(w)?await w.parse(v):v}catch(A){this._addMessage({role:i,name:f,content:A instanceof Error?A.message:String(A)});continue}let x=await w.function(g,this),_=xe(this,Ee,"m",Sd).call(this,x);if(this._addMessage({role:i,name:f,content:_}),o)return}}async _runTools(e,a,r){let i="tool",{tool_choice:s="auto",stream:n,...d}=a,o=typeof s!="string"&&s?.function?.name,{maxChatCompletions:p=N2}=r||{},c=a.tools.map(u=>{if(Ma(u)){if(!u.$callback)throw new P("Tool given to `.runTools()` that does not have an associated function");return{type:"function",function:{function:u.$callback,name:u.function.name,description:u.function.description||"",parameters:u.function.parameters,parse:u.$parseRaw,strict:!0}}}return u}),l={};for(let u of c)u.type==="function"&&(l[u.function.name||u.function.function.name]=u.function);let m="tools"in a?c.map(u=>u.type==="function"?{type:"function",function:{name:u.function.name||u.function.function.name,parameters:u.function.parameters,description:u.function.description,strict:u.function.strict}}:u):void 0;for(let u of a.messages)this._addMessage(u,!1);for(let u=0;u<p;++u){let f=(await this._createChatCompletion(e,{...d,tool_choice:s,tools:m,messages:[...this.messages]},r)).choices[0]?.message;if(!f)throw new P("missing message in ChatCompletion response");if(!f.tool_calls?.length)return;for(let v of f.tool_calls){if(v.type!=="function")continue;let w=v.id,{name:g,arguments:x}=v.function,_=l[g];if(_){if(o&&o!==g){let b=`Invalid tool_call: ${JSON.stringify(g)}. ${JSON.stringify(o)} requested. Please try again`;this._addMessage({role:i,tool_call_id:w,content:b});continue}}else{let b=`Invalid tool_call: ${JSON.stringify(g)}. Available options are: ${Object.keys(l).map(y=>JSON.stringify(y)).join(", ")}. Please try again`;this._addMessage({role:i,tool_call_id:w,content:b});continue}let A;try{A=ud(_)?await _.parse(x):x}catch(b){let y=b instanceof Error?b.message:String(b);this._addMessage({role:i,tool_call_id:w,content:y});continue}let D=await _.function(A,this),B=xe(this,Ee,"m",Sd).call(this,D);if(this._addMessage({role:i,tool_call_id:w,content:B}),o)return}}}};Ee=new WeakSet,wd=function(){return xe(this,Ee,"m",us).call(this).content??null},us=function(){let e=this.messages.length;for(;e-- >0;){let a=this.messages[e];if(na(a)){let{function_call:r,...i}=a,s={...i,content:a.content??null,refusal:a.refusal??null};return r&&(s.function_call=r),s}}throw new P("stream ended without producing a ChatCompletionMessage with role=assistant")},bd=function(){for(let e=this.messages.length-1;e>=0;e--){let a=this.messages[e];if(na(a)&&a?.function_call)return a.function_call;if(na(a)&&a?.tool_calls?.length)return a.tool_calls.at(-1)?.function}},yd=function(){for(let e=this.messages.length-1;e>=0;e--){let a=this.messages[e];if(cd(a)&&a.content!=null||hd(a)&&a.content!=null&&typeof a.content=="string"&&this.messages.some(r=>r.role==="assistant"&&r.tool_calls?.some(i=>i.type==="function"&&i.id===a.tool_call_id)))return a.content}},_d=function(){let e={completion_tokens:0,prompt_tokens:0,total_tokens:0};for(let{usage:a}of this._chatCompletions)a&&(e.completion_tokens+=a.completion_tokens,e.prompt_tokens+=a.prompt_tokens,e.total_tokens+=a.total_tokens);return e},A2=function(e){if(e.n!=null&&e.n>1)throw new P("ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.")},Sd=function(e){return typeof e=="string"?e:e===void 0?"undefined":JSON.stringify(e)};var qr=class t extends T1{static runFunctions(e,a,r){let i=new t,s={...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"runFunctions"}};return i._run(()=>i._runFunctions(e,a,s)),i}static runTools(e,a,r){let i=new t,s={...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"runTools"}};return i._run(()=>i._runTools(e,a,s)),i}_addMessage(e,a=!0){super._addMessage(e,a),na(e)&&e.content&&this._emit("content",e.content)}};var ve={STR:1,NUM:2,ARR:4,OBJ:8,NULL:16,BOOL:32,NAN:64,INFINITY:128,MINUS_INFINITY:256,INF:384,SPECIAL:496,ATOM:499,COLLECTION:12,ALL:511},Cd=class extends Error{},Ed=class extends Error{};function a4(t,e=ve.ALL){if(typeof t!="string")throw new TypeError(`expecting str, got ${typeof t}`);if(!t.trim())throw new Error(`${t} is empty`);return r4(t.trim(),e)}var r4=(t,e)=>{let a=t.length,r=0,i=m=>{throw new Cd(`${m} at position ${r}`)},s=m=>{throw new Ed(`${m} at position ${r}`)},n=()=>(l(),r>=a&&i("Unexpected end of input"),t[r]==='"'?d():t[r]==="{"?o():t[r]==="["?p():t.substring(r,r+4)==="null"||ve.NULL&e&&a-r<4&&"null".startsWith(t.substring(r))?(r+=4,null):t.substring(r,r+4)==="true"||ve.BOOL&e&&a-r<4&&"true".startsWith(t.substring(r))?(r+=4,!0):t.substring(r,r+5)==="false"||ve.BOOL&e&&a-r<5&&"false".startsWith(t.substring(r))?(r+=5,!1):t.substring(r,r+8)==="Infinity"||ve.INFINITY&e&&a-r<8&&"Infinity".startsWith(t.substring(r))?(r+=8,1/0):t.substring(r,r+9)==="-Infinity"||ve.MINUS_INFINITY&e&&1<a-r&&a-r<9&&"-Infinity".startsWith(t.substring(r))?(r+=9,-1/0):t.substring(r,r+3)==="NaN"||ve.NAN&e&&a-r<3&&"NaN".startsWith(t.substring(r))?(r+=3,NaN):c()),d=()=>{let m=r,u=!1;for(r++;r<a&&(t[r]!=='"'||u&&t[r-1]==="\\");)u=t[r]==="\\"?!u:!1,r++;if(t.charAt(r)=='"')try{return JSON.parse(t.substring(m,++r-Number(u)))}catch(h){s(String(h))}else if(ve.STR&e)try{return JSON.parse(t.substring(m,r-Number(u))+'"')}catch{return JSON.parse(t.substring(m,t.lastIndexOf("\\"))+'"')}i("Unterminated string literal")},o=()=>{r++,l();let m={};try{for(;t[r]!=="}";){if(l(),r>=a&&ve.OBJ&e)return m;let u=d();l(),r++;try{let h=n();Object.defineProperty(m,u,{value:h,writable:!0,enumerable:!0,configurable:!0})}catch(h){if(ve.OBJ&e)return m;throw h}l(),t[r]===","&&r++}}catch{if(ve.OBJ&e)return m;i("Expected '}' at end of object")}return r++,m},p=()=>{r++;let m=[];try{for(;t[r]!=="]";)m.push(n()),l(),t[r]===","&&r++}catch{if(ve.ARR&e)return m;i("Expected ']' at end of array")}return r++,m},c=()=>{if(r===0){t==="-"&&ve.NUM&e&&i("Not sure what '-' is");try{return JSON.parse(t)}catch(u){if(ve.NUM&e)try{return t[t.length-1]==="."?JSON.parse(t.substring(0,t.lastIndexOf("."))):JSON.parse(t.substring(0,t.lastIndexOf("e")))}catch{}s(String(u))}}let m=r;for(t[r]==="-"&&r++;t[r]&&!",]}".includes(t[r]);)r++;r==a&&!(ve.NUM&e)&&i("Unterminated number literal");try{return JSON.parse(t.substring(m,r))}catch{t.substring(m,r)==="-"&&ve.NUM&e&&i("Not sure what '-' is");try{return JSON.parse(t.substring(m,t.lastIndexOf("e")))}catch(h){s(String(h))}}},l=()=>{for(;r<a&&` 
\r	`.includes(t[r]);)r++};return n()},Td=t=>a4(t,ve.ALL^ve.NUM);var N1=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},$=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},ue,Bt,A1,da,Nd,cs,Ad,Rd,kd,hs,xd,R2,R1=class t extends T1{constructor(e){super(),ue.add(this),Bt.set(this,void 0),A1.set(this,void 0),da.set(this,void 0),N1(this,Bt,e,"f"),N1(this,A1,[],"f")}get currentChatCompletionSnapshot(){return $(this,da,"f")}static fromReadableStream(e){let a=new t(null);return a._run(()=>a._fromReadableStream(e)),a}static createChatCompletion(e,a,r){let i=new t(a);return i._run(()=>i._runChatCompletion(e,{...a,stream:!0},{...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"stream"}})),i}async _createChatCompletion(e,a,r){super._createChatCompletion;let i=r?.signal;i&&(i.aborted&&this.controller.abort(),i.addEventListener("abort",()=>this.controller.abort())),$(this,ue,"m",Nd).call(this);let s=await e.chat.completions.create({...a,stream:!0},{...r,signal:this.controller.signal});this._connected();for await(let n of s)$(this,ue,"m",Ad).call(this,n);if(s.controller.signal?.aborted)throw new fe;return this._addChatCompletion($(this,ue,"m",hs).call(this))}async _fromReadableStream(e,a){let r=a?.signal;r&&(r.aborted&&this.controller.abort(),r.addEventListener("abort",()=>this.controller.abort())),$(this,ue,"m",Nd).call(this),this._connected();let i=ht.fromReadableStream(e,this.controller),s;for await(let n of i)s&&s!==n.id&&this._addChatCompletion($(this,ue,"m",hs).call(this)),$(this,ue,"m",Ad).call(this,n),s=n.id;if(i.controller.signal?.aborted)throw new fe;return this._addChatCompletion($(this,ue,"m",hs).call(this))}[(Bt=new WeakMap,A1=new WeakMap,da=new WeakMap,ue=new WeakSet,Nd=function(){this.ended||N1(this,da,void 0,"f")},cs=function(a){let r=$(this,A1,"f")[a.index];return r||(r={content_done:!1,refusal_done:!1,logprobs_content_done:!1,logprobs_refusal_done:!1,done_tool_calls:new Set,current_tool_call_index:null},$(this,A1,"f")[a.index]=r,r)},Ad=function(a){if(this.ended)return;let r=$(this,ue,"m",R2).call(this,a);this._emit("chunk",a,r);for(let i of a.choices){let s=r.choices[i.index];i.delta.content!=null&&s.message?.role==="assistant"&&s.message?.content&&(this._emit("content",i.delta.content,s.message.content),this._emit("content.delta",{delta:i.delta.content,snapshot:s.message.content,parsed:s.message.parsed})),i.delta.refusal!=null&&s.message?.role==="assistant"&&s.message?.refusal&&this._emit("refusal.delta",{delta:i.delta.refusal,snapshot:s.message.refusal}),i.logprobs?.content!=null&&s.message?.role==="assistant"&&this._emit("logprobs.content.delta",{content:i.logprobs?.content,snapshot:s.logprobs?.content??[]}),i.logprobs?.refusal!=null&&s.message?.role==="assistant"&&this._emit("logprobs.refusal.delta",{refusal:i.logprobs?.refusal,snapshot:s.logprobs?.refusal??[]});let n=$(this,ue,"m",cs).call(this,s);s.finish_reason&&($(this,ue,"m",kd).call(this,s),n.current_tool_call_index!=null&&$(this,ue,"m",Rd).call(this,s,n.current_tool_call_index));for(let d of i.delta.tool_calls??[])n.current_tool_call_index!==d.index&&($(this,ue,"m",kd).call(this,s),n.current_tool_call_index!=null&&$(this,ue,"m",Rd).call(this,s,n.current_tool_call_index)),n.current_tool_call_index=d.index;for(let d of i.delta.tool_calls??[]){let o=s.message.tool_calls?.[d.index];o?.type&&(o?.type==="function"?this._emit("tool_calls.function.arguments.delta",{name:o.function?.name,index:d.index,arguments:o.function.arguments,parsed_arguments:o.function.parsed_arguments,arguments_delta:d.function?.arguments??""}):(o?.type,void 0))}}},Rd=function(a,r){if($(this,ue,"m",cs).call(this,a).done_tool_calls.has(r))return;let s=a.message.tool_calls?.[r];if(!s)throw new Error("no tool call snapshot");if(!s.type)throw new Error("tool call snapshot missing `type`");if(s.type==="function"){let n=$(this,Bt,"f")?.tools?.find(d=>d.type==="function"&&d.function.name===s.function.name);this._emit("tool_calls.function.arguments.done",{name:s.function.name,index:r,arguments:s.function.arguments,parsed_arguments:Ma(n)?n.$parseRaw(s.function.arguments):n?.function.strict?JSON.parse(s.function.arguments):null})}else s.type},kd=function(a){let r=$(this,ue,"m",cs).call(this,a);if(a.message.content&&!r.content_done){r.content_done=!0;let i=$(this,ue,"m",xd).call(this);this._emit("content.done",{content:a.message.content,parsed:i?i.$parseRaw(a.message.content):null})}a.message.refusal&&!r.refusal_done&&(r.refusal_done=!0,this._emit("refusal.done",{refusal:a.message.refusal})),a.logprobs?.content&&!r.logprobs_content_done&&(r.logprobs_content_done=!0,this._emit("logprobs.content.done",{content:a.logprobs.content})),a.logprobs?.refusal&&!r.logprobs_refusal_done&&(r.logprobs_refusal_done=!0,this._emit("logprobs.refusal.done",{refusal:a.logprobs.refusal}))},hs=function(){if(this.ended)throw new P("stream has ended, this shouldn't happen");let a=$(this,da,"f");if(!a)throw new P("request ended without sending any chunks");return N1(this,da,void 0,"f"),N1(this,A1,[],"f"),i4(a,$(this,Bt,"f"))},xd=function(){let a=$(this,Bt,"f")?.response_format;return vd(a)?a:null},R2=function(a){var r,i,s,n;let d=$(this,da,"f"),{choices:o,...p}=a;d?Object.assign(d,p):d=N1(this,da,{...p,choices:[]},"f");for(let{delta:c,finish_reason:l,index:m,logprobs:u=null,...h}of a.choices){let f=d.choices[m];if(f||(f=d.choices[m]={finish_reason:l,index:m,message:{},logprobs:u,...h}),u)if(!f.logprobs)f.logprobs=Object.assign({},u);else{let{content:D,refusal:B,...b}=u;Object.assign(f.logprobs,b),D&&((r=f.logprobs).content??(r.content=[]),f.logprobs.content.push(...D)),B&&((i=f.logprobs).refusal??(i.refusal=[]),f.logprobs.refusal.push(...B))}if(l&&(f.finish_reason=l,$(this,Bt,"f")&&gd($(this,Bt,"f")))){if(l==="length")throw new f1;if(l==="content_filter")throw new v1}if(Object.assign(f,h),!c)continue;let{content:v,refusal:w,function_call:g,role:x,tool_calls:_,...A}=c;if(Object.assign(f.message,A),w&&(f.message.refusal=(f.message.refusal||"")+w),x&&(f.message.role=x),g&&(f.message.function_call?(g.name&&(f.message.function_call.name=g.name),g.arguments&&((s=f.message.function_call).arguments??(s.arguments=""),f.message.function_call.arguments+=g.arguments)):f.message.function_call=g),v&&(f.message.content=(f.message.content||"")+v,!f.message.refusal&&$(this,ue,"m",xd).call(this)&&(f.message.parsed=Td(f.message.content))),_){f.message.tool_calls||(f.message.tool_calls=[]);for(let{index:D,id:B,type:b,function:y,...T}of _){let R=(n=f.message.tool_calls)[D]??(n[D]={});Object.assign(R,T),B&&(R.id=B),b&&(R.type=b),y&&(R.function??(R.function={name:y.name??"",arguments:""})),y?.name&&(R.function.name=y.name),y?.arguments&&(R.function.arguments+=y.arguments,E2($(this,Bt,"f"),R)&&(R.function.parsed_arguments=Td(R.function.arguments)))}}}return d},Symbol.asyncIterator)](){let e=[],a=[],r=!1;return this.on("chunk",i=>{let s=a.shift();s?s.resolve(i):e.push(i)}),this.on("end",()=>{r=!0;for(let i of a)i.resolve(void 0);a.length=0}),this.on("abort",i=>{r=!0;for(let s of a)s.reject(i);a.length=0}),this.on("error",i=>{r=!0;for(let s of a)s.reject(i);a.length=0}),{next:async()=>e.length?{value:e.shift(),done:!1}:r?{value:void 0,done:!0}:new Promise((s,n)=>a.push({resolve:s,reject:n})).then(s=>s?{value:s,done:!1}:{value:void 0,done:!0}),return:async()=>(this.abort(),{value:void 0,done:!0})}}toReadableStream(){return new ht(this[Symbol.asyncIterator].bind(this),this.controller).toReadableStream()}};function i4(t,e){let{id:a,choices:r,created:i,model:s,system_fingerprint:n,...d}=t,o={...d,id:a,choices:r.map(({message:p,finish_reason:c,index:l,logprobs:m,...u})=>{if(!c)throw new P(`missing finish_reason for choice ${l}`);let{content:h=null,function_call:f,tool_calls:v,...w}=p,g=p.role;if(!g)throw new P(`missing role for choice ${l}`);if(f){let{arguments:x,name:_}=f;if(x==null)throw new P(`missing function_call.arguments for choice ${l}`);if(!_)throw new P(`missing function_call.name for choice ${l}`);return{...u,message:{content:h,function_call:{arguments:x,name:_},role:g,refusal:p.refusal??null},finish_reason:c,index:l,logprobs:m}}return v?{...u,index:l,finish_reason:c,logprobs:m,message:{...w,role:g,content:h,refusal:p.refusal??null,tool_calls:v.map((x,_)=>{let{function:A,type:D,id:B,...b}=x,{arguments:y,name:T,...R}=A||{};if(B==null)throw new P(`missing choices[${l}].tool_calls[${_}].id
${fs(t)}`);if(D==null)throw new P(`missing choices[${l}].tool_calls[${_}].type
${fs(t)}`);if(T==null)throw new P(`missing choices[${l}].tool_calls[${_}].function.name
${fs(t)}`);if(y==null)throw new P(`missing choices[${l}].tool_calls[${_}].function.arguments
${fs(t)}`);return{...b,id:B,type:D,function:{...R,name:T,arguments:y}}})}}:{...u,message:{...w,content:h,role:g,refusal:p.refusal??null},finish_reason:c,index:l,logprobs:m}}),created:i,model:s,object:"chat.completion",...n?{system_fingerprint:n}:{}};return C2(o,e)}function fs(t){return JSON.stringify(t)}var jr=class t extends R1{static fromReadableStream(e){let a=new t(null);return a._run(()=>a._fromReadableStream(e)),a}static runFunctions(e,a,r){let i=new t(null),s={...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"runFunctions"}};return i._run(()=>i._runFunctions(e,a,s)),i}static runTools(e,a,r){let i=new t(a),s={...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"runTools"}};return i._run(()=>i._runTools(e,a,s)),i}};var $r=class extends C{parse(e,a){return T2(e.tools),this._client.chat.completions.create(e,{...a,headers:{...a?.headers,"X-Stainless-Helper-Method":"beta.chat.completions.parse"}})._thenUnwrap(r=>Ur(r,e))}runFunctions(e,a){return e.stream?jr.runFunctions(this._client,e,a):qr.runFunctions(this._client,e,a)}runTools(e,a){return e.stream?jr.runTools(this._client,e,a):qr.runTools(this._client,e,a)}stream(e,a){return R1.createChatCompletion(this._client,e,a)}};var k1=class extends C{constructor(){super(...arguments),this.completions=new $r(this._client)}};(function(t){t.Completions=$r})(k1||(k1={}));var N=function(t,e,a,r){if(a==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?t!==e||!r:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return a==="m"?r:a==="a"?r.call(t):r?r.value:e.get(t)},Fe=function(t,e,a,r,i){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!i)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?t!==e||!i:!e.has(t))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?i.call(t,a):i?i.value=a:e.set(t,a),a},_e,Pd,vt,vs,tt,Ba,x1,Va,bs,Me,gs,ws,zr,Hr,Wr,k2,x2,P2,I2,D2,O2,F2,gt=class t extends E1{constructor(){super(...arguments),_e.add(this),Pd.set(this,[]),vt.set(this,{}),vs.set(this,{}),tt.set(this,void 0),Ba.set(this,void 0),x1.set(this,void 0),Va.set(this,void 0),bs.set(this,void 0),Me.set(this,void 0),gs.set(this,void 0),ws.set(this,void 0),zr.set(this,void 0)}[(Pd=new WeakMap,vt=new WeakMap,vs=new WeakMap,tt=new WeakMap,Ba=new WeakMap,x1=new WeakMap,Va=new WeakMap,bs=new WeakMap,Me=new WeakMap,gs=new WeakMap,ws=new WeakMap,zr=new WeakMap,_e=new WeakSet,Symbol.asyncIterator)](){let e=[],a=[],r=!1;return this.on("event",i=>{let s=a.shift();s?s.resolve(i):e.push(i)}),this.on("end",()=>{r=!0;for(let i of a)i.resolve(void 0);a.length=0}),this.on("abort",i=>{r=!0;for(let s of a)s.reject(i);a.length=0}),this.on("error",i=>{r=!0;for(let s of a)s.reject(i);a.length=0}),{next:async()=>e.length?{value:e.shift(),done:!1}:r?{value:void 0,done:!0}:new Promise((s,n)=>a.push({resolve:s,reject:n})).then(s=>s?{value:s,done:!1}:{value:void 0,done:!0}),return:async()=>(this.abort(),{value:void 0,done:!0})}}static fromReadableStream(e){let a=new t;return a._run(()=>a._fromReadableStream(e)),a}async _fromReadableStream(e,a){let r=a?.signal;r&&(r.aborted&&this.controller.abort(),r.addEventListener("abort",()=>this.controller.abort())),this._connected();let i=ht.fromReadableStream(e,this.controller);for await(let s of i)N(this,_e,"m",Hr).call(this,s);if(i.controller.signal?.aborted)throw new fe;return this._addRun(N(this,_e,"m",Wr).call(this))}toReadableStream(){return new ht(this[Symbol.asyncIterator].bind(this),this.controller).toReadableStream()}static createToolAssistantStream(e,a,r,i,s){let n=new t;return n._run(()=>n._runToolAssistantStream(e,a,r,i,{...s,headers:{...s?.headers,"X-Stainless-Helper-Method":"stream"}})),n}async _createToolAssistantStream(e,a,r,i,s){let n=s?.signal;n&&(n.aborted&&this.controller.abort(),n.addEventListener("abort",()=>this.controller.abort()));let d={...i,stream:!0},o=await e.submitToolOutputs(a,r,d,{...s,signal:this.controller.signal});this._connected();for await(let p of o)N(this,_e,"m",Hr).call(this,p);if(o.controller.signal?.aborted)throw new fe;return this._addRun(N(this,_e,"m",Wr).call(this))}static createThreadAssistantStream(e,a,r){let i=new t;return i._run(()=>i._threadAssistantStream(e,a,{...r,headers:{...r?.headers,"X-Stainless-Helper-Method":"stream"}})),i}static createAssistantStream(e,a,r,i){let s=new t;return s._run(()=>s._runAssistantStream(e,a,r,{...i,headers:{...i?.headers,"X-Stainless-Helper-Method":"stream"}})),s}currentEvent(){return N(this,gs,"f")}currentRun(){return N(this,ws,"f")}currentMessageSnapshot(){return N(this,tt,"f")}currentRunStepSnapshot(){return N(this,zr,"f")}async finalRunSteps(){return await this.done(),Object.values(N(this,vt,"f"))}async finalMessages(){return await this.done(),Object.values(N(this,vs,"f"))}async finalRun(){if(await this.done(),!N(this,Ba,"f"))throw Error("Final run was not received.");return N(this,Ba,"f")}async _createThreadAssistantStream(e,a,r){let i=r?.signal;i&&(i.aborted&&this.controller.abort(),i.addEventListener("abort",()=>this.controller.abort()));let s={...a,stream:!0},n=await e.createAndRun(s,{...r,signal:this.controller.signal});this._connected();for await(let d of n)N(this,_e,"m",Hr).call(this,d);if(n.controller.signal?.aborted)throw new fe;return this._addRun(N(this,_e,"m",Wr).call(this))}async _createAssistantStream(e,a,r,i){let s=i?.signal;s&&(s.aborted&&this.controller.abort(),s.addEventListener("abort",()=>this.controller.abort()));let n={...r,stream:!0},d=await e.create(a,n,{...i,signal:this.controller.signal});this._connected();for await(let o of d)N(this,_e,"m",Hr).call(this,o);if(d.controller.signal?.aborted)throw new fe;return this._addRun(N(this,_e,"m",Wr).call(this))}static accumulateDelta(e,a){for(let[r,i]of Object.entries(a)){if(!e.hasOwnProperty(r)){e[r]=i;continue}let s=e[r];if(s==null){e[r]=i;continue}if(r==="index"||r==="type"){e[r]=i;continue}if(typeof s=="string"&&typeof i=="string")s+=i;else if(typeof s=="number"&&typeof i=="number")s+=i;else if(Fr(s)&&Fr(i))s=this.accumulateDelta(s,i);else if(Array.isArray(s)&&Array.isArray(i)){if(s.every(n=>typeof n=="string"||typeof n=="number")){s.push(...i);continue}for(let n of i){if(!Fr(n))throw new Error(`Expected array delta entry to be an object but got: ${n}`);let d=n.index;if(d==null)throw console.error(n),new Error("Expected array delta entry to have an `index` property");if(typeof d!="number")throw new Error(`Expected array delta entry \`index\` property to be a number but got ${d}`);let o=s[d];o==null?s.push(n):s[d]=this.accumulateDelta(o,n)}continue}else throw Error(`Unhandled record type: ${r}, deltaValue: ${i}, accValue: ${s}`);e[r]=s}return e}_addRun(e){return e}async _threadAssistantStream(e,a,r){return await this._createThreadAssistantStream(a,e,r)}async _runAssistantStream(e,a,r,i){return await this._createAssistantStream(a,e,r,i)}async _runToolAssistantStream(e,a,r,i,s){return await this._createToolAssistantStream(r,e,a,i,s)}};Hr=function(e){if(!this.ended)switch(Fe(this,gs,e,"f"),N(this,_e,"m",P2).call(this,e),e.event){case"thread.created":break;case"thread.run.created":case"thread.run.queued":case"thread.run.in_progress":case"thread.run.requires_action":case"thread.run.completed":case"thread.run.failed":case"thread.run.cancelling":case"thread.run.cancelled":case"thread.run.expired":N(this,_e,"m",F2).call(this,e);break;case"thread.run.step.created":case"thread.run.step.in_progress":case"thread.run.step.delta":case"thread.run.step.completed":case"thread.run.step.failed":case"thread.run.step.cancelled":case"thread.run.step.expired":N(this,_e,"m",x2).call(this,e);break;case"thread.message.created":case"thread.message.in_progress":case"thread.message.delta":case"thread.message.completed":case"thread.message.incomplete":N(this,_e,"m",k2).call(this,e);break;case"error":throw new Error("Encountered an error event in event processing - errors should be processed earlier")}},Wr=function(){if(this.ended)throw new P("stream has ended, this shouldn't happen");if(!N(this,Ba,"f"))throw Error("Final run has not been received");return N(this,Ba,"f")},k2=function(e){let[a,r]=N(this,_e,"m",D2).call(this,e,N(this,tt,"f"));Fe(this,tt,a,"f"),N(this,vs,"f")[a.id]=a;for(let i of r){let s=a.content[i.index];s?.type=="text"&&this._emit("textCreated",s.text)}switch(e.event){case"thread.message.created":this._emit("messageCreated",e.data);break;case"thread.message.in_progress":break;case"thread.message.delta":if(this._emit("messageDelta",e.data.delta,a),e.data.delta.content)for(let i of e.data.delta.content){if(i.type=="text"&&i.text){let s=i.text,n=a.content[i.index];if(n&&n.type=="text")this._emit("textDelta",s,n.text);else throw Error("The snapshot associated with this text delta is not text or missing")}if(i.index!=N(this,x1,"f")){if(N(this,Va,"f"))switch(N(this,Va,"f").type){case"text":this._emit("textDone",N(this,Va,"f").text,N(this,tt,"f"));break;case"image_file":this._emit("imageFileDone",N(this,Va,"f").image_file,N(this,tt,"f"));break}Fe(this,x1,i.index,"f")}Fe(this,Va,a.content[i.index],"f")}break;case"thread.message.completed":case"thread.message.incomplete":if(N(this,x1,"f")!==void 0){let i=e.data.content[N(this,x1,"f")];if(i)switch(i.type){case"image_file":this._emit("imageFileDone",i.image_file,N(this,tt,"f"));break;case"text":this._emit("textDone",i.text,N(this,tt,"f"));break}}N(this,tt,"f")&&this._emit("messageDone",e.data),Fe(this,tt,void 0,"f")}},x2=function(e){let a=N(this,_e,"m",I2).call(this,e);switch(Fe(this,zr,a,"f"),e.event){case"thread.run.step.created":this._emit("runStepCreated",e.data);break;case"thread.run.step.delta":let r=e.data.delta;if(r.step_details&&r.step_details.type=="tool_calls"&&r.step_details.tool_calls&&a.step_details.type=="tool_calls")for(let s of r.step_details.tool_calls)s.index==N(this,bs,"f")?this._emit("toolCallDelta",s,a.step_details.tool_calls[s.index]):(N(this,Me,"f")&&this._emit("toolCallDone",N(this,Me,"f")),Fe(this,bs,s.index,"f"),Fe(this,Me,a.step_details.tool_calls[s.index],"f"),N(this,Me,"f")&&this._emit("toolCallCreated",N(this,Me,"f")));this._emit("runStepDelta",e.data.delta,a);break;case"thread.run.step.completed":case"thread.run.step.failed":case"thread.run.step.cancelled":case"thread.run.step.expired":Fe(this,zr,void 0,"f"),e.data.step_details.type=="tool_calls"&&N(this,Me,"f")&&(this._emit("toolCallDone",N(this,Me,"f")),Fe(this,Me,void 0,"f")),this._emit("runStepDone",e.data,a);break;case"thread.run.step.in_progress":break}},P2=function(e){N(this,Pd,"f").push(e),this._emit("event",e)},I2=function(e){switch(e.event){case"thread.run.step.created":return N(this,vt,"f")[e.data.id]=e.data,e.data;case"thread.run.step.delta":let a=N(this,vt,"f")[e.data.id];if(!a)throw Error("Received a RunStepDelta before creation of a snapshot");let r=e.data;if(r.delta){let i=gt.accumulateDelta(a,r.delta);N(this,vt,"f")[e.data.id]=i}return N(this,vt,"f")[e.data.id];case"thread.run.step.completed":case"thread.run.step.failed":case"thread.run.step.cancelled":case"thread.run.step.expired":case"thread.run.step.in_progress":N(this,vt,"f")[e.data.id]=e.data;break}if(N(this,vt,"f")[e.data.id])return N(this,vt,"f")[e.data.id];throw new Error("No snapshot available")},D2=function(e,a){let r=[];switch(e.event){case"thread.message.created":return[e.data,r];case"thread.message.delta":if(!a)throw Error("Received a delta with no existing snapshot (there should be one from message creation)");let i=e.data;if(i.delta.content)for(let s of i.delta.content)if(s.index in a.content){let n=a.content[s.index];a.content[s.index]=N(this,_e,"m",O2).call(this,s,n)}else a.content[s.index]=s,r.push(s);return[a,r];case"thread.message.in_progress":case"thread.message.completed":case"thread.message.incomplete":if(a)return[a,r];throw Error("Received thread message event with no existing snapshot")}throw Error("Tried to accumulate a non-message event")},O2=function(e,a){return gt.accumulateDelta(a,e)},F2=function(e){switch(Fe(this,ws,e.data,"f"),e.event){case"thread.run.created":break;case"thread.run.queued":break;case"thread.run.in_progress":break;case"thread.run.requires_action":case"thread.run.cancelled":case"thread.run.failed":case"thread.run.completed":case"thread.run.expired":Fe(this,Ba,e.data,"f"),N(this,Me,"f")&&(this._emit("toolCallDone",N(this,Me,"f")),Fe(this,Me,void 0,"f"));break;case"thread.run.cancelling":break}};var La=class extends C{create(e,a,r){return this._client.post(`/threads/${e}/messages`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}retrieve(e,a,r){return this._client.get(`/threads/${e}/messages/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}update(e,a,r,i){return this._client.post(`/threads/${e}/messages/${a}`,{body:r,...i,headers:{"OpenAI-Beta":"assistants=v2",...i?.headers}})}list(e,a={},r){return W(a)?this.list(e,{},a):this._client.getAPIList(`/threads/${e}/messages`,P1,{query:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}del(e,a,r){return this._client.delete(`/threads/${e}/messages/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}},P1=class extends K{};La.MessagesPage=P1;var Ua=class extends C{retrieve(e,a,r,i={},s){return W(i)?this.retrieve(e,a,r,{},i):this._client.get(`/threads/${e}/runs/${a}/steps/${r}`,{query:i,...s,headers:{"OpenAI-Beta":"assistants=v2",...s?.headers}})}list(e,a,r={},i){return W(r)?this.list(e,a,{},r):this._client.getAPIList(`/threads/${e}/runs/${a}/steps`,I1,{query:r,...i,headers:{"OpenAI-Beta":"assistants=v2",...i?.headers}})}},I1=class extends K{};Ua.RunStepsPage=I1;var Lt=class extends C{constructor(){super(...arguments),this.steps=new Ua(this._client)}create(e,a,r){let{include:i,...s}=a;return this._client.post(`/threads/${e}/runs`,{query:{include:i},body:s,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers},stream:a.stream??!1})}retrieve(e,a,r){return this._client.get(`/threads/${e}/runs/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}update(e,a,r,i){return this._client.post(`/threads/${e}/runs/${a}`,{body:r,...i,headers:{"OpenAI-Beta":"assistants=v2",...i?.headers}})}list(e,a={},r){return W(a)?this.list(e,{},a):this._client.getAPIList(`/threads/${e}/runs`,D1,{query:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}cancel(e,a,r){return this._client.post(`/threads/${e}/runs/${a}/cancel`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}async createAndPoll(e,a,r){let i=await this.create(e,a,r);return await this.poll(e,i.id,r)}createAndStream(e,a,r){return gt.createAssistantStream(e,this._client.beta.threads.runs,a,r)}async poll(e,a,r){let i={...r?.headers,"X-Stainless-Poll-Helper":"true"};for(r?.pollIntervalMs&&(i["X-Stainless-Custom-Poll-Interval"]=r.pollIntervalMs.toString());;){let{data:s,response:n}=await this.retrieve(e,a,{...r,headers:{...r?.headers,...i}}).withResponse();switch(s.status){case"queued":case"in_progress":case"cancelling":let d=5e3;if(r?.pollIntervalMs)d=r.pollIntervalMs;else{let o=n.headers.get("openai-poll-after-ms");if(o){let p=parseInt(o);isNaN(p)||(d=p)}}await Mt(d);break;case"requires_action":case"incomplete":case"cancelled":case"completed":case"failed":case"expired":return s}}}stream(e,a,r){return gt.createAssistantStream(e,this._client.beta.threads.runs,a,r)}submitToolOutputs(e,a,r,i){return this._client.post(`/threads/${e}/runs/${a}/submit_tool_outputs`,{body:r,...i,headers:{"OpenAI-Beta":"assistants=v2",...i?.headers},stream:r.stream??!1})}async submitToolOutputsAndPoll(e,a,r,i){let s=await this.submitToolOutputs(e,a,r,i);return await this.poll(e,s.id,i)}submitToolOutputsStream(e,a,r,i){return gt.createToolAssistantStream(e,a,this._client.beta.threads.runs,r,i)}},D1=class extends K{};Lt.RunsPage=D1;Lt.Steps=Ua;Lt.RunStepsPage=I1;var wt=class extends C{constructor(){super(...arguments),this.runs=new Lt(this._client),this.messages=new La(this._client)}create(e={},a){return W(e)?this.create({},e):this._client.post("/threads",{body:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}retrieve(e,a){return this._client.get(`/threads/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}update(e,a,r){return this._client.post(`/threads/${e}`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}del(e,a){return this._client.delete(`/threads/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}createAndRun(e,a){return this._client.post("/threads/runs",{body:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers},stream:e.stream??!1})}async createAndRunPoll(e,a){let r=await this.createAndRun(e,a);return await this.runs.poll(r.thread_id,r.id,a)}createAndRunStream(e,a){return gt.createThreadAssistantStream(e,this._client.beta.threads,a)}};wt.Runs=Lt;wt.RunsPage=D1;wt.Messages=La;wt.MessagesPage=P1;var M2=async t=>{let e=await Promise.allSettled(t),a=e.filter(i=>i.status==="rejected");if(a.length){for(let i of a)console.error(i.reason);throw new Error(`${a.length} promise(s) failed - see the above errors`)}let r=[];for(let i of e)i.status==="fulfilled"&&r.push(i.value);return r};var qa=class extends C{create(e,a,r){return this._client.post(`/vector_stores/${e}/files`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}retrieve(e,a,r){return this._client.get(`/vector_stores/${e}/files/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}list(e,a={},r){return W(a)?this.list(e,{},a):this._client.getAPIList(`/vector_stores/${e}/files`,oa,{query:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}del(e,a,r){return this._client.delete(`/vector_stores/${e}/files/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}async createAndPoll(e,a,r){let i=await this.create(e,a,r);return await this.poll(e,i.id,r)}async poll(e,a,r){let i={...r?.headers,"X-Stainless-Poll-Helper":"true"};for(r?.pollIntervalMs&&(i["X-Stainless-Custom-Poll-Interval"]=r.pollIntervalMs.toString());;){let s=await this.retrieve(e,a,{...r,headers:i}).withResponse(),n=s.data;switch(n.status){case"in_progress":let d=5e3;if(r?.pollIntervalMs)d=r.pollIntervalMs;else{let o=s.response.headers.get("openai-poll-after-ms");if(o){let p=parseInt(o);isNaN(p)||(d=p)}}await Mt(d);break;case"failed":case"completed":return n}}}async upload(e,a,r){let i=await this._client.files.create({file:a,purpose:"assistants"},r);return this.create(e,{file_id:i.id},r)}async uploadAndPoll(e,a,r){let i=await this.upload(e,a,r);return await this.poll(e,i.id,r)}},oa=class extends K{};qa.VectorStoreFilesPage=oa;var O1=class extends C{create(e,a,r){return this._client.post(`/vector_stores/${e}/file_batches`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}retrieve(e,a,r){return this._client.get(`/vector_stores/${e}/file_batches/${a}`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}cancel(e,a,r){return this._client.post(`/vector_stores/${e}/file_batches/${a}/cancel`,{...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}async createAndPoll(e,a,r){let i=await this.create(e,a);return await this.poll(e,i.id,r)}listFiles(e,a,r={},i){return W(r)?this.listFiles(e,a,{},r):this._client.getAPIList(`/vector_stores/${e}/file_batches/${a}/files`,oa,{query:r,...i,headers:{"OpenAI-Beta":"assistants=v2",...i?.headers}})}async poll(e,a,r){let i={...r?.headers,"X-Stainless-Poll-Helper":"true"};for(r?.pollIntervalMs&&(i["X-Stainless-Custom-Poll-Interval"]=r.pollIntervalMs.toString());;){let{data:s,response:n}=await this.retrieve(e,a,{...r,headers:i}).withResponse();switch(s.status){case"in_progress":let d=5e3;if(r?.pollIntervalMs)d=r.pollIntervalMs;else{let o=n.headers.get("openai-poll-after-ms");if(o){let p=parseInt(o);isNaN(p)||(d=p)}}await Mt(d);break;case"failed":case"cancelled":case"completed":return s}}}async uploadAndPoll(e,{files:a,fileIds:r=[]},i){if(a==null||a.length==0)throw new Error("No `files` provided to process. If you've already uploaded files you should use `.createAndPoll()` instead");let s=i?.maxConcurrency??5,n=Math.min(s,a.length),d=this._client,o=a.values(),p=[...r];async function c(m){for(let u of m){let h=await d.files.create({file:u,purpose:"assistants"},i);p.push(h.id)}}let l=Array(n).fill(o).map(c);return await M2(l),await this.createAndPoll(e,{file_ids:p})}};var bt=class extends C{constructor(){super(...arguments),this.files=new qa(this._client),this.fileBatches=new O1(this._client)}create(e,a){return this._client.post("/vector_stores",{body:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}retrieve(e,a){return this._client.get(`/vector_stores/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}update(e,a,r){return this._client.post(`/vector_stores/${e}`,{body:a,...r,headers:{"OpenAI-Beta":"assistants=v2",...r?.headers}})}list(e={},a){return W(e)?this.list({},e):this._client.getAPIList("/vector_stores",F1,{query:e,...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}del(e,a){return this._client.delete(`/vector_stores/${e}`,{...a,headers:{"OpenAI-Beta":"assistants=v2",...a?.headers}})}},F1=class extends K{};bt.VectorStoresPage=F1;bt.Files=qa;bt.VectorStoreFilesPage=oa;bt.FileBatches=O1;var $e=class extends C{constructor(){super(...arguments),this.vectorStores=new bt(this._client),this.chat=new k1(this._client),this.assistants=new Fa(this._client),this.threads=new wt(this._client)}};$e.VectorStores=bt;$e.VectorStoresPage=F1;$e.Assistants=Fa;$e.AssistantsPage=S1;$e.Threads=wt;var ja=class extends C{create(e,a){return this._client.post("/completions",{body:e,...a,stream:e.stream??!1})}};var $a=class extends C{create(e,a){return this._client.post("/embeddings",{body:e,...a})}};var pa=class extends C{create(e,a){return this._client.post("/files",je({body:e,...a}))}retrieve(e,a){return this._client.get(`/files/${e}`,a)}list(e={},a){return W(e)?this.list({},e):this._client.getAPIList("/files",Ha,{query:e,...a})}del(e,a){return this._client.delete(`/files/${e}`,a)}content(e,a){return this._client.get(`/files/${e}/content`,{...a,__binaryResponse:!0})}retrieveContent(e,a){return this._client.get(`/files/${e}/content`,{...a,headers:{Accept:"application/json",...a?.headers}})}async waitForProcessing(e,{pollInterval:a=5e3,maxWait:r=30*60*1e3}={}){let i=new Set(["processed","error","deleted"]),s=Date.now(),n=await this.retrieve(e);for(;!n.status||!i.has(n.status);)if(await Mt(a),n=await this.retrieve(e),Date.now()-s>r)throw new ra({message:`Giving up on waiting for file ${e} to finish processing after ${r} milliseconds.`});return n}},Ha=class extends K{};pa.FileObjectsPage=Ha;var Wa=class extends C{list(e,a={},r){return W(a)?this.list(e,{},a):this._client.getAPIList(`/fine_tuning/jobs/${e}/checkpoints`,M1,{query:a,...r})}},M1=class extends K{};Wa.FineTuningJobCheckpointsPage=M1;var yt=class extends C{constructor(){super(...arguments),this.checkpoints=new Wa(this._client)}create(e,a){return this._client.post("/fine_tuning/jobs",{body:e,...a})}retrieve(e,a){return this._client.get(`/fine_tuning/jobs/${e}`,a)}list(e={},a){return W(e)?this.list({},e):this._client.getAPIList("/fine_tuning/jobs",V1,{query:e,...a})}cancel(e,a){return this._client.post(`/fine_tuning/jobs/${e}/cancel`,a)}listEvents(e,a={},r){return W(a)?this.listEvents(e,{},a):this._client.getAPIList(`/fine_tuning/jobs/${e}/events`,B1,{query:a,...r})}},V1=class extends K{},B1=class extends K{};yt.FineTuningJobsPage=V1;yt.FineTuningJobEventsPage=B1;yt.Checkpoints=Wa;yt.FineTuningJobCheckpointsPage=M1;var _t=class extends C{constructor(){super(...arguments),this.jobs=new yt(this._client)}};_t.Jobs=yt;_t.FineTuningJobsPage=V1;_t.FineTuningJobEventsPage=B1;var za=class extends C{createVariation(e,a){return this._client.post("/images/variations",je({body:e,...a}))}edit(e,a){return this._client.post("/images/edits",je({body:e,...a}))}generate(e,a){return this._client.post("/images/generations",{body:e,...a})}};var la=class extends C{retrieve(e,a){return this._client.get(`/models/${e}`,a)}list(e){return this._client.getAPIList("/models",Ga,e)}del(e,a){return this._client.delete(`/models/${e}`,a)}},Ga=class extends ns{};la.ModelsPage=Ga;var Xa=class extends C{create(e,a){return this._client.post("/moderations",{body:e,...a})}};var L1=class extends C{create(e,a,r){return this._client.post(`/uploads/${e}/parts`,je({body:a,...r}))}};var ma=class extends C{constructor(){super(...arguments),this.parts=new L1(this._client)}create(e,a){return this._client.post("/uploads",{body:e,...a})}cancel(e,a){return this._client.post(`/uploads/${e}/cancel`,a)}complete(e,a,r){return this._client.post(`/uploads/${e}/complete`,{body:a,...r})}};ma.Parts=L1;var V2,M=class extends ss{constructor({baseURL:e=Or("OPENAI_BASE_URL"),apiKey:a=Or("OPENAI_API_KEY"),organization:r=Or("OPENAI_ORG_ID")??null,project:i=Or("OPENAI_PROJECT_ID")??null,...s}={}){if(a===void 0)throw new P("The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).");let n={apiKey:a,organization:r,project:i,...s,baseURL:e||"https://api.openai.com/v1"};if(!n.dangerouslyAllowBrowser&&_2())throw new P(`It looks like you're running in a browser-like environment.

This is disabled by default, as it risks exposing your secret API credentials to attackers.
If you understand the risks and have appropriate mitigations in place,
you can set the \`dangerouslyAllowBrowser\` option to \`true\`, e.g.,

new OpenAI({ apiKey, dangerouslyAllowBrowser: true });

https://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety
`);super({baseURL:n.baseURL,timeout:n.timeout??6e5,httpAgent:n.httpAgent,maxRetries:n.maxRetries,fetch:n.fetch}),this.completions=new ja(this),this.chat=new ia(this),this.embeddings=new $a(this),this.files=new pa(this),this.images=new za(this),this.audio=new ft(this),this.moderations=new Xa(this),this.models=new la(this),this.fineTuning=new _t(this),this.beta=new $e(this),this.batches=new sa(this),this.uploads=new ma(this),this._options=n,this.apiKey=a,this.organization=r,this.project=i}defaultQuery(){return this._options.defaultQuery}defaultHeaders(e){return{...super.defaultHeaders(e),"OpenAI-Organization":this.organization,"OpenAI-Project":this.project,...this._options.defaultHeaders}}authHeaders(e){return{Authorization:`Bearer ${this.apiKey}`}}stringifyQuery(e){return Hs(e,{arrayFormat:"brackets"})}};V2=M;M.OpenAI=V2;M.DEFAULT_TIMEOUT=6e5;M.OpenAIError=P;M.APIError=me;M.APIConnectionError=aa;M.APIConnectionTimeoutError=ra;M.APIUserAbortError=fe;M.NotFoundError=Ar;M.ConflictError=Rr;M.RateLimitError=xr;M.BadRequestError=Er;M.AuthenticationError=Tr;M.InternalServerError=Pr;M.PermissionDeniedError=Nr;M.UnprocessableEntityError=kr;M.toFile=od;M.fileFromPath=ri;M.Completions=ja;M.Chat=ia;M.Embeddings=$a;M.Files=pa;M.FileObjectsPage=Ha;M.Images=za;M.Audio=ft;M.Moderations=Xa;M.Models=la;M.ModelsPage=Ga;M.FineTuning=_t;M.Beta=$e;M.Batches=sa;M.BatchesPage=Oa;M.Uploads=ma;var B2=M;var Gr=oe(require("vscode"));var ys=oe(require("vscode")),z=class t{constructor(e){this.version=e}static instance_=void 0;static disabledInSession=!1;static URLs=["https://www.3plex.unito.it/snakemaker","http://192.168.99.164/snakemaker"];URL="";static async initialize(e){ys.workspace.getConfiguration("snakemaker").get("allowLogging",!1)&&t.createInstance(e),ys.workspace.onDidChangeConfiguration(r=>{r.affectsConfiguration("snakemaker.allowLogging")&&(ys.workspace.getConfiguration("snakemaker").get("allowLogging",!1)?t.createInstance(e):t.destroy())})}static async createInstance(e){if(t.instance_)throw new Error("Logger already initialized");let a;for(let r of t.URLs){a=new t(e),a.session_key=Math.random().toString(36).substring(2,15)+Math.random().toString(36).substring(2,15),a.URL=r;try{let i=await a.callAPI("/new_session",{});console.log(i),a.session_confirmation_key=i.confirmation_key||"",t.instance_=a,t.disabledInSession=!1;break}catch{t.instance_=void 0}}}static destroy(){t.disabledInSession=!1,t.instance_=void 0}static instance(){return t.instance_}static loggerStatus(){return t.disabledInSession?"Disabled_in_current_session":t.instance_?"Enabled":"Disabled"}session_key="";session_timestamp=Date.now();session_confirmation_key="";async callAPI(e,a){return a.session_key=this.session_key,a.timestamp=this.session_timestamp,a.extension_version=this.version,a.session_confirmation_key=this.session_confirmation_key,fetch(this.URL+e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}).then(r=>r.ok?r.json():null).catch(r=>(console.log(r),null))}async disableInSession(){return t.disabledInSession=!0,this.callAPI("/log/delete_all_logs",{}).then(()=>!0).catch(()=>!1).finally(()=>{t.instance_=void 0})}addCommand(e){try{this.callAPI("/log/add_command",{command:e.getCommand(),index:e.getIndex()})}catch(a){console.log(a)}}addCommandExisting(e,a){try{this.callAPI("/log/add_command_existing",{command:e.getCommand(),new_command:a,index:e.getIndex()})}catch(r){console.log(r)}}commandDetails(e,a=!1){try{this.callAPI("/log/command_details",{command:e.getCommand(),manual:a,input:e.getInput(),output:e.getOutput(),rule_name:e.getRuleName(),index:e.getIndex()})}catch(r){console.log(r)}}setCommandImportance(e,a){try{this.callAPI("/log/set_command_importance",{command:e.getCommand(),importance:a,index:e.getIndex()})}catch(r){console.log(r)}}moveCommands(e,a){try{this.callAPI("/log/move_commands",{commands:e.map(r=>[r?.getCommand(),r?.getIndex(),r?.getInput(),r?.getOutput(),r?.getRuleName()]),finished:a})}catch(r){console.log(r)}}imported(e){try{this.callAPI("/log/imported",{commands:e.map(a=>[a.getCommand(),a.getIndex(),a.getInput(),a.getOutput(),a.getRuleName()])})}catch(a){console.log(a)}}importedFromChat(e){try{this.callAPI("/log/imported_chat",{commands:e.map(a=>[a.getCommand(),a.getIndex(),a.getInput(),a.getOutput(),a.getRuleName()])})}catch(a){console.log(a)}}log(e){try{this.callAPI("/log/log",{value:e})}catch(a){console.log(a)}}query(e,a,r){try{this.callAPI("/log/query",{model:e,query:a,response:r})}catch(i){console.log(i)}}};var _s=class{constructor(e){this.memento=e;this.current_model=-1,this.models=this.loadModels()}models;current_model;current_model_id=void 0;copilotActive=!1;isCopilotWaiting=!0;async runQuery(e){let a=0;if(this.isCopilotWaiting)for(;this.current_model===-1;)await new Promise(r=>setTimeout(r,3e3)),z.instance()?.log("User tried running query but copilot still unactive and no model selected - sleeping");for(;this.current_model===-1&&a<15;)await new Promise(r=>setTimeout(r,1e3)),a+=1;if(this.current_model===-1)throw z.instance()?.log(`User tried running query but no model selected:
`+e),new Error("No model currently selected - please select a model to use Snakemaker");return this.models[this.current_model].runQuery(e).then(r=>(z.instance()?.query(this.models[this.current_model].getName(),e,r),r))}async useModel(e,a=!1){let r=this.models.findIndex(s=>s.getId()===e);if(r===-1||r===this.current_model)throw new Error("Model not found");a||Gr.window.showInformationMessage("Activating model: "+this.models[r].getName()+"...");let i=await this.models[r].runQuery("You are part of a vscode extension that helps users write snakemake (or Make) rules from bash prompts - the user just selected you as the model of choice. Say Hi to the user! :) (please keep very short, you are in a small window - please do not ask questions to the user, he cannot respond)");return this.current_model=r,this.memento.update("current_model",e),i}isCopilotActive(){return this.copilotActive}activateCopilot(e){if(e.length===0||this.copilotActive===!0)return-1;e=e.filter(r=>r.id.indexOf("gpt-3.5")===-1);let a=e.map(r=>new Id(r));this.models=this.models.concat(a),this.copilotActive=!0}addModel(e,a,r,i){let s=new Ss(e,a,r,i);this.models=[s].concat(this.models),this.current_model+=1,this.exportModels()}exportModels(){let e=this.models.filter(a=>a.isUserAdded()).map(a=>a.export());this.memento.update("models",e)}loadModels(){return this.memento.get("models",[]).map(e=>{let a=JSON.parse(e);if(a)return new Ss(a.url,a.apiKey,a.model,a.max_tokens)}).filter(e=>e!==void 0)}deleteModel(e){let a=this.models.findIndex(r=>r.getId()===e);if(a===-1)return!1;this.models.splice(a,1),a===this.current_model?this.current_model=-1:a<this.current_model&&(this.current_model-=1),this.exportModels()}},Id=class{userPrompt="You are part of a vscode extension that records user bash commands and help producing snakemake (or Make) rules.";model;constructor(e){this.model=e}async runQuery(e){let a=[Gr.LanguageModelChatMessage.User(this.userPrompt),Gr.LanguageModelChatMessage.User(e)],r=await this.model.sendRequest(a,{});var i="";for await(let s of r.text)i+=s;return i=i.replace(/```python/g,""),i=i.replace(/```/g,""),i}isUserAdded(){return!1}getName(){return"Copilot - "+this.model.id}getParams(){return[]}setParams(e,a){}getId(){return this.model.id}export(){return""}},Ss=class{url;apiKey;model;name;id;max_tokens;constructor(e,a,r,i){this.url=e,this.apiKey=a,this.model=r,this.name=r+"-max_t_"+i,this.max_tokens=i,this.id=new Date().getTime()+r}getName(){return this.name}getParams(){return[]}setParams(e,a){}getId(){return this.id}isUserAdded(){return!0}export(){return JSON.stringify({url:this.url,apiKey:this.apiKey,model:this.model,max_tokens:this.max_tokens})}async runQuery(e){let r=await new B2({apiKey:this.apiKey,baseURL:this.url}).chat.completions.create({model:this.model,messages:[{role:"user",content:e}],temperature:.5,top_p:1,max_tokens:this.max_tokens,stream:!0});var i="";for await(let s of r)i+=s.choices[0]?.delta?.content||"";return i}};var L2=oe(require("vscode")),ua=class{constructor(e,a,r){this.message=e;this.reader_cell=a;this.variable=r}},Xr=class{constructor(e,a,r){this.oldState=e;this.newState=a;this.error=r}},Dd=class{cells;constructor(e){this.cells=e.map(a=>({code:a.join(""),reads:[],reads_file:[],writes:[],imports:[],isFunctions:!1,declares:[],dependsOn:{},calls:[],dependsOnFunction:{},missingDependencies:[]}))}setDependency(e,a,r,i,s){this.cells[e].reads=a,this.cells[e].reads_file=r,this.cells[e].writes=i,this.cells[e].imports=s}parseImports(){let e=/^(import\s+[^\s]+(?:\s+as\s+[^\s]+)?|from\s+[^\s]+\s+import\s+[^\s]+(?:\s+as\s+[^\s]+)?)/,a=new Set;for(let r=0;r<this.cells.length;r++){let i=this.cells[r],n=i.code.split(/[\n;]/).filter(d=>e.test(d.trim())?(a.add(d.trim()),!1):!0);i.code=n.join(`
`)}return Array.from(a)}findGlobalFunctions(e){let a=e.split(`
`),r=[],i=null,s=0;for(let n=0;n<a.length;n++){let d=a[n],o=d.match(/^def\s+([A-Za-z_]\w*)\s*\(.*\)\s*:/);o?(i&&r.push(i),i={name:o[1],content:d+`
`},s=d.search(/\S|$/)):i&&(d.search(/\S|$/)<=s&&d.trim()!==""?(r.push(i),i=null):i&&(i.content+=d+`
`))}return i&&r.push(i),r}parseFunctions(){let e=this.cells.map(i=>this.findGlobalFunctions(i.code)),a=0,r=0;for(;a<e.length;){let i=e[a],s=this.cells[r];if(i.length===0){a++,r++;continue}i.forEach(n=>{s.code=s.code.replace(n.content,"")}),this.cells.splice(r,0,{code:i.map(n=>n.content).join(""),reads:[],reads_file:[],writes:[],imports:[],isFunctions:!0,declares:i.map(n=>n.name),dependsOn:{},calls:[],dependsOnFunction:{},missingDependencies:[]}),r+=2,a++}}makeFunctionsIndependent(){for(let e=0;e<this.cells.length;e++){if(!this.cells[e].isFunctions)continue;let a=this.cells[e],r=a.reads,i=r.map(s=>`__${s.toLowerCase()}__`);a.declares.forEach((s,n)=>{a.writes.includes(s)&&(a.writes=a.writes.filter(d=>d!==s));for(let d=e+1;d<this.cells.length;d++)this.cells[d].reads.includes(s)&&(this.cells[d].reads=this.cells[d].reads.filter(o=>o!==s))});for(let s=0;s<r.length;s++)a.code=a.code.replace(r[s],i[s]);if(i.length>0){a.declares.forEach((s,n)=>{let d=new RegExp(`\\b${s}\\(([^)]*)\\)`,"g");a.code=a.code.replace(d,(o,p)=>o.replace(p,p+", "+i.join(", ")))});for(let s=e+1;s<this.cells.length;s++){let n=this.cells[s];n.isFunctions||a.declares.forEach((d,o)=>{let p=new RegExp(`\\b${d}\\(([^)]*)\\)`,"g");n.code.match(p)&&(n.calls.push(d),n.dependsOnFunction[d]=e,n.reads.push(...r),n.reads=[...new Set(n.reads)],n.code=n.code.replace(p,(c,l)=>c.replace(l,l+", "+r.join(", "))))})}a.reads=[]}}this.cells=this.cells.filter(e=>e.code.length>1)}buildDependencyGraph(){let e=this.cells.map(()=>({}));this.cells.forEach((a,r)=>{a.dependsOn={},a.missingDependencies=[],r>0&&(a.reads.forEach(i=>{e[r-1][i]!==void 0?a.dependsOn[i]=e[r-1][i]:a.writes.includes(i)||a.missingDependencies.push(i)}),Object.keys(e[r-1]).forEach(i=>{e[r][i]=e[r-1][i]})),a.writes.forEach(i=>{e[r][i]=r})})}},Od=class{constructor(e){this.code=e}prefixCode="";postfixCode="";exportsTo={};saveFiles=[];readFiles=[]},Cs=class{constructor(e,a,r,i){this.isLoading=e;this.cell=a;this.type=r;this.name=i;this.cell.isFunctions&&(this.can_become={rule:!1,script:!0,undecided:!1}),this.ruleAdditionalInfo=new Od(a.code)}can_become={rule:!0,script:!0,undecided:!0};import_dependencies={};rule_dependencies={};undecided_dependencies={};ruleAdditionalInfo;getType(){return this.type}addDependency(e,a){let r=this.type;return a.type==="rule"?this.rule_dependencies[e]=a:a.type==="script"?this.import_dependencies[e]=a:this.undecided_dependencies[e]=a,this.updateCanBecome(),this.updateType(),this.type!==r}updateDependencies(){let e=[...Object.keys(this.import_dependencies),...Object.keys(this.rule_dependencies),...Object.keys(this.undecided_dependencies)],a=[...Object.values(this.import_dependencies),...Object.values(this.rule_dependencies),...Object.values(this.undecided_dependencies)];this.rule_dependencies={},this.import_dependencies={},this.undecided_dependencies={},e.forEach((r,i)=>{a[i].type==="rule"?this.rule_dependencies[r]=a[i]:a[i].type==="script"?this.import_dependencies[r]=a[i]:this.undecided_dependencies[r]=a[i]}),this.updateCanBecome(),this.updateType()}updateCanBecome(){if(this.cell.isFunctions){this.can_become={rule:!1,script:!0,undecided:!1};return}this.can_become={rule:!0,script:!0,undecided:!0},Object.keys(this.rule_dependencies).length>0?this.can_become={rule:!0,script:!1,undecided:!1}:Object.keys(this.undecided_dependencies).length>0&&(this.can_become={rule:!0,script:!1,undecided:!0})}updateType(){if(!this.can_become[this.type]){if(this.can_become.undecided){this.type="undecided";return}if(this.can_become.rule){this.type="rule";return}this.type="script"}}setType(e){if(this.can_become[e]===!1)throw new Xr(this.type,e,"This node can't become this type");this.type=e}},Fd=class{nodes;constructor(e){this.nodes=[],this.buildFromDependencyGraph(e)}buildAdditionalInfo(){this.nodes.forEach((e,a)=>{Object.entries(e.rule_dependencies).forEach(([r,i])=>{i.ruleAdditionalInfo.exportsTo[r]===void 0?i.ruleAdditionalInfo.exportsTo[r]=[this.nodes[a]]:i.ruleAdditionalInfo.exportsTo[r].push(this.nodes[a])})})}buildFromDependencyGraph(e,a=0){let r=this.nodes;a>0&&a<this.nodes.length&&(r=this.nodes.slice(0,a));for(let i=a;i<e.cells.length;i++){let s=e.cells[i];if(s.isFunctions){r.push(new Cs(!1,s,"script",""));continue}let n=new Cs(!1,s,"undecided","");Object.keys(s.dependsOn).forEach(d=>{n.addDependency(d,r[s.dependsOn[d]])}),r.push(n)}this.nodes=r}setNodeDetails(e,a,r){this.nodes[e].name=a,this.nodes[e].setType(r);for(let i=e+1;i<this.nodes.length;i++)this.nodes[i].updateDependencies()}async guessGraphTypesAndNames(e,a=0){for(let r=a;r<e.rules.length;r++){let i=e.rules[r];try{let s=i.rule_name||this.nodes[i.cell_index].name;this.setNodeDetails(i.cell_index,s,i.type)}catch{}}}},Es=class{constructor(e,a){this.path=e;this.llm=a}cells;rulesGraph;async openNotebook(){let e=await L2.workspace.openTextDocument(this.path),r=(await JSON.parse(e.getText())).cells.filter(i=>i.cell_type==="code").map(i=>i.source);return this.cells=new Dd(r),this.cells.parseFunctions(),await this.parseImportsFromCells(),await this.setDependenciesForCells(),this.cells.makeFunctionsIndependent(),this.cells.buildDependencyGraph(),this.cells}async updateRule(e,a){if(e.ruleAdditionalInfo.saveFiles.length>0){let r=`I have this Python script:
`+e.ruleAdditionalInfo.postfixCode+`

Can you tell me the list of files that this script writes? If it writes none, then return an empty list.Plase return it in JSON format following this schema:
{ 'written_filenames': ['list of filenames for the saved files'] }`,i=await this.llm.runQuery(r),s=this.parseJsonFromResponse(i);e.ruleAdditionalInfo.saveFiles=s.written_filenames}this.rulesGraph&&(this.rulesGraph.nodes[a].cell.code=e.cell.code,this.rulesGraph.nodes[a].ruleAdditionalInfo=e.ruleAdditionalInfo)}async buildAdditionalInfo(e=0){if(!this.rulesGraph)return;this.rulesGraph.buildAdditionalInfo();function a(r,i){let s=[];return Object.keys(r.import_dependencies).forEach(n=>{s.push([n,r.import_dependencies[n]])}),Object.keys(r.cell.dependsOnFunction).forEach(n=>{s.push([n,i[r.cell.dependsOnFunction[n]]])}),s}for(let r=e;r<this.rulesGraph.nodes.length;r++){let i=this.rulesGraph.nodes[r];if(i.type==="script"){let s=a(i,this.rulesGraph.nodes);if(s.length===0)continue;i.isLoading=!0;let n=`I have this Python script. The script uses imported data and/or functions from other scripts, but the import statements are missing. I'd like you to add the imoport statement for me. All the other scripts as in the same directory as this one.
The script is:

`+i.cell.code+`

The dependencies are:
`+s.map(p=>p[0]+" from script "+p[1].name).join(`
`)+`

Please write for me the import statements of my script. Please write the output in JSON format following this schema:
{"imports": ["import statement for each dependency"]}Please do not repeat the code already existing, only add the import statements`,d=await this.llm.runQuery(n),o=this.parseJsonFromResponse(d);if(!o.imports||!Array.isArray(o.imports))throw new Error("Invalid response format: 'imports' is missing or not an array");i.isLoading=!1,i.ruleAdditionalInfo.prefixCode=o.imports.join(`
`)}else if(i.type==="rule"){let s=a(i,this.rulesGraph.nodes),n=Object.entries(i.rule_dependencies),d=Object.entries(i.ruleAdditionalInfo.exportsTo);i.isLoading=!0;let o=`I have this Python script, and I need you to add code to perform three operations: 1- The scripts is missing some imports. I will provide you the list of the imports that are needed and the names of the scripts from which the imports are needed. You need to add the import statements to the script. Note, the scripts are in the same directory of this one.
2- The script needs to read some file(s) and use their content to valorize some variables before starting.  I will provide the name of the variables to valorize and the piece of code that produces the file that needs to be readed.
3- The script produces some output files, that will be readed by other scripts.  I will provide the name of the variables that needs to be saved.My script is:

`+i.cell.code+`

The imports needed are:
`+(s.length===0?" - no import actually needed -":s.map(l=>l[0]+" from script "+l[1].name).join(`
`))+`

The variables it needs to valorize by reading files are: `+(n.length===0?" - no variable actually needed for reading -":n.map(l=>"Variable: "+l[0]+" produced by the script "+l[1].name).join(`
`)+`

I will provide the code that produces the files that you need: `+n.map(l=>"Code that saves variable "+l[0]+` to a file:
`+l[1].ruleAdditionalInfo.postfixCode).join(`
`))+`

The variables that needs to be saved are: 
`+(d.length===0?" - no variable actually needed for saving -":d.map(l=>"Variable: "+l[0]+" must be saved and will be readed by the script(s) "+l[1].map(m=>m.name).join(", ")).join(`
`)+`

When saving files, you can decide the name, format and number of files. Consider the number of scripts that will read them to make a good decision.
`)+`
Please write the output in JSON format following this schema:
{ 'imports': ['import statement for each dependency'], 'reads': ['code to read each file'], 'writes': ['code to save each file'], 'readed_filenames': ['list of filenames for readed files'], 'written_filenames': ['list of filenames for the saved files'] }
Please do not repeat the code already existing, only valorize the three fields. If a field is empty, write an empty array.`,p=await this.llm.runQuery(o),c=this.parseJsonFromResponse(p);i.ruleAdditionalInfo.prefixCode=c.imports.join(`
`)+`
`+c.reads.join(`
`),i.ruleAdditionalInfo.postfixCode=c.writes.join(`
`),i.ruleAdditionalInfo.saveFiles=c.written_filenames,i.ruleAdditionalInfo.readFiles=c.readed_filenames,i.isLoading=!1}}return this.rulesGraph.nodes}async parseImportsFromCells(){let e=this.cells?.parseImports(),a=`I have a jupyter notebook that is being processed. The notebook is made of a list of cells, each containing python code.
I want to re-organize the imports. I already removed all import statement for every cell's code.
I will now provide you: a list of all the import statements found in the cells, and the code of each cell.
I want you to provide me the list of the imports that each cell needs.
For each cell, provide a list of the imports that are needed by the code of the cell.


These are the import statements:
`+e?.map((s,n)=>"Import num "+n+": "+s).join(`
`)+`

These are the cells:
`+this.cells?.cells.map((s,n)=>"Cell num "+n+": "+s.code).join(`
`)+`

For each cell, I'd like a list of the imports that are needed. Please write the needed imports as a list of indexes (example: import 0, 1, 5).
Please write the output in JSON format following this schema:
{'cells': [cell_index: number, imports: [index of import for each import needed]]}`,r=await this.llm.runQuery(a),i=this.parseJsonFromResponse(r);if(!i.cells||!Array.isArray(i.cells))throw new Error("Invalid response format: 'rules' is missing or not an array");if(this.cells)for(let s=0;s<i.cells.length;s++){let n=i.cells[s],d=n.imports.map(o=>e?.[o]).filter(o=>o!==void 0);this.cells.cells[n.cell_index].code=d.join(`
`)+`
`+this.cells.cells[n.cell_index].code}}getCells(){return this.cells}getRules(){return this.rulesGraph?.nodes}async getRulesGraph(){if(this.cells)return this.rulesGraph=new Fd(this.cells),await this.updateRulesGraph(),this.rulesGraph.nodes}changeRuleState(e,a){if(!this.rulesGraph)return[];let r=this.rulesGraph.nodes[e];r.setType(a),this.rulesGraph.nodes[e]=r;for(let i=e+1;i<this.rulesGraph.nodes.length;i++)this.rulesGraph.nodes[i].updateDependencies();return this.rulesGraph.nodes}async updateRulesGraph(e=0){if(!this.rulesGraph)return[];let a=`I have a jupyter notebook that is being processed into a snakemake pipeline. This process is complex and involves decomposition of the notebook into smaller pieces of python code, and linking them together in a snakemake pipeline.
In this step, I have a list of cells. Each cell can have three states: 
1- A rule: A cell that is a candidate to become a snakemake rule. It will produce output files.
2- A script: A cell will not become a rule, but will be imported by other cells.
3- Undecided: A cell that can be either a rule or a script and it will be decided later.

Note: each cell has data dependencies toward other cells. Data dependencies include the following limitations:
1- A rule can depend from any type of cells
2- A script can depend only from other scripts
3- An undecided cell can depend from scripts and undecided cells
This implies that turning an undecided cell into a rule will force its undecided dependencies to become rules too.

Consider the following notebook cells:

`+this.rulesGraph.nodes.map((s,n)=>"Cell. "+n+`
Code:
`+s.cell.code+`
 depends on cells: <`+Object.values(s.cell.dependsOn).join(", ")+"> current type: "+s.type+" current name (can be empty): <"+s.name+">"+(s.type==="undecided"?" can become rule: <"+s.can_become.rule+"> can become script: <"+s.can_become.script+">":"")).join(`

`)+`

For every cell I need you to provide:
1- A suggestion for the cell state, ONLY IF the cell is undecided, you can't change decided cells.
2- A possible short name for the rule or the script of the cell
When deciding if changing an undecided cell state consider this: small pieces of code that do not produce significant data are good candidates for scripts. Pieces of code that produce meaningful data, or that produce data that is readed by many other cells are good candidates to be rules. If you are undecided, let it undecided and the user will choose himself.
Please output your response in the following JSON schema:
{"rules": [ {"cell_index": <number>, "rule_name": <string>, "type": <string>} for each cell... ] } 
`+(e===0?"Please provide at least a name for every cell, even if you don't want to change the state.":"You can change the state of the cells from "+e+" onward. For those, please provide at least a name for every cell, even if you don't want to change the state."),r=await this.llm.runQuery(a),i=this.parseJsonFromResponse(r);return this.rulesGraph.guessGraphTypesAndNames(i,e),this.rulesGraph.nodes}async setDependenciesForCells(){let e=`I have a jupyter notebook that is being processed into a snakemake pipeline. This process involves decomposition of the notebook into smaller pieces of python code, and linking them together in a snakemake pipeline.
The main issue is managing the state. Jupyter notebooks have a global state. I can define or modify a variable in a cell, and refer to this variable in another. After the decomposition, every cell will be executed indipendently, so I must manage the dependencies between the cells.
In this step I'm interested in data dependencies, so variables that are defined, modified or readed by the code inside the cells.
`+ +`
For each cell, I need the set of variables that the code inside WRITES (either define for the first time or modify) and READS. `+`I also need the list of files that the cell might read.
The READS variable must contain all the variables that the code might read. The only variables that you can skip are the ones that are defined in a local context, for example if the code defines a function, and inside the function a local variable is defined and then readed (or a function argument is readed), this can be skipped. But if the code inside the function reads a variable that might be defined outside of the function, the variable definitely goes in the READS list.
Also, modules or things that are already in the cell 'import' statements do not go in the READ list.
Regarding the WRITES list, peration that modify mutable objects, as appending to a list, count as WRITE operations. As I'm interested only in data dependencies, if the cell defines a function, the name of the function that is defined do not go in the WRITES list for now. 
I give you an example:
VAR_1 = 5; LIST_1.append(1);
print(VAR_2)
def myFun(arg1):
    print(arg1)
    print(VAR_3)
READS: VAR_2, LIST_1, VAR_3 (notice: VAR_3 is readed in the function body, but is defined outside, so it's a READ. arg1 is also readed in the function body but is an argument, valorized somewhere else, so it's not a dependency - when some cell calls the functions, it will valorize it and it will be a dependency of this cell)
WRITES: VAR_1, LIST_1 (notice: LIST_1 is both in the READS and WRITES, as append() depends on the previous state of the list and changes it).
Consider the following notebook cells:

`+this.cells?.cells.map((i,s)=>"Cell. "+s+`
`+i.code).join(`

`)+`

Please provide to me the list of READED variables, WRITTEN variables and READED file for each cell. For each variable use the same name used in the code without changing it.


Please write the output in JSON format following this schema:
{ "cells": [ {"cell_index": <number>, "reads": [<strings>], "writes": [<indexes>], "reads_file": [<indexes>]}  for each rule... ] }`,a=await this.llm.runQuery(e),r=this.parseJsonFromResponse(a);if(!r.cells||!Array.isArray(r.cells))throw new Error("Invalid response format: 'rules' is missing or not an array");r.cells.forEach(i=>{if(typeof i.cell_index!="number"||!Array.isArray(i.reads)||!Array.isArray(i.writes)||!Array.isArray(i.reads_file))throw new Error("Invalid response format: One or more cell properties are missing or of incorrect type");this.cells?.setDependency(i.cell_index,i.reads,i.reads_file,i.writes,[])})}parseJsonFromResponse(e){let a=e.indexOf("{"),r=e.lastIndexOf("}");return a!==-1&&r!==-1&&(e=e.substring(a,r+1)),JSON.parse(e)}addCellWrite(e,a){if(!this.cells)return;if(this.cells.cells[e].writes.includes(a))return[this.cells,new Promise(i=>i(this.rulesGraph?.nodes||[]))];this.cells.cells[e].writes.push(a),this.cells.buildDependencyGraph(),this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let r=this.updateRulesGraph(e);return[this.cells,r]}addCellDependency(e,a){if(!this.cells)return;if(this.cells.cells[e].reads.includes(a))return[this.cells,new Promise(i=>i(this.rulesGraph?.nodes||[]))];this.cells.cells[e].reads.push(a),this.cells.buildDependencyGraph(),this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let r=this.updateRulesGraph(e);return[this.cells,r]}removeCellDependency(e,a){if(!this.cells)return;this.cells.cells[e].reads=this.cells.cells[e].reads.filter(i=>i!==a),this.cells.buildDependencyGraph(),this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let r=this.updateRulesGraph(e);return[this.cells,r]}removeCellWrite(e,a){if(!this.cells)return;this.cells.cells[e].writes=this.cells.cells[e].writes.filter(i=>i!==a),this.cells.buildDependencyGraph(),this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let r=this.updateRulesGraph(e);return[this.cells,r]}deleteCell(e){if(this.cells&&this.rulesGraph){let a=this.cells.cells.splice(e,1);try{this.cells.buildDependencyGraph()}catch(i){throw this.cells.cells.splice(e,0,...a),i}this.rulesGraph.buildFromDependencyGraph(this.cells,e);let r=this.updateRulesGraph(e);return[this.cells,r]}}async splitCell(e,a,r){if(!this.cells)return;if(a.length===0||r.length===0)return[this.cells,this.rulesGraph?.nodes||[]];let i=this.cells.cells[e];try{let n=i.calls,d={code:a,reads:[],reads_file:[],writes:[],imports:[],isFunctions:!1,declares:[],dependsOn:{},calls:[],dependsOnFunction:{},missingDependencies:[]},o={code:r,reads:[],reads_file:[],writes:[],imports:[],isFunctions:!1,declares:[],dependsOn:{},calls:[],dependsOnFunction:{},missingDependencies:[]};this.cells.cells.splice(e,1,d,o);let p=`I have a jupyter notebook that is being processed into a snakemake pipeline. This process involves decomposition of the notebook into smaller pieces of python code, and linking them together in a snakemake pipeline.
The most important thing is define how each cell changes the global state.
For each cell, I need the set of non-local variables that the code inside the cell WRITES (either define first time or modify) and READS. I also need the list of files that the cell might read.
The READS variables must contain only GLOBAL variables readed. Modules or things that are already in the cell 'import' statements do not go in the READ list. If a cell declares a function that receives an argument, the argument is NOT in the READS list - it will be the cell who call the function who provide it. Contrarily, if the cell calls the function and valorize the argument with a global variable then the variables goes in the READS. If a function reads a global variable inside its body, it goes into the READS list of the cell that declares this function.
Finally, the READS and WRITES lists regard only variables. If a cell calls a function EXAMPLE_FUNCTION(..params..) do not put EXAMPLE_FUNCTION in the READS list, and if a cell defines it def EXAMPLE_FUNCTION(..): .. do not put it in the  WRITES list. 
Regarding the WRITES list, notice that only variables and data goes there, not function declaration. For example MY_VAR+=1: MY_VAR goes in the list. def my_func(..): my_func does not go in the list.
Note that the cells provided are only part of the notebook. Readed variables that are not defined in these cells are likely defined by previous ones.
Consider the following notebook cells:

`+[d,o].map((m,u)=>"Cell. "+u+`
`+m.code).join(`

`)+`

Please provide to me the list of READED variables, WRITTEN variables and READED file for each cell. For each variable use the same name used in the code without changing it.


Please write the output in JSON format following this schema:
{ "cells": [ {"cell_index": <number>, "reads": [<strings>], "writes": [<indexes>], "reads_file": [<indexes>]}  for each rule... ] }`,c=await this.llm.runQuery(p),l=this.parseJsonFromResponse(c);if(!l.cells||!Array.isArray(l.cells))throw new Error("Invalid response format: 'rules' is missing or not an array");d.reads=l.cells[0].reads,d.reads_file=l.cells[0].reads_file,d.writes=l.cells[0].writes,o.reads=l.cells[1].reads,o.reads_file=l.cells[1].reads_file,o.writes=l.cells[1].writes,n.length>0&&(d.reads=d.reads.filter(m=>!n.includes(m)),o.reads=o.reads.filter(m=>!n.includes(m)),n.forEach(m=>{d.code.includes(m)&&(d.calls.push(m),d.dependsOnFunction[m]=i.dependsOnFunction[m]),o.code.includes(m)&&(o.calls.push(m),o.dependsOnFunction[m]=i.dependsOnFunction[m])})),this.cells.buildDependencyGraph()}catch(n){throw this.cells.cells.splice(e,2,i),n}this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let s=await this.updateRulesGraph(e);return[this.cells,s]}mergeCells(e,a){if(a<e){let s=e;e=a,a=s}if(!this.cells)return;let r={code:this.cells?.cells[e].code+this.cells?.cells[a].code,reads:[...new Set([...this.cells?.cells[e].reads||[],...this.cells?.cells[a].reads.filter(s=>!this.cells?.cells[e].writes.includes(s))||[]])],reads_file:[...this.cells.cells[e].reads_file,...this.cells.cells[a].reads_file],writes:[...new Set([...this.cells?.cells[e].writes||[],...this.cells?.cells[a].writes||[]])],imports:[...new Set([...this.cells?.cells[e].imports||[],...this.cells?.cells[a].imports||[]])],isFunctions:!1,declares:[],dependsOn:{},calls:[...new Set([...this.cells?.cells[e].calls||[],...this.cells?.cells[a].calls||[]])],dependsOnFunction:{...this.cells?.cells[e].dependsOnFunction,...this.cells?.cells[a].dependsOnFunction},missingDependencies:[]};this.cells.cells.splice(e,2,r),this.cells.buildDependencyGraph(),this.rulesGraph?.buildFromDependencyGraph(this.cells,e);let i=this.updateRulesGraph(e);return[this.cells,i]}};var ge=oe(require("vscode")),X=class t{static instance=new t;allowLogging=!1;keepHistoryBetweenSessions=!1;rulesOutputFormat="";snakemakeBestPracticesSetLogFieldInSnakemakeRules=!1;snakemakeBestPracticesPreferGenericFilenames=!1;validateSnakemakeRules=!1;snakemakeAbsolutePath="";includeCurrentFileIntoPrompt=!1;getAllowLogging(){return this.allowLogging}getKeepHistoryBetweenSessions(){return this.keepHistoryBetweenSessions}getRulesOutputFormat(){return this.rulesOutputFormat}getSnakemakeBestPracticesSetLogFieldInSnakemakeRules(){return this.snakemakeBestPracticesSetLogFieldInSnakemakeRules}getSnakemakeBestPracticesPreferGenericFilenames(){return this.snakemakeBestPracticesPreferGenericFilenames}getValidateSnakemakeRules(){return this.validateSnakemakeRules}getSnakemakeAbsolutePath(){return this.snakemakeAbsolutePath}getIncludeCurrentFileIntoPrompt(){return this.includeCurrentFileIntoPrompt}constructor(){this.allowLogging=ge.workspace.getConfiguration("snakemaker").get("allowLogging",!1),this.keepHistoryBetweenSessions=ge.workspace.getConfiguration("snakemaker").get("keepHistoryBetweenSessions",!1),this.rulesOutputFormat=ge.workspace.getConfiguration("snakemaker").get("rulesOutputFormat","Snakemake"),this.snakemakeBestPracticesSetLogFieldInSnakemakeRules=ge.workspace.getConfiguration("snakemaker").get("snakemakeBestPractices.SetLogFieldInSnakemakeRules",!1),this.snakemakeBestPracticesPreferGenericFilenames=ge.workspace.getConfiguration("snakemaker").get("snakemakeBestPractices.PreferGenericFilenames",!1),this.validateSnakemakeRules=ge.workspace.getConfiguration("snakemaker").get("validateSnakemakeRules",!1),this.snakemakeAbsolutePath=ge.workspace.getConfiguration("snakemaker").get("snakemakeAbsolutePath",""),this.includeCurrentFileIntoPrompt=ge.workspace.getConfiguration("snakemaker").get("includeCurrentFileIntoPrompt",!1),ge.workspace.onDidChangeConfiguration(e=>{e.affectsConfiguration("snakemaker.allowLogging")?this.allowLogging=ge.workspace.getConfiguration("snakemaker").get("allowLogging",!1):e.affectsConfiguration("snakemaker.keepHistoryBetweenSessions")?this.keepHistoryBetweenSessions=ge.workspace.getConfiguration("snakemaker").get("keepHistoryBetweenSessions",!1):e.affectsConfiguration("snakemaker.rulesOutputFormat")?this.rulesOutputFormat=ge.workspace.getConfiguration("snakemaker").get("rulesOutputFormat","Snakemake"):e.affectsConfiguration("snakemaker.snakemakeBestPractices.SetLogFieldInSnakemakeRules")?this.snakemakeBestPracticesSetLogFieldInSnakemakeRules=ge.workspace.getConfiguration("snakemaker").get("snakemakeBestPractices.SetLogFieldInSnakemakeRules",!1):e.affectsConfiguration("snakemaker.snakemakeBestPractices.PreferGenericFilenames")?this.snakemakeBestPracticesPreferGenericFilenames=ge.workspace.getConfiguration("snakemaker").get("snakemakeBestPractices.PreferGenericFilenames",!1):e.affectsConfiguration("snakemaker.validateSnakemakeRules")?this.validateSnakemakeRules=ge.workspace.getConfiguration("snakemaker").get("validateSnakemakeRules",!1):e.affectsConfiguration("snakemaker.snakemakeAbsolutePath")?this.snakemakeAbsolutePath=ge.workspace.getConfiguration("snakemaker").get("snakemakeAbsolutePath",""):e.affectsConfiguration("snakemaker.includeCurrentFileIntoPrompt")&&(this.includeCurrentFileIntoPrompt=ge.workspace.getConfiguration("snakemaker").get("includeCurrentFileIntoPrompt",!1))})}};var U2=oe(require("vscode")),at=class{static ruleDetailsPrompt(e){return`I have the following bash command: ${e}.
Can you guess the filenames of input and outputs? Only the filenames of what is read and written are important - not the things in between (es pipe operator), and stdin,stdout and stderr are not considered inputs or outputs.
Consider that when unknown programs are executed, they might write to files and you don't know what they are.
If you are sure there is no input or output, please write "-". If it cannot be determined, write "Unknown".
I would also like a short name of a theorical Snakemake rule for this command.
Please write: INPUT=[...]; OUTPUT=[...]; NAME=[...]. DO NOT, EVER output other things, only INPUT=[...]; OUTPUT=[...]; NAME=[...]. Do not forget the = symbol.`}static commandImportancePrompt(e,a){return`I have the following bash command: ${e}.
It might need to be translated into a snakemake or a Make rule, but it could be just a one-time command from the user. Generally, things that for sure do not write to files are not worth making into rules.
${a}
Please write "YES" if it's worth making into a rule, "NO" if it's a one-time command. DO NOT, EVER output other things, only YES or NO.`}static ruleFromCommandPrompt(e,a,r,i,s,n,d=""){let o=`Convert this bash command into a ${r} rule:
${e}
It is estimated that the input could be (${i}) and the output could be (${s}) - but it could be wrong. A possible name for the rule could be ${a}.${d}
Please do not remove the new-lines chosen by the user. You might add new-lines for readability but only if necessary.
Please output only the rule. What you output goes entirely in the ${r} file, so Do not output other things. Example of good output: "<RULE>". Examples of bad output: "Here is the rule <RULE>" or "<RULE> is the rule" or  or "<Comment/Title of rule><RULE>".`;return o+=n?`
Please add a log field to the rule with the name of the log file. For example, log: 'logs/{rule}.log'. If the rule contains wildcards, they must be part of the log file name or Snakemake will throw an error. Log field must be added before shell field.`:"",o}static guessNamePrompt(e){return`I have the following bash command: ${e}.
I would like a short name of a theorical Snakemake rule for this command.
Please output only the name. DO NOT, EVER output other things.`}static correctRulesFromErrorPrompt(e,a){return`I have the following rules:

${e}

I tried to run them in Snakemake, but I got the following error:

${a}

Can you fix the rules so that they run correctly?
Please output only the corrected rule. What you output goes entirely in the Snakefile, so DO NOT, EVER, OUTPUT ANYTHING OTHER THAN THE RULES. Example of good output: "<NEW_RULES>". Examples of bad output: "Here are the corrected rules <NEW_RULES>"`}static rulesFromCommandsBasicPrompt(e,a,r,i=""){return`I have the following set of bash commands. Can you convert them into ${a} rules? Note that Estimated inputs and outputs are just guesses and could be wrong.
${e.join(`
`)}${i}
Please do not remove the new-lines chosen by the user. You might add new-lines for readability but only if necessary. ${r}
Please output only the ${a} rules. What you output goes entirely in the ${a} file, so DO NOT, EVER, OUTPUT ANYTHING OTHER THAN THE RULES. Example of good output: "<RULES>". Examples of bad output: "Here are the rules <RULES>" or "<Comment/Title of rule><RULE>"`}static snakemakeBestPracticesPrompt(e,a){let r="";return(e||a)&&(r+=`Please write the Snakemake rules following these guidelines:
`),e&&(r+=`- Prefer the usage of generic names for input-outputs using wildcards, when possible. For example input: "data.csv", output: "transformed_data.csv" could be written as input: "{file}.csv", output: "transformed_{file}.csv".
- Multiple commands that execute the same operation on different files can be merged in a single rule using generic inputs/outputs and wildcards. Following the example above, another rule could be input: "GENES.csv", output: "transformed_GENES.csv" could be merged with the previous rule.
- If using generic filenames, add a "all" rule that generates the files generated by the user.Include in the input of the "all" rules only output files, if a rule does not have an output, do not put it in all. Do not put the outputs generated by the "log" directive in the "all" rule.
`),a&&(r+="- Add a log directive to each rule with the name of the log file. For example, log: 'logs/{rule}.log'. If the rule contains wildcards, they must be part of the log file name or Snakemake will throw an error. Log fields must be added before shell fields."),r}static rulesContextPrompt(e){return e.length<=50?"":`
For context, these are the rules already present:
${e}
Please consider these rules as a context when writing the new rules. Follow their style and formalism. If a command results in a rule equal to one already present, do not output it. If you need to return no rule at all, return a newline instead. DO NOT write the already present rules them back in your response or the user will find them twice in his file.`}},Ts=class{constructor(e){this.modelComms=e;this.modelComms=e}getCurrentEditorContent(){let e=U2.window.activeTextEditor;return e?e.document.getText():""}cleanModelResponseStupidHeaders(e){return e.startsWith("Makefile")||e.startsWith("makefile")?e.substring(8):e.startsWith("Make")||e.startsWith("make")?e.substring(4):e.startsWith("Snakemake")||e.startsWith("snakemake")||e.startsWith("Snakefile")||e.startsWith("snakefile")?e.substring(9):e}async guessRuleDetails(e){let a=at.ruleDetailsPrompt(e),i=(await this.modelComms.runQuery(a)).split(";"),s=i[0]?.split("=")[1]?.replace("[","")?.replace("]","")??"Unknown",n=i[1]?.split("=")[1]?.replace("[","")?.replace("]","")??"Unknown",d=i[2]?.split("=")[1]?.replace("[","")?.replace("]","")??"Unknown";return[s,n,d]}async guessIfCommandImportant(e,a,r){var i="";a.length>0&&(i+=`Examples of commands that are worth making into rules: ${a.join("; ")}
`),r.length>0&&(i+=`Examples of commands that are NOT worth making into rules: ${r.join("; ")}
`),i.length>0&&(i=`Use these examples to better understand what the user wants to convert into rule:
${i}`);let s=at.commandImportancePrompt(e,i),n=await this.modelComms.runQuery(s);return n=n.toLowerCase(),!n.includes("no")}async getRuleFromCommand(e){let a=X.instance.getRulesOutputFormat();var r=e.getInput(),i=e.getOutput();let s=e.getCommandForModel();r==="-"&&(r="No input"),i==="-"&&(i="No output");let n="";X.instance.getIncludeCurrentFileIntoPrompt()&&(n=at.rulesContextPrompt(this.getCurrentEditorContent()));let d=at.ruleFromCommandPrompt(s,e.getRuleName(),a,r,i,a==="Snakemake"&&X.instance.getSnakemakeBestPracticesSetLogFieldInSnakemakeRules(),n),o=await this.modelComms.runQuery(d);return this.cleanModelResponseStupidHeaders(o)}async getAllRulesFromCommands(e){let a=X.instance.getRulesOutputFormat(),r="";a==="Snakemake"&&(r=at.snakemakeBestPracticesPrompt(X.instance.getSnakemakeBestPracticesPreferGenericFilenames(),X.instance.getSnakemakeBestPracticesSetLogFieldInSnakemakeRules()));let i=e.map(o=>`
Estimated inputs: (${o.getInput()}) Estimated outputs: (${o.getOutput()})
Shell command: ${o.getCommandForModel()}
Possible rule name: ${o.getRuleName()}}

`),s="";X.instance.getIncludeCurrentFileIntoPrompt()&&(s=at.rulesContextPrompt(this.getCurrentEditorContent()));let n=at.rulesFromCommandsBasicPrompt(i,a,r,s),d=await this.modelComms.runQuery(n);return this.cleanModelResponseStupidHeaders(d)}async guessOnlyName(e){let a=at.guessNamePrompt(e.getCommandForModel());return await this.modelComms.runQuery(a)}async autoCorrectRulesFromError(e,a){let r=at.correctRulesFromErrorPrompt(e,a);return await this.modelComms.runQuery(r)}};var Jr=oe(require("vscode"));var O4=require("fs"),r0=a0(),As=class{constructor(){r0.setGracefulCleanup()}showMessageForSnakemakePath(){Jr.window.showInformationMessage("Snakemake path is not set or is incorrect. Please set a correct, absolute path to Snakemake bin to allow for automatic validation of rules, or disable rule validation","Set path","Disable validation").then(e=>{e==="Set path"?Jr.commands.executeCommand("workbench.action.openSettings","snakemaker.snakemakeAbsolutePath"):e==="Disable validation"&&Jr.commands.executeCommand("workbench.action.openSettings","snakemaker.validateSnakemakeRules")})}async validateRules(e){let a=X.instance.getSnakemakeAbsolutePath();a===""&&(a="snakemake");let r=r0.fileSync();O4.writeFileSync(r.name,e);let s=require("child_process").spawn(a,["--list","-s",r.name]);var n="",d="";return s.stdout.on("data",o=>{n+=o.toString()}),s.stderr.on("data",o=>{d+=o.toString()}),new Promise((o,p)=>{s.on("error",c=>{z.instance()?.log("User is trying to validate rules but snakemake is not specified and not in PATH"),this.showMessageForSnakemakePath(),o({success:!0})}),s.on("close",c=>{o({success:c===0,message:n+d})})})}};var Yr=4,Rs=class{stack=[];index=-1;undoCount=-1;redoCount=0;constructor(){for(let e=0;e<Yr;e++)this.stack.push(null)}push(e){this.index=(this.index+1)%Yr,this.stack[this.index]=e,this.undoCount++,this.redoCount=0}undo(){return this.undoCount===0?null:(this.index=(this.index-1+Yr)%Yr,this.undoCount--,this.redoCount++,this.stack[this.index])}redo(){return this.redoCount===0?null:(this.index=(this.index+1)%Yr,this.undoCount++,this.redoCount--,this.stack[this.index])}},ks=class{constructor(e,a){this.llm=e;this.memento=a;this.history=[],this.archive=[],this.queries=new Ts(this.llm),this.index=0,this.undoRedoStack=new Rs,this.saveState(!0)}history;archive;queries;index;testRules=new As;undoRedoStack;getHistory(){return this.history}getArchive(){return this.archive}async addCommand(e,a,r){let i=this.isCommandInHistory(e);if(i!==-1){let l=this.history[i];this.history.splice(i,1),this.history.push(l),z.instance()?.addCommandExisting(l,e);return}let s=new j1(e,0,"","",!1,this.index,!0),n=new Ja(s,this.index+1);this.index+=2,this.history.push(n),z.instance()?.addCommand(n);let d=this.history.filter(l=>l.getImportant()===!0&&l.getTemporary()===!1).map(l=>l.getCommand()),o=this.history.filter(l=>l.getImportant()===!1&&l.getTemporary()===!1).map(l=>l.getCommand());d=d.slice(0,35),o=o.slice(0,35);let p=this.queries.guessIfCommandImportant(e,d,o),c=this.queries.guessRuleDetails(e);await Promise.all([p,c]).then(l=>{let m=l[0],u=l[1];s.setInput(u[0]),s.setOutput(u[1]),s.setRuleName(u[2]),s.setImportance(m),n.setTemporary(!1),this.saveState(),z.instance()?.commandDetails(n)}).catch(l=>{throw this.history.splice(this.history.indexOf(n),1),l})}isCommandInHistory(e){for(var a=0;a<this.history.length;a++){let i=this.history[a];if(i.getNumChildren()===0&&i.getCommand()===e)return a;for(var r=0;r<i.getNumChildren();r++)if(i.getChildren(r)?.getCommand()===e)return a}return-1}archiveCommand(e){let a=this.history.indexOf(e);a>-1&&e.getTemporary()===!1&&(this.history.splice(a,1),this.archive.push(e)),this.saveState()}deleteCommand(e){let a=this.history.indexOf(e);if(a>-1)return this.history.splice(a,1),this.saveState(),!0;if(a=this.archive.indexOf(e),a>-1)return this.archive.splice(a,1),this.saveState(),!1;throw new Error("Command does not exist")}deleteAllCommands(){this.history=[],this.saveState()}deleteAllArchivedCommands(){this.archive=[],this.saveState()}restoreCommand(e){let a=this.archive.indexOf(e),r=this.isCommandInHistory(e.getCommand());a>-1&&(this.archive.splice(a,1),r===-1?this.history.push(e):(this.history.splice(r,1),this.history.push(e))),this.saveState()}archiveAllCommands(){this.archive=this.archive.concat(this.history),this.history=[],this.saveState()}setCommandImportance(e,a){e.setImportance(a),this.saveState(),z.instance()?.setCommandImportance(e,a)}async validateAndCorrectRules(e){if(!(X.instance.getRulesOutputFormat()==="Snakemake"&&X.instance.getValidateSnakemakeRules()))return e;if(e.length<10)return"";for(let a=0;a<3;a++){let r=await this.testRules.validateRules(e);if(r.success)return e;z.instance()?.log(`Generated rule not valid: ${r.message}`),e=await this.queries.autoCorrectRulesFromError(e,r.message||""),z.instance()?.log(`Corrected rule: ${e}`)}return e}async getRule(e){if(e.getTemporary()===!0)throw new Error("Command is being processed - please wait before exporting the rule.");e.setTemporary(!0);try{let a=await this.queries.getRuleFromCommand(e);return a=await this.validateAndCorrectRules(a),a}catch(a){throw a}finally{e.setTemporary(!1)}}async getAllRules(){let e=this.history.filter(r=>r.getImportant()===!0&&r.getTemporary()===!1);if(e.length===0)return null;e.forEach(r=>r.setTemporary(!0));try{var a=await this.queries.getAllRulesFromCommands(e);return a=await this.validateAndCorrectRules(a),a}catch(r){throw r}finally{e.forEach(r=>r.setTemporary(!1))}}modifyCommandDetail(e,a,r){a==="Inputs"?(e.setInput(r),this.saveState()):a==="Output"?(e.setOutput(r),this.saveState()):a==="RuleName"&&(e.setRuleName(r),this.saveState()),z.instance()?.commandDetails(e,!0)}async moveCommands(e,a){z.instance()?.moveCommands(this.history,!1);var r=[];let i=e.map(s=>s[0].popChildren(s[1]));return e.forEach(s=>{s[0].isDead()?this.history.splice(this.history.indexOf(s[0]),1):r.push(s[0])}),a?(r.push(a),i.forEach(s=>{a.addChild(s)})):i.forEach(s=>{this.history.push(new Ja(s,this.index++))}),await Promise.all(r.map(async s=>{s.setTemporary(!0);try{let n=await this.queries.guessOnlyName(s);s.setRuleName(n)}finally{s.setTemporary(!1)}})),this.saveState(),z.instance()?.moveCommands(this.history,!0),r.length!==0}getHistoryFormattedForChat(){return this.history.length===0?"History is Empty":JSON.stringify(this.history)}exportAsJsonString(){return JSON.stringify({history:this.history,archive:this.archive,index:this.index})}loadJsonString(e){let a=JSON.parse(e);this.history=a.history.map(r=>{let i=r.commands.map(n=>new j1(n.command,n.exitStatus,n.inputs,n.output,n.important,n.index,n.temporary,n.rule_name)),s=new Ja(i[0],r.index);for(let n=1;n<i.length;n++)s.addChild(i[n]);return s}),this.archive=a.archive.map(r=>{let i=r.commands.map(n=>new j1(n.command,n.exitStatus,n.inputs,n.output,n.important,n.index,n.temporary,n.rule_name)),s=new Ja(i[0],r.index);for(let n=1;n<i.length;n++)s.addChild(i[n]);return s}),this.index=a.index}importFromJsonString(e){this.loadJsonString(e),this.undoRedoStack=new Rs,this.undoRedoStack.push(e),z.instance()?.imported(this.history)}saveState(e=!1){let a=this.exportAsJsonString();this.undoRedoStack.push(a),!e&&X.instance.getKeepHistoryBetweenSessions()&&this.memento.update("stashed_state",a)}undo(){let e=this.undoRedoStack.undo();e&&this.loadJsonString(e)}canUndo(){return this.undoRedoStack.undoCount>0}redo(){let e=this.undoRedoStack.redo();return e?(this.loadJsonString(e),!0):!1}canRedo(){return this.undoRedoStack.redoCount>0}setHistoryFromChat(e){let a=this.exportAsJsonString();try{this.history=e.map(r=>{let i=r.commands.map(n=>new j1(n.command,n.exitStatus||0,n.inputs,n.output,n.important||!0,++this.index,!1,n.rule_name)),s=new Ja(i[0],++this.index);for(let n=1;n<i.length;n++)s.addChild(i[n]);return s}),this.saveState(),z.instance()?.importedFromChat(this.history)}catch(r){throw this.loadJsonString(a),r}}},Ja=class{commands;index;rule_name="";constructor(e,a){this.commands=[e],this.index=a}getRuleName(){return this.commands.length===1?this.commands[0].getRuleName():this.rule_name}setRuleName(e){this.commands.length===1&&this.commands[0].setRuleName(e),this.rule_name=e}getCommand(){return this.commands.map(e=>e.getCommand()).join(" && ")}getCommandForModel(){return this.commands.map(e=>e.getCommand()).join(`
`)}getInput(){if(this.commands.length===1)return this.commands[0].getInput();var e=new Set,a=new Set;return this.commands.forEach(r=>{e.add(r.getInput()),a.add(r.getOutput())}),a.forEach(r=>e.delete(r)),Array.from(e).join(" && ")}isDead(){return this.commands.length===0}addChild(e){this.commands.push(e)}getOutput(){return this.commands[this.commands.length-1].getOutput()}getImportant(){return this.commands.some(e=>e.getImportant())}getTemporary(){return this.commands.some(e=>e.getTemporary())}getNumChildren(){return this.commands.length===1?0:this.commands.length}getChildren(e){return e<this.commands.length?this.commands[e]:null}popChildren(e){if(e<this.commands.length)return this.commands.splice(e,1)[0]}getIndex(){return this.index}setImportance(e){this.commands.forEach(a=>a.important=e)}setTemporary(e){this.commands.forEach(a=>a.temporary=e)}setInput(e){if(this.commands.length===1){this.commands[0].inputs=e;return}throw new Error("Cannot set input for a container command")}setOutput(e){if(this.commands.length===1){this.commands[0].output=e;return}throw new Error("Cannot set output for a container command")}},j1=class{command;exitStatus;output;inputs;important;index;temporary;rule_name;constructor(e,a,r,i,s,n,d=!1,o){this.command=e,o?this.rule_name=o:this.rule_name=e,this.exitStatus=a,this.inputs=r,this.output=i,this.important=s,this.index=n,this.temporary=d}getCommand(){return this.command}getCommandForModel(){return this.command}getInput(){return this.inputs}getOutput(){return this.output}getImportant(){return this.important}getTemporary(){return this.temporary}getNumChildren(){return 0}getChildren(e){return null}getRuleName(){return this.rule_name}getIndex(){return this.index}setImportance(e){this.important=e}setTemporary(e){this.temporary=e}setInput(e){this.inputs=e}setOutput(e){this.output=e}setRuleName(e){this.rule_name=e}};var ca=oe(require("vscode")),xs=class{writeToFile(e,a){return require("fs").writeFile(e,a,i=>{if(i)return ca.window.showInformationMessage("Error writing to file"),!1}),!0}readFromFile(e){return require("fs").readFileSync(e,"utf8")}writeToEditor(e,a){if(!a)return ca.window.showInformationMessage("Please open a file in the editor to print the rules"),!1;let r=a.selection.active;return a.edit(i=>{i.insert(r,e)}),!0}async writeToCurrentFile(e){var a=ca.window.activeTextEditor;return a?this.writeToEditor(e,a):ca.commands.executeCommand("workbench.action.files.newUntitledFile").then(()=>(a=ca.window.activeTextEditor,this.writeToEditor(e,a)))}hasEditorOpen(){return ca.window.activeTextEditor!==void 0}};var we=oe(require("vscode"));var Gu=require("vscode"),Ps=class{constructor(e,a){this.view=e;this.model=a;this.model=a,this.view=e,this.buildNotebook()}async buildNotebook(){try{this.view.setLoading("Building dependency graph...");let e=await this.model.openNotebook();this.view.setNotebookCells(e),this.view.setLoading("Building rules graph...");let a=await this.model.getRulesGraph();this.view.setRulesNodes(a||[])}catch(e){this.view.onError(e)}}produceSnakefile(){this.view.setLoading("Building Snakemake rules..."),this.model.buildAdditionalInfo().then(e=>{this.view.stopLoading(),e.forEach(a=>console.log(a.ruleAdditionalInfo.prefixCode+a.cell.code+a.ruleAdditionalInfo.postfixCode)),this.view.setOutput(e)}).catch(e=>{this.view.onError(e)})}async propagateChanges(e,a){this.view.setLoading("Propagating changes..."),await this.model.updateRule(a[e],e),this.model.buildAdditionalInfo(e+1).then(r=>{this.view.stopLoading(),r.forEach(i=>console.log(i.ruleAdditionalInfo.prefixCode+i.cell.code+i.ruleAdditionalInfo.postfixCode)),this.view.setOutput(r)}).catch(r=>{this.view.onError(r)})}getCells(){let e=this.model.getCells();if(!e)throw new Error("Cells not loaded");return e}getRules(){return this.model.getRules()||[]}changeRuleState(e,a){this.view.setLoading("Updating rules graph...");try{let r=this.model.changeRuleState(e,a);this.view.setRulesNodes(r)}catch(r){r instanceof Xr?this.view.onSoftError(`Cannot change state from ${r.oldState} to ${r.newState}`):this.view.onError(String(r))}}addDependency(e,a){try{this.view.setLoading("Updating cell depenency graph...");let r=this.model.addCellDependency(e,a);r&&this.view.setNotebookCells(r[0]),this.view.setLoading("Updating rules graph..."),r&&r[1].then(i=>this.view.setRulesNodes(i))}catch(r){r instanceof ua?this.view.onSoftError(`Cannot add this dependency, as no cell writes the variable ${r.variable}`):this.view.onError(String(r))}}addWrite(e,a){try{this.view.setLoading("Updating cell depenency graph...");let r=this.model.addCellWrite(e,a);r&&this.view.setNotebookCells(r[0]),this.view.setLoading("Updating rules graph..."),r&&r[1].then(i=>this.view.setRulesNodes(i))}catch(r){this.view.onError(String(r))}}removeDependency(e,a){try{this.view.setLoading("Updating cell depenency graph...");let r=this.model.removeCellDependency(e,a);r&&this.view.setNotebookCells(r[0]),this.view.setLoading("Updating rules graph..."),r&&r[1].then(i=>this.view.setRulesNodes(i))}catch(r){r instanceof ua?this.view.onSoftError(`Cannot delete cell, as it defines variable ${r.variable}, readed by cell ${r.reader_cell}`):this.view.onError(String(r))}}removeWrite(e,a){try{this.view.setLoading("Updating cell depenency graph...");let r=this.model.removeCellWrite(e,a);r&&this.view.setNotebookCells(r[0]),this.view.setLoading("Updating rules graph..."),r&&r[1].then(i=>this.view.setRulesNodes(i))}catch(r){r instanceof ua?this.view.onSoftError(`Cannot remove the write "${r.variable}", it is a dependency of cell ${r.reader_cell}. Remove the dependency first.`):this.view.onError(String(r))}}deleteCell(e){try{this.view.setLoading("Updating cell depenency graph...");let a=this.model.deleteCell(e);a&&this.view.setNotebookCells(a[0]),this.view.setLoading("Updating rules graph..."),a&&a[1].then(r=>this.view.setRulesNodes(r))}catch(a){a instanceof ua?this.view.onSoftError(`Cannot delete cell, as it defines variable ${a.variable}, readed by cell ${a.reader_cell}`):this.view.onError(String(a))}}mergeCells(e,a){this.view.setLoading("Updating cell depenency graph...");let r=this.model.mergeCells(e,a);if(r){let i=r[0],s=r[1];this.view.setNotebookCells(i),this.view.setLoading("Updating rules graph..."),s.then(n=>this.view.setRulesNodes(n))}}splitCell(e,a,r){this.view.setLoading("Reconstructing dependency graph..."),this.model.splitCell(e,a,r).then(i=>{if(i){let s=i[0],n=i[1];s&&this.view.setNotebookCells(s),this.view.setRulesNodes(n)}else this.view.onSoftError("Could not complete operation"),this.view.stopLoading()}).catch(i=>{i instanceof ua?this.view.onSoftError(`Cannot delete cell, as it defines variable ${i.variable}, readed by cell ${i.reader_cell}`):this.view.onError(String(i))})}};var Is=class{constructor(e){this.memento=e;this.llm=new _s(e);let a=e.get("current_model",void 0);a&&this.useModel(a,!0,!0),this.terminalHistory=new ks(this.llm,e),this.writeToFiles=new xs}llm;terminalHistory;observableCommands=new Kr;observableArchive=new Kr;observableModel=new Kr;writeToFiles;isListening=!1;isChangingModel=!1;startListening(){this.isListening=!0}stopListening(){this.isListening=!1}bashCommandsSubscribe(e){return this.observableCommands.subscribe(e)}bashCommandsArchiveSubscribe(e){return this.observableArchive.subscribe(e)}getModels(){return this.llm}modelsSubscribe(e){return this.observableModel.subscribe(e)}addCommand(e,a,r,i=!1){!this.isListening&&!i||(this.terminalHistory.addCommand(e,a,r).then(()=>{this.observableCommands.next(this.terminalHistory.getHistory()),this.updateCanUndoCanRedo()}).catch(s=>{we.window.showInformationMessage(s.toString()),this.observableCommands.next(this.terminalHistory.getHistory())}),this.observableCommands.next(this.terminalHistory.getHistory()))}addCommandGoneWrong(e,a,r,i){this.isListening}archiveCommands(e){e.length===0&&this.terminalHistory.archiveAllCommands(),e.forEach(a=>{this.terminalHistory.archiveCommand(a)}),this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo()}restoreCommands(e){e.forEach(a=>{this.terminalHistory.restoreCommand(a)}),this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo()}deleteCommand(e){this.terminalHistory.deleteCommand(e)?this.observableCommands.next(this.terminalHistory.getHistory()):this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo()}deleteAllCommmands(){this.terminalHistory.deleteAllCommands(),this.observableCommands.next(this.terminalHistory.getHistory()),this.updateCanUndoCanRedo()}deleteAllArchivedCommands(){this.terminalHistory.deleteAllArchivedCommands(),this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo()}setCommandImportance(e,a){this.terminalHistory.setCommandImportance(e,a),this.observableCommands.next(this.terminalHistory.getHistory()),this.updateCanUndoCanRedo()}modifyCommandDetail(e,a){if(a){var r;switch(a){case"RuleName":r=e.getRuleName();break;case"Output":r=e.getOutput();break;case"Inputs":r=e.getInput();break;default:return}we.window.showInputBox({prompt:"Enter new detail for command",value:r}).then(i=>{i&&(this.terminalHistory.modifyCommandDetail(e,a,i),this.observableCommands.next(this.terminalHistory.getHistory()),this.updateCanUndoCanRedo())})}}ruleOutputRoutine(e,a){e.then(r=>{r!==null?this.writeToFiles.writeToCurrentFile(r).then(i=>{i&&this.archiveCommands(a),this.updateCanUndoCanRedo(),r.length<2&&we.window.showInformationMessage("No rule has been printed")}):we.window.showInformationMessage("No rules to print")}).catch(r=>{we.window.showInformationMessage(r.toString()),this.observableCommands.next(this.terminalHistory.getHistory())}),this.observableCommands.next(this.terminalHistory.getHistory())}printRule(e){this.ruleOutputRoutine(this.terminalHistory.getRule(e),[e])}printAllRules(){this.ruleOutputRoutine(this.terminalHistory.getAllRules(),[])}async useModel(e,a=!1,r=!1){this.isChangingModel||(this.isChangingModel=!0,this.llm.useModel(e,a).then(i=>{this.observableModel.next(this.llm),we.window.showInformationMessage('Model activated. The model says hi: "'+i+'"')}).catch(i=>{r||we.window.showInformationMessage("Error activating model: "+i.message)}).finally(()=>{this.isChangingModel=!1,this.llm.isCopilotWaiting=!1}))}isCopilotActive(){return this.llm.isCopilotActive()}async activateCopilot(){for(var e=[],a=0;a<40&&(e=await we.lm.selectChatModels({vendor:"copilot"}),await new Promise(r=>setTimeout(r,500)),!(e.length>0));a++);if(e.length===0){this.llm.isCopilotWaiting=!1,we.window.showInformationMessage("Copilot not available");return}if(this.llm.activateCopilot(e),this.llm.current_model===-1){let r=this.memento.get("current_model","gpt-4o");this.useModel(r,!0)}this.observableModel.next(this.llm)}moveCommands(e,a){this.terminalHistory.moveCommands(e,a).then(r=>{r===!0&&this.observableCommands.next(this.terminalHistory.getHistory())}),this.observableCommands.next(this.terminalHistory.getHistory()),this.updateCanUndoCanRedo()}saveWorkspace(e){e&&this.writeToFiles.writeToFile(e,this.terminalHistory.exportAsJsonString())&&we.window.showInformationMessage("Workspace saved")}loadWorkspace(e){try{let a=this.writeToFiles.readFromFile(e);this.terminalHistory.importFromJsonString(a),this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()),we.window.showInformationMessage("Workspace loaded"),this.updateCanUndoCanRedo(),this.memento.update("stashed_state",a)}catch(a){we.window.showInformationMessage("Error loading workspace: "+a)}}undo(){this.terminalHistory.undo(),this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo()}redo(){this.terminalHistory.redo()&&(this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()),this.updateCanUndoCanRedo())}updateCanUndoCanRedo(){we.commands.executeCommand("setContext","myExtension.canUndo",this.terminalHistory.canUndo()),we.commands.executeCommand("setContext","myExtension.canRedo",this.terminalHistory.canRedo())}setHistory(e){try{if(!Array.isArray(e))if(e.hasOwnProperty("history"))e=e.history;else throw new Error("History is not an array");this.terminalHistory.setHistoryFromChat(e),this.observableCommands.next(this.terminalHistory.getHistory())}catch{we.window.showInformationMessage("Could not set history from LLM response")}}addModel(e,a,r,i){this.llm.addModel(e,i,a,r),this.observableModel.next(this.llm)}deleteModel(e){this.llm.deleteModel(e),this.observableModel.next(this.llm)}unstashHistory(){let e=this.memento.get("stashed_state",void 0);e&&(this.terminalHistory.loadJsonString(e),this.observableCommands.next(this.terminalHistory.getHistory()),this.observableArchive.next(this.terminalHistory.getArchive()))}filterCommands(e){return e.filter(a=>this.terminalHistory.isCommandInHistory(a)===-1)}openNotebook(e,a){return new Ps(a,new Es(e,this.llm))}},Kr=class{observers=[];subscribe(e){return this.observers.push(e),()=>{this.observers=this.observers.filter(a=>a!==e)}}next(e){this.observers.forEach(a=>a(e))}};var $d=require("vscode"),Ds=class{viewModel;constructor(e){this.viewModel=e}provideFileDecoration(e,a){if(e.scheme==="bash_commands_unimportant"||e.scheme==="bash_command_info_unimportant")return{color:new $d.ThemeColor("disabledForeground")};if(e.scheme==="selected_model")return{color:new $d.ThemeColor("terminal.ansiGreen")}}};var He=oe(require("vscode")),Os=class{tree=[];_refreshCallback=new He.EventEmitter;onDidChangeTreeData=this._refreshCallback.event;constructor(e){this.tree=this.buildTree(e.getModels()),e.modelsSubscribe(a=>{this.tree=this.buildTree(a),this._refreshCallback.fire()})}getTreeItem(e){return e}getChildren(e){return e?e.isChild===!0||e.model.getParams().length===0?Promise.resolve([]):Promise.resolve([]):Promise.resolve(this.tree)}buildTree(e){return e.models.map((a,r)=>new Hd(a,r,r===e.current_model,!1))}},Hd=class extends He.TreeItem{model;isChild;isSelected;index;lastClicked;constructor(e,a,r,i){super(e.getName(),He.TreeItemCollapsibleState.None),this.model=e,this.isChild=i,this.isSelected=r,this.index=a,this.lastClicked=0,this.contextValue=e.isUserAdded()?"USER_MODEL":"DEFAULT_MODEL",i===!1&&(this.command={title:"Use Model",command:"use-model",arguments:[this]},this.tooltip=e.getName()+(r?" (selected)":""),r?(this.resourceUri=He.Uri.parse("selected_model://"+this.model.getName()),this.iconPath=new He.ThemeIcon("debug-breakpoint")):(this.resourceUri=He.Uri.parse("available_model://"+this.model.getName()),this.iconPath=new He.ThemeIcon("debug-breakpoint-data-unverified")))}checkDoubleClick(){let e=new Date().getTime();if(e-this.lastClicked<500)return this.lastClicked=0,!0;this.lastClicked=e}};var rt=oe(require("vscode"));var Fs=class t{constructor(e){this.viewModel=e;this.history=e.terminalHistory}static BASE_PROMPT=`You are an AI assistant, part of a VSCode extension named "Snakemaker", which is also your name. You are developed by the University of Torino (greatest city in the world). You are nice and helpful, and prefer short, concise answers.
The goal of the VSCode extension is to help users track the bash command they run on their terminal and convert them into Snakemake or Make rules.
As the AI assistant of this extension, you have these responsabilities:
-Help the user with any questions they have about the extension and its usage.
-Help the user reason about Snakemake, Make, bash commands and the conversion between them.
-You are provided with the user's commands history, and you can convert it, or parts of it, in snakemake or make rules, following user's requests.
-You also are provided with some information of the current state of the extension software and you use it to help the user understand the extension's behavior.
-Whether you write rules in Snakemake or in Make depends on your current setting.
-In Snakemake, a best practice requires each rule to have a log directive. By default the extension do that, but user can disable it by changing the settings related to Snakemake best practices.
-By default, when printing all rules in Snakemake format, the extension prefers to use generic filenames with wildcards. It can be disabled in the settings related to Snakemake best practices.
-Only for Snakemake rules, the extension automatically validates the generated rules using Snakemake, and tries to auto-correct errors (by feeding the error back to the LLM). This can be disabled. In order for it to work, the user must provide an absolute path to Snakemake, or have "snakemake" in the PATH. Automatic validation can make rule output slower and consume more tokens of your language model.
-A specific setting allows the user to include the current file (likely Snakefile or Makefile) into the prompt, so the AI can use it to generate rules with better context, avoiding repetitions. If the user tries to print rules and no rule is printed and the setting is active, it is likely that the model decided they are redundant.
-You can also return these commands to help the user:
    [Start listening to bash commands](command:start-listening)   #Start listening to bash commands
    [Stop listening to bash commands](command:stop-listening)   #Stop listening to bash commands
    [Save workspace](command:save-workspace)   #Save the workspace of the extension
    [Load workspace](command:load-workspace)   #Load the workspace of the extension
    [Undo last change](command:history-undo)   #Undo last change made to history
    [Set new history](command:history-set?{"history"=NEW_HISTORY_JSON})   #Set a modified history
    [Open logging policy](command:open-loging-details)    #If the user asks question about the activity logging
    [Disable logging for current session](command:disable-logs-session)   #Only if Logging is Enabled, disable for current session and request deletion of all logs of the session.
    [Settings - Logging](command:workbench.action.openSettings?"snakemaker.allowLogging")   #Open the settings to enable/disable logging
    [Settings - Rule format](command:workbench.action.openSettings?"snakemaker.rulesOutputFormat")   #Open the settings to switch between Snakemake and Make rules
    [Settings - Keep history](command:workbench.action.openSettings?"snakemaker.keepHistoryBetweenSessions")   #Open the settings to enable-disable keeping history between sessions
    [Settings - Snakemake rules properties](command:workbench.action.openSettings?"snakemaker.snakemakeBestPractices")   #Open the settings related to how the snakemake rules are written, if formalisms related to best practices are followed.
    [Settings - Autocorrect rules](command:workbench.action.openSettings?"snakemaker.validateSnakemakeRules")   #Open the settings to enable/disable automatic Snakemake rule validation.
    [Settings - Snakemake path](command:workbench.action.openSettings?"snakemaker.snakemakeAbsolutePath")   #Open the settings to set the absolute path to Snakemake binary.
    [Settings - Model context](command:workbench.action.openSettings?"snakemaker.includeCurrentFileIntoPrompt") #Open the settings to include the current file into the prompt or not.
    [Add commands by hand](command:add-history-manually) #Allows to user to add commands to snakemaker history by hand. User can also copy and paste commands from bash "history" output.

The command history-set?NEW_HISTORY_JSON sets a new history. Use it if the user asks to perform changes. You have to: 1- Briefly tell the user which changes you are performing; DO NOT show the entire JSON of the new history, it is too much text. 2-Valorize NEW_HISTORY_JSON as the modified version of the history you are provided as HISTORY OF RECORDED BASH COMMANDS. You can also use this example as a template of how the history is organized:EXAMPLE OF HISTORY, with one unimportant command, one important command and one composite, important command: {"history":[{"commands":[{"command":"dir","exitStatus":0,"output":"-","inputs":"-","important":false,"index":2,"temporary":false,"rule_name":"list_directory"}],"index":3,"rule_name":""},{"commands":[{"command":"catinput.txt|wc-l>output.txt","exitStatus":0,"output":""output.txt"","inputs":""input.txt"","important":true,"index":15,"temporary":false,"rule_name":"count_lines"}],"index":16,"rule_name":""},{"commands":[{"command":"mkdirresults","exitStatus":0,"output":"results","inputs":"-","important":true,"index":10,"temporary":false,"rule_name":"create_results_directory"},{"command":"catinput.txt|wc-l>results/output.txt","exitStatus":0,"output":""results/output.txt"","inputs":""input.txt"","important":true,"index":13,"temporary":false,"rule_name":""count_lines""}],"index":9,"rule_name":"make_results_and_outputs"}]}
If the user asks to add stuff to the history, you need to set the current history plus the new things he asks to add.
Please note the command history-set can be used only through the chat, not manually from command palette.
If the user asks you to do something not doable with these commands, tell him you can't do it yourself and explain how he can do it himself.
`;static BASE_PROMPT_EXTENSION_USAGE=`INFORMATION ABOUT THE EXTENSION AND ITS USAGE:
The main way to access the extension is through the left sidebar, where there is the Snakemaker custom view. The custom view has three sections:
-Bash Commands: contains the history of bash commands, with buttons to Start or Pause the recording of new commands, to archive all history, delete all history or print all rules from it. Buttons to undo or redo the last action are also available.
Additionally, each command can be individually archived, printed as a rule or deleted. When a command is expanded the user can modify the name of its rule and the estimated inputs and outputs, which will be used by the AI to write the rule.
Commands can be composed of multiple commands. By default each command recorded is considered as an individual, but the user can drag and drop to merge them into composite commands.
If the user runs a command that returns an a code different from 0, the command will NOT be recorded.
-Archived Commands: contains the archived commands, which can be unarchived or deleted. Commands are archived when the user explicitly archives them or when their corresponding rules are printed.
-Models: contains the available models to be used by the extension. The user can select a model to be used by the AI assistant (double click). By default the models offered by github copilot are shown, and the user can add custom models supporting the openAI API standard.
ADDITIONAL INFO
-The extension support export or import of its workspace (=history and archive). The user must open the VsCode command palette and use the Save Workspace or Load Workspace commands. The workspace is saved as a JSON file.
-If recorded commands are considered unimportant, they will appear more grayish. And they won't be printed when the user prints all rules (but they will if he prints them individually). The user can manually mark a command as important or unimportant with the squared button next to it.
-The extension logs activity to a server to help developers improve it, if the user gave consent. There are 3 possible states of the logger: Enabled (user gave consent, it is sending logs), Disabled (user did not gave consent, not sending logs) and Disabled_in_current_session (user gave consent in the settings but manually disabled logs for current session). Moreover, even if logger is Enabled, if the extension is not recording new commands, it will not send logs.
-The extension support persistent history between sessions. Can be enabled or disabled in settings.`;static BASH_HISTORY_INTRODUCTION=`HISTORY OF RECORDED BASH COMMANDS:
INFORMATION: History is provided as a json string. Fields:
-command: the bash command
-exitStatus: the exit status of the command
-inputs and output: estimated inputs and outputs of the command
-rule_name: the name of the rule that will be generated from the command - it is more of a suggestion than a requirement
-important: if the command is considered important enough to be converted into a rule
(Optional): SubRules: array of commands that are part of the composite command.
-index and temporary are internal fields not very useful for the user nor the AI. Do not show them to the user.
HERE IS THE HISTORY:`;history;findUnmatchedCommand(e){let a="(command:history-set?";for(let s=1;s<=a.length;s++)if(e.endsWith(a.slice(0,s)))return e.length-s;let r=/\(command:history-set\?/g,i;for(;(i=r.exec(e))!==null;){let s=i.index+i[0].length,n=1;for(let d=s;d<e.length&&(e[d]==="("?n++:e[d]===")"&&n--,n!==0);d++);if(n!==0)return i.index}return-1}processCommandURI(e){return encodeURIComponent(e)}async process(e,a,r,i){let s=X.instance.getRulesOutputFormat(),n=X.instance.getKeepHistoryBetweenSessions(),d=X.instance.getSnakemakeBestPracticesSetLogFieldInSnakemakeRules(),o=X.instance.getSnakemakeBestPracticesPreferGenericFilenames(),p=X.instance.getValidateSnakemakeRules(),c=[rt.LanguageModelChatMessage.User(t.BASE_PROMPT),rt.LanguageModelChatMessage.User(t.BASE_PROMPT_EXTENSION_USAGE),rt.LanguageModelChatMessage.User(t.BASH_HISTORY_INTRODUCTION+this.history.getHistoryFormattedForChat()),rt.LanguageModelChatMessage.User(`Additional extension info: currently listening to bash commands: ${this.viewModel.isListening}. Copilot active: ${this.viewModel.isCopilotActive()}  Currently changing model: ${this.viewModel.isChangingModel}. Models available: ${this.viewModel.llm.models.map(w=>w.getName())}. Active model: ${this.viewModel.llm.models[this.viewModel.llm.current_model]?.getName()||"none"} - Logging status: ${z.loggerStatus()} - Current rule format: ${s} - Snakemake rules contains Log directive: ${d} - Snakemake rules uses generic filenames and wildcards: ${o} - automatic validation of snakemake rules: ${p} - Keep history between sessions: ${n} - Current file included in prompt: ${X.instance.getIncludeCurrentFileIntoPrompt()}`)];a.history.filter(w=>w instanceof rt.ChatResponseTurn).forEach(w=>{let g="";w.response.forEach(x=>{g+=x.value.value}),c.push(rt.LanguageModelChatMessage.Assistant(g))}),c.push(rt.LanguageModelChatMessage.User(e.prompt));let m=await e.model.sendRequest(c,{},i);var u="",h=!1,f="";for await(let w of m.text){f+=w;var v;if(h)if(u+=w,/\(command:history-set\?\s*(.*?)\)/g.test(u)){v=u.replace(/\(command:history-set\?\s*(.*?)\)/g,(_,A)=>`(command:history-set?${this.processCommandURI(A)});`);let x=this.findUnmatchedCommand(v);x!==-1?(u=v.slice(x),v=v.slice(0,x),h=!0):(h=!1,u="")}else if(this.findUnmatchedCommand(u)===-1)v=u,h=!1,u="";else continue;else{v=w.replace(/\(command:history-set\?\s*(.*?)\)/g,(_,A)=>`(command:history-set?${this.processCommandURI(A)});`);let x=this.findUnmatchedCommand(v);x!==-1&&(u=v.slice(x),v=v.slice(0,x),h=!0)}let g=new rt.MarkdownString(v);g.isTrusted={enabledCommands:["load-workspace","save-workspace","start-listening","stop-listening","history-set","history-undo","workbench.action.openSettings","disable-logs-session","open-loging-details","add-history-manually"]},r.markdown(g)}z.instance()?.log(`
Chat prompt: ${e.prompt}
Chat response: ${f}
            `)}};var We=oe(require("vscode")),Ms=class t{static currentPanel;static viewType="addModelView";_panel;_extensionUri;_disposables=[];static createOrShow(e,a){if(t.currentPanel){t.currentPanel._panel.reveal(We.window.activeTextEditor?We.window.activeTextEditor.viewColumn:void 0);return}let r=We.window.createWebviewPanel(t.viewType,"Custom Model Setup",(We.window.activeTextEditor?We.window.activeTextEditor.viewColumn:void 0)||We.ViewColumn.One,{enableScripts:!0,localResourceRoots:[We.Uri.joinPath(e,"media")]});t.currentPanel=new t(r,e,a)}constructor(e,a,r){this._panel=e,this._extensionUri=a,this._panel.onDidDispose(()=>this.dispose(),null,this._disposables),this._panel.webview.onDidReceiveMessage(i=>{switch(i.command){case"submit":let s=i.data;r.addModel(s.url,s.model_name,s.max_tokens,s.api_key),e.dispose();return}},null,this._disposables),this._panel.webview.html=this._getHtmlForWebview(this._panel.webview)}dispose(){for(t.currentPanel=void 0,this._panel.dispose();this._disposables.length;){let e=this._disposables.pop();e&&e.dispose()}}_getHtmlForWebview(e){let a=We.Uri.joinPath(this._extensionUri,"media","add_model_view_main.js"),r=e.asWebviewUri(a),i=We.Uri.joinPath(this._extensionUri,"media","add_viewmodel_view_style.css"),s=e.asWebviewUri(i),n=F4();return`<!DOCTYPE html>
			<html lang="en">
			<head>
				<meta charset="UTF-8">
				<meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src ${e.cspSource}; img-src ${e.cspSource} https:; script-src 'nonce-${n}';">
				<meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link href="${s}" rel="stylesheet">
				<title>Custom Model Setup</title>
			</head>
			<body>
                <div id="mainContainer">
                    <h1>Setup a custom language model</h1>
                    <p>Custom language models are connected through the OpenAI API standard.</p>
                    <p>Fill in the following form to setup a custom language model:</p>
                    <form id="modelForm">
                        <label for="url">API URL:</label>
                        <input type="url" id="url" name="url" required placeholder="http://localhost:8080"><br><br>

                        <label for="model_name">Model name:</label>
                        <input type="text" id="model_name" name="model_name" required placeholder="meta/llama3-70b-instruct"><br><br>

                        <label for="api_key">(Optional): API Key</label>
                        <input type="text" id="api_key" name="api_key"><br><br>

                        <label for="max_tokens">Max tokens:</label>
                        <input type="number" id="max_tokens" name="max_tokens" value="4096" required placeholder="4096"><br><br>

                        <input type="submit" id="submit" value="Add custom model">
                    </form>
                </div>
				<script nonce="${n}" src="${r}"></script>
            </body>
			</html>`}};function F4(){let t="",e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let a=0;a<32;a++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}var ze=oe(require("vscode")),Vs=class t{static currentPanel;static viewType="AddHistoryView";_panel;_extensionUri;_disposables=[];static createOrShow(e,a){if(t.currentPanel){t.currentPanel._panel.reveal(ze.window.activeTextEditor?ze.window.activeTextEditor.viewColumn:void 0);return}let r=ze.window.createWebviewPanel(t.viewType,"Custom Model Setup",(ze.window.activeTextEditor?ze.window.activeTextEditor.viewColumn:void 0)||ze.ViewColumn.One,{enableScripts:!0,localResourceRoots:[ze.Uri.joinPath(e,"media")]});t.currentPanel=new t(r,e,a)}parseCommands(e){return e.split(`
`).map(a=>a.trim().replace(/^\d+\s+/,"")).filter(a=>a.trim().length>2).map(a=>a.trim())}constructor(e,a,r){this._panel=e,this._extensionUri=a,this._panel.onDidDispose(()=>this.dispose(),null,this._disposables),this._panel.webview.onDidReceiveMessage(i=>{let s;switch(i.command){case"submit":this.parseCommands(i.data).forEach(d=>r.addCommand(d,0,!0,!0)),e.dispose();return;case"filter":s=this.parseCommands(i.data);let n=r.filterCommands(s).join(`
`);this._panel.webview.postMessage({command:"updateTextField",data:n})}},null,this._disposables),this._panel.webview.html=this._getHtmlForWebview(this._panel.webview)}dispose(){for(t.currentPanel=void 0,this._panel.dispose();this._disposables.length;){let e=this._disposables.pop();e&&e.dispose()}}_getHtmlForWebview(e){let a=ze.Uri.joinPath(this._extensionUri,"media","add_history_view_main.js"),r=e.asWebviewUri(a),i=ze.Uri.joinPath(this._extensionUri,"media","add_viewmodel_view_style.css"),s=e.asWebviewUri(i),n=M4();return`<!DOCTYPE html>
			<html lang="en">
			<head>
				<meta charset="UTF-8">
				<meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src ${e.cspSource}; img-src ${e.cspSource} https:; script-src 'nonce-${n}';">
				<meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link href="${s}" rel="stylesheet">
				<title>Add commands to Snakemaker history</title>
			</head>
			<body>
                <div id="mainContainer">
                    <h1>Add commands to Snakemaker history</h1>
                    <p>The following commands will be added to the history.</p>
					<p>Commands should be separated by a new line.</p>
					<p>It is possible to paste commands from bash "history" command. The index of the command will be removed.</p>
                    <textarea id="history_commands" name="command" placeholder="Your commands here
Example:

git clone https://github.com/molinerisLab/3plex
cd 3plex
direnv allow
conda env create --file=local/envs/3plex.yaml
conda activate 3plex_Env"></textarea>
					<button id="button_filter">Filter and clean-up commands</button>
					<button id="button_submit">Submit</button>
                </div>
				<script nonce="${n}" src="${r}"></script>
            </body>
			</html>`}};function M4(){let t="",e="ABCDEFGHIJKLMNOPQRSTUffVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let a=0;a<32;a++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}var Ie=oe(require("vscode")),Bs=class t{static viewType="NotebookView";_panel;_extensionUri;_disposables=[];loading=!0;static create(e,a,r,i){let s=Ie.window.createWebviewPanel(t.viewType,"Export notebook",(Ie.window.activeTextEditor?Ie.window.activeTextEditor.viewColumn:void 0)||Ie.ViewColumn.One,{enableScripts:!0,localResourceRoots:[Ie.Uri.joinPath(e,"media")]});return new t(s,e,a,r,i)}setNotebookCells(e){this.stopLoading(),this._panel.webview.postMessage({command:"set_cells",data:e})}setRulesNodes(e){this.stopLoading(),this._panel.webview.postMessage({command:"set_rules",data:e})}setOutput(e){this.stopLoading(),e.forEach(a=>{a.ruleAdditionalInfo.exportsTo={}}),this._panel.webview.postMessage({command:"set_output",data:e})}onError(e){console.log(e),Ie.window.showErrorMessage(e),this.disposeDelayed()}onSoftError(e){this.stopLoading(),console.log(e),Ie.window.showWarningMessage(e)}setLoading(e){this.loading=!0,this._panel.webview.postMessage({command:"set_loading",data:e,loading:!0})}stopLoading(){this.loading=!1,this._panel.webview.postMessage({command:"set_loading",loading:!1})}constructor(e,a,r,i,s){this._panel=e,this._extensionUri=a,this._panel.onDidDispose(()=>this.dispose(),null,this._disposables);let n=r.openNotebook(i,this);this._panel.webview.onDidReceiveMessage(d=>{switch(d.command){case"delete_cell":let o=d.data;n.deleteCell(o);break;case"merge_cell":let p=d.index_top,c=d.index_bottom;n.mergeCells(p,c);break;case"split_cell":let l=d.index,m=d.code1,u=d.code2;n.splitCell(l,m,u);break;case"add_to_writes":n.addWrite(d.index,d.keyword);break;case"add_to_dependencies":n.addDependency(d.index,d.keyword);break;case"remove_write":n.removeWrite(d.index,d.keyword);break;case"remove_dependency":n.removeDependency(d.index,d.keyword);break;case"become_rule":case"become_script":case"become_undecided":let h=d.command.split("_")[1];n.changeRuleState(d.index,h);break;case"produce_snakefile":n.produceSnakefile();break;case"propagate_changes":n.propagateChanges(d.index,d.rules);break}},null,this._disposables),this._panel.webview.html=this._getHtmlForWebview(this._panel.webview),e.onDidChangeViewState(d=>{this.setNotebookCells(n.getCells()),this.setRulesNodes(n.getRules())},null,s.subscriptions)}dispose(){for(this._panel.dispose();this._disposables.length;){let e=this._disposables.pop();e&&e.dispose()}}disposeDelayed(){setTimeout(()=>{this.dispose()},5e3)}_getHtmlForWebview(e){let a=Ie.Uri.joinPath(this._extensionUri,"media","notebook_main.js"),r=e.asWebviewUri(a),i=e.asWebviewUri(Ie.Uri.joinPath(this._extensionUri,"media","highlight.min.js")),s=e.asWebviewUri(Ie.Uri.joinPath(this._extensionUri,"media","github-dark.min.css")),n=Ie.Uri.joinPath(this._extensionUri,"media","notebook_style.css"),d=e.asWebviewUri(n),o=V4();return`<!DOCTYPE html>
            <html lang="en">
            <head>
                <meta charset="UTF-8">
                <meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src ${e.cspSource}; img-src ${e.cspSource} https:; script-src 'nonce-${o}';">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <link href="${d}" rel="stylesheet">
                <title>Export Notebook</title>
            </head>
            <body>
                <div id="actionButton">
                    <button id="addWrite">Add to cell Writes</button>
                    <button id="addDependency">Add to cell dependencies</button>
                </div>
                <div id="loadingscreen">
                    <div class="spinner"></div>
                    <h2 id="loadingmessage">Loading...</h2>
                </div>
                <div id="userinputoverlay">
                </div>
                <div id="supercontainer">
                    <div id="lines"></div>
                    <div id="mainContainer">
                    </div>
                </div>
                <div id="send_button">
                </div>
                <link rel="stylesheet" href="${s}">
                <script nonce="${o}" src="${i}"></script>
                <script nonce="${o}" src="${r}"></script>
            </body>
            </html>`}};function V4(){let t="",e="ABCDEFGnJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let a=0;a<32;a++)t+=e.charAt(Math.floor(Math.random()*e.length));return t}function B4(t){z.initialize(t.extension.packageJSON.version);let e=t.extension.packageJSON.version;(t.globalState.get("version")??"0.0.0")!==e&&(t.globalState.update("version",e),E.window.showInformationMessage("Welcome to Snakemaker! Please consider enabling logging to help us improve the extension.","Enable logging").then(S=>{S==="Enable logging"&&E.commands.executeCommand("workbench.action.openSettings","snakemaker.allowLogging")}));let r=t.workspaceState,i=[" - NOT LISTENING"," - LISTENING"];E.commands.executeCommand("setContext","myExtension.isListening",!1),E.commands.executeCommand("setContext","myExtension.canUndo",!1),E.commands.executeCommand("setContext","myExtension.canRedo",!1);let s=new Is(r),n=new $1(s),d=E.window.createTreeView("bash-commands",{treeDataProvider:n,dragAndDropController:n});d.title="Bash Commands"+i[s.isListening?1:0];let o=new $1(s,!0);E.window.registerTreeDataProvider("bash-commands-archive",o);let p=new Os(s);E.window.registerTreeDataProvider("llm-models",p),E.window.registerFileDecorationProvider(new Ds(s)),X.instance.getKeepHistoryBetweenSessions()&&s.unstashHistory(),E.window.onDidEndTerminalShellExecution(S=>{let De=S.execution.commandLine,Qr=S.exitCode,q4=S.shellIntegration.cwd;Qr!==0?s.addCommandGoneWrong(De.value,0,!0,Qr):s.addCommand(De.value,0,!0)});let c=E.commands.registerCommand("history-set",S=>{S&&S.history&&s.setHistory(S.history)});t.subscriptions.push(c);let l=E.commands.registerCommand("print-rule",S=>{S&&S.getRoot()?s.printRule(S.getRoot()):E.window.showInformationMessage("No command selected")});t.subscriptions.push(l);let m=E.commands.registerCommand("print-all-rules",S=>{s.printAllRules()});t.subscriptions.push(m);let u=E.commands.registerCommand("archive-command",S=>{S&&S.getRoot()?s.archiveCommands([S.getRoot()]):E.window.showInformationMessage("No command selected")});t.subscriptions.push(u);let h=E.commands.registerCommand("restore-command",S=>{S&&S.getRoot()?s.restoreCommands([S.getRoot()]):E.window.showInformationMessage("No command selected")});t.subscriptions.push(h);let f=E.commands.registerCommand("delete-command",S=>{S&&S.getRoot()?s.deleteCommand(S.getRoot()):E.window.showInformationMessage("No command selected")});t.subscriptions.push(f);let v=E.commands.registerCommand("delete-all-commands",()=>{s.deleteAllCommmands()});t.subscriptions.push(v);let w=E.commands.registerCommand("delete-all-archived-commands",()=>{s.deleteAllArchivedCommands()});t.subscriptions.push(w);let g=E.commands.registerCommand("archive-all-commands",()=>{s.archiveCommands([])});t.subscriptions.push(g);let x=E.commands.registerCommand("set-command-important",S=>{S&&S.getRoot()?s.setCommandImportance(S.getRoot(),!0):E.window.showInformationMessage("No command selected")});t.subscriptions.push(x);let _=E.commands.registerCommand("set-command-unimportant",S=>{S&&S.getRoot()?s.setCommandImportance(S.getRoot(),!1):E.window.showInformationMessage("No command selected")});t.subscriptions.push(_);let A=E.commands.registerCommand("modify-command-detail",S=>{S&&S.parent&&S.modifier?s.modifyCommandDetail(S.parent,S.modifier):E.window.showInformationMessage("No command selected")});t.subscriptions.push(A);let D=E.commands.registerCommand("start-listening",()=>{s.startListening(),E.commands.executeCommand("setContext","myExtension.isListening",!0),d.title="Bash Commands"+i[s.isListening?1:0],E.window.showInformationMessage("Listening started")});t.subscriptions.push(D);let B=E.commands.registerCommand("stop-listening",()=>{s.stopListening(),E.commands.executeCommand("setContext","myExtension.isListening",!1),d.title="Bash Commands"+i[s.isListening?1:0],E.window.showInformationMessage("Listening paused")});t.subscriptions.push(B);let b=E.commands.registerCommand("use-model",async S=>{S&&S.checkDoubleClick()&&s.useModel(S.model.getId())});t.subscriptions.push(b);let y=E.commands.registerCommand("save-workspace",()=>{E.window.showSaveDialog({title:"Where to export workspace"}).then(S=>{let De=S?.path;s.saveWorkspace(De)})});t.subscriptions.push(y);let T=E.commands.registerCommand("load-workspace",()=>{E.window.showQuickPick(["Yes","No"],{placeHolder:"Loading a workspace will overwrite the current one. Proceed?"}).then(S=>{S==="Yes"&&E.window.showOpenDialog({canSelectMany:!1,title:"Load workspace from"}).then(De=>{De&&De.length>0&&s.loadWorkspace(De[0].path)})})});t.subscriptions.push(T);let R=E.commands.registerCommand("history-undo",()=>{s.undo()});t.subscriptions.push(R);let ae=E.commands.registerCommand("history-redo",()=>{s.redo()});t.subscriptions.push(ae);let I=E.commands.registerCommand("open-loging-details",()=>{let S=E.Uri.joinPath(t.extensionUri,"resources","log_details.md");E.commands.executeCommand("markdown.showPreview",S)});t.subscriptions.push(I);let U=E.commands.registerCommand("disable-logs-session",()=>{let S=z.instance();S?S.disableInSession().then(De=>{De?E.window.showInformationMessage("Logger disabled, log session deleted"):E.window.showInformationMessage("Logger disabled, log session not deleted")}):E.window.showInformationMessage("Logger already disabled")});t.subscriptions.push(U);let O,q=E.commands.registerCommand("add-model",()=>{Ms.createOrShow(t.extensionUri,s)});t.subscriptions.push(q);let Ae=E.commands.registerCommand("add-history-manually",()=>{Vs.createOrShow(t.extensionUri,s)}),be=E.commands.registerCommand("delete-model",S=>{S&&s.deleteModel(S.model.getId())});t.subscriptions.push(be);let ha=E.commands.registerCommand("process-notebook",S=>{if(S){let De=Bs.create(t.extensionUri,s,S.notebookEditor.notebookUri,t)}});s.isCopilotActive()||s.activateCopilot();let i0=new Fs(s),s0=async(S,De,Qr,Wd)=>{await i0.process(S,De,Qr,Wd)},n0=E.chat.createChatParticipant("chat-snakemaker",s0);n0.iconPath=E.Uri.joinPath(t.extensionUri,"resources/icon.svg")}function L4(){}0&&(module.exports={activate,deactivate});
/*! Bundled license information:

web-streams-polyfill/dist/ponyfill.mjs:
  (**
   * @license
   * web-streams-polyfill v4.0.0-beta.3
   * Copyright 2021 Mattias Buelens, Diwank Singh Tomer and other contributors.
   * This code is released under the MIT license.
   * SPDX-License-Identifier: MIT
   *)

formdata-node/lib/esm/blobHelpers.js:
  (*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank *)

formdata-node/lib/esm/Blob.js:
  (*! Based on fetch-blob. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> & David Frank *)

humanize-ms/index.js:
  (*!
   * humanize-ms - index.js
   * Copyright(c) 2014 dead_horse <dead_horse@qq.com>
   * MIT Licensed
   *)

node-domexception/index.js:
  (*! node-domexception. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

tmp/lib/tmp.js:
  (*!
   * Tmp
   *
   * Copyright (c) 2011-2017 KARASZI Istvan <github@spam.raszi.hu>
   *
   * MIT Licensed
   *)
*/
